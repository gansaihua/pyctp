#include "ThostFtdcUserApiStruct.h"

#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;


inline py::str encoding_cast(const char a[], const char* encoding = "gb2312") {
	std::string s = a;
	PyObject* o = PyUnicode_Decode(s.data(), s.length(), encoding, "Decode fail.");
	return py::reinterpret_borrow<py::str>(o);
};


void init_structs(py::module_& m) {

	py::class_<CThostFtdcDisseminationField>(m, "CThostFtdcDisseminationField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcDisseminationField& a) {return CThostFtdcDisseminationField(a);})
		.def_readwrite("SequenceSeries", &CThostFtdcDisseminationField::SequenceSeries)
		.def_readwrite("SequenceNo", &CThostFtdcDisseminationField::SequenceNo)
		.def("to_dict", [](const CThostFtdcDisseminationField& a) {py::dict d; d["SequenceSeries"] = a.SequenceSeries; d["SequenceNo"] = a.SequenceNo; return d;});

	py::class_<CThostFtdcReqUserLoginField>(m, "CThostFtdcReqUserLoginField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcReqUserLoginField& a) {return CThostFtdcReqUserLoginField(a);})
		.def_property("TradingDay", [](const CThostFtdcReqUserLoginField& a) {return encoding_cast(a.TradingDay);}, [](CThostFtdcReqUserLoginField& a, char c[]) {strcpy(a.TradingDay, c);})
		.def_property("BrokerID", [](const CThostFtdcReqUserLoginField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcReqUserLoginField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("UserID", [](const CThostFtdcReqUserLoginField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcReqUserLoginField& a, char c[]) {strcpy(a.UserID, c);})
		.def_property("Password", [](const CThostFtdcReqUserLoginField& a) {return encoding_cast(a.Password);}, [](CThostFtdcReqUserLoginField& a, char c[]) {strcpy(a.Password, c);})
		.def_property("UserProductInfo", [](const CThostFtdcReqUserLoginField& a) {return encoding_cast(a.UserProductInfo);}, [](CThostFtdcReqUserLoginField& a, char c[]) {strcpy(a.UserProductInfo, c);})
		.def_property("InterfaceProductInfo", [](const CThostFtdcReqUserLoginField& a) {return encoding_cast(a.InterfaceProductInfo);}, [](CThostFtdcReqUserLoginField& a, char c[]) {strcpy(a.InterfaceProductInfo, c);})
		.def_property("ProtocolInfo", [](const CThostFtdcReqUserLoginField& a) {return encoding_cast(a.ProtocolInfo);}, [](CThostFtdcReqUserLoginField& a, char c[]) {strcpy(a.ProtocolInfo, c);})
		.def_property("MacAddress", [](const CThostFtdcReqUserLoginField& a) {return encoding_cast(a.MacAddress);}, [](CThostFtdcReqUserLoginField& a, char c[]) {strcpy(a.MacAddress, c);})
		.def_property("OneTimePassword", [](const CThostFtdcReqUserLoginField& a) {return encoding_cast(a.OneTimePassword);}, [](CThostFtdcReqUserLoginField& a, char c[]) {strcpy(a.OneTimePassword, c);})
		.def_property("reserve1", [](const CThostFtdcReqUserLoginField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcReqUserLoginField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("LoginRemark", [](const CThostFtdcReqUserLoginField& a) {return encoding_cast(a.LoginRemark);}, [](CThostFtdcReqUserLoginField& a, char c[]) {strcpy(a.LoginRemark, c);})
		.def_readwrite("ClientIPPort", &CThostFtdcReqUserLoginField::ClientIPPort)
		.def_property("ClientIPAddress", [](const CThostFtdcReqUserLoginField& a) {return encoding_cast(a.ClientIPAddress);}, [](CThostFtdcReqUserLoginField& a, char c[]) {strcpy(a.ClientIPAddress, c);})
		.def("to_dict", [](const CThostFtdcReqUserLoginField& a) {py::dict d; d["TradingDay"] = encoding_cast(a.TradingDay); d["BrokerID"] = encoding_cast(a.BrokerID); d["UserID"] = encoding_cast(a.UserID); d["Password"] = encoding_cast(a.Password); d["UserProductInfo"] = encoding_cast(a.UserProductInfo); d["InterfaceProductInfo"] = encoding_cast(a.InterfaceProductInfo); d["ProtocolInfo"] = encoding_cast(a.ProtocolInfo); d["MacAddress"] = encoding_cast(a.MacAddress); d["OneTimePassword"] = encoding_cast(a.OneTimePassword); d["reserve1"] = encoding_cast(a.reserve1); d["LoginRemark"] = encoding_cast(a.LoginRemark); d["ClientIPPort"] = a.ClientIPPort; d["ClientIPAddress"] = encoding_cast(a.ClientIPAddress); return d;});

	py::class_<CThostFtdcRspUserLoginField>(m, "CThostFtdcRspUserLoginField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcRspUserLoginField& a) {return CThostFtdcRspUserLoginField(a);})
		.def_property("TradingDay", [](const CThostFtdcRspUserLoginField& a) {return encoding_cast(a.TradingDay);}, [](CThostFtdcRspUserLoginField& a, char c[]) {strcpy(a.TradingDay, c);})
		.def_property("LoginTime", [](const CThostFtdcRspUserLoginField& a) {return encoding_cast(a.LoginTime);}, [](CThostFtdcRspUserLoginField& a, char c[]) {strcpy(a.LoginTime, c);})
		.def_property("BrokerID", [](const CThostFtdcRspUserLoginField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcRspUserLoginField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("UserID", [](const CThostFtdcRspUserLoginField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcRspUserLoginField& a, char c[]) {strcpy(a.UserID, c);})
		.def_property("SystemName", [](const CThostFtdcRspUserLoginField& a) {return encoding_cast(a.SystemName);}, [](CThostFtdcRspUserLoginField& a, char c[]) {strcpy(a.SystemName, c);})
		.def_readwrite("FrontID", &CThostFtdcRspUserLoginField::FrontID)
		.def_readwrite("SessionID", &CThostFtdcRspUserLoginField::SessionID)
		.def_property("MaxOrderRef", [](const CThostFtdcRspUserLoginField& a) {return encoding_cast(a.MaxOrderRef);}, [](CThostFtdcRspUserLoginField& a, char c[]) {strcpy(a.MaxOrderRef, c);})
		.def_property("SHFETime", [](const CThostFtdcRspUserLoginField& a) {return encoding_cast(a.SHFETime);}, [](CThostFtdcRspUserLoginField& a, char c[]) {strcpy(a.SHFETime, c);})
		.def_property("DCETime", [](const CThostFtdcRspUserLoginField& a) {return encoding_cast(a.DCETime);}, [](CThostFtdcRspUserLoginField& a, char c[]) {strcpy(a.DCETime, c);})
		.def_property("CZCETime", [](const CThostFtdcRspUserLoginField& a) {return encoding_cast(a.CZCETime);}, [](CThostFtdcRspUserLoginField& a, char c[]) {strcpy(a.CZCETime, c);})
		.def_property("FFEXTime", [](const CThostFtdcRspUserLoginField& a) {return encoding_cast(a.FFEXTime);}, [](CThostFtdcRspUserLoginField& a, char c[]) {strcpy(a.FFEXTime, c);})
		.def_property("INETime", [](const CThostFtdcRspUserLoginField& a) {return encoding_cast(a.INETime);}, [](CThostFtdcRspUserLoginField& a, char c[]) {strcpy(a.INETime, c);})
		.def("to_dict", [](const CThostFtdcRspUserLoginField& a) {py::dict d; d["TradingDay"] = encoding_cast(a.TradingDay); d["LoginTime"] = encoding_cast(a.LoginTime); d["BrokerID"] = encoding_cast(a.BrokerID); d["UserID"] = encoding_cast(a.UserID); d["SystemName"] = encoding_cast(a.SystemName); d["FrontID"] = a.FrontID; d["SessionID"] = a.SessionID; d["MaxOrderRef"] = encoding_cast(a.MaxOrderRef); d["SHFETime"] = encoding_cast(a.SHFETime); d["DCETime"] = encoding_cast(a.DCETime); d["CZCETime"] = encoding_cast(a.CZCETime); d["FFEXTime"] = encoding_cast(a.FFEXTime); d["INETime"] = encoding_cast(a.INETime); return d;});

	py::class_<CThostFtdcUserLogoutField>(m, "CThostFtdcUserLogoutField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcUserLogoutField& a) {return CThostFtdcUserLogoutField(a);})
		.def_property("BrokerID", [](const CThostFtdcUserLogoutField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcUserLogoutField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("UserID", [](const CThostFtdcUserLogoutField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcUserLogoutField& a, char c[]) {strcpy(a.UserID, c);})
		.def("to_dict", [](const CThostFtdcUserLogoutField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["UserID"] = encoding_cast(a.UserID); return d;});

	py::class_<CThostFtdcForceUserLogoutField>(m, "CThostFtdcForceUserLogoutField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcForceUserLogoutField& a) {return CThostFtdcForceUserLogoutField(a);})
		.def_property("BrokerID", [](const CThostFtdcForceUserLogoutField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcForceUserLogoutField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("UserID", [](const CThostFtdcForceUserLogoutField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcForceUserLogoutField& a, char c[]) {strcpy(a.UserID, c);})
		.def("to_dict", [](const CThostFtdcForceUserLogoutField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["UserID"] = encoding_cast(a.UserID); return d;});

	py::class_<CThostFtdcReqAuthenticateField>(m, "CThostFtdcReqAuthenticateField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcReqAuthenticateField& a) {return CThostFtdcReqAuthenticateField(a);})
		.def_property("BrokerID", [](const CThostFtdcReqAuthenticateField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcReqAuthenticateField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("UserID", [](const CThostFtdcReqAuthenticateField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcReqAuthenticateField& a, char c[]) {strcpy(a.UserID, c);})
		.def_property("UserProductInfo", [](const CThostFtdcReqAuthenticateField& a) {return encoding_cast(a.UserProductInfo);}, [](CThostFtdcReqAuthenticateField& a, char c[]) {strcpy(a.UserProductInfo, c);})
		.def_property("AuthCode", [](const CThostFtdcReqAuthenticateField& a) {return encoding_cast(a.AuthCode);}, [](CThostFtdcReqAuthenticateField& a, char c[]) {strcpy(a.AuthCode, c);})
		.def_property("AppID", [](const CThostFtdcReqAuthenticateField& a) {return encoding_cast(a.AppID);}, [](CThostFtdcReqAuthenticateField& a, char c[]) {strcpy(a.AppID, c);})
		.def("to_dict", [](const CThostFtdcReqAuthenticateField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["UserID"] = encoding_cast(a.UserID); d["UserProductInfo"] = encoding_cast(a.UserProductInfo); d["AuthCode"] = encoding_cast(a.AuthCode); d["AppID"] = encoding_cast(a.AppID); return d;});

	py::class_<CThostFtdcRspAuthenticateField>(m, "CThostFtdcRspAuthenticateField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcRspAuthenticateField& a) {return CThostFtdcRspAuthenticateField(a);})
		.def_property("BrokerID", [](const CThostFtdcRspAuthenticateField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcRspAuthenticateField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("UserID", [](const CThostFtdcRspAuthenticateField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcRspAuthenticateField& a, char c[]) {strcpy(a.UserID, c);})
		.def_property("UserProductInfo", [](const CThostFtdcRspAuthenticateField& a) {return encoding_cast(a.UserProductInfo);}, [](CThostFtdcRspAuthenticateField& a, char c[]) {strcpy(a.UserProductInfo, c);})
		.def_property("AppID", [](const CThostFtdcRspAuthenticateField& a) {return encoding_cast(a.AppID);}, [](CThostFtdcRspAuthenticateField& a, char c[]) {strcpy(a.AppID, c);})
		.def_readwrite("AppType", &CThostFtdcRspAuthenticateField::AppType)
		.def("to_dict", [](const CThostFtdcRspAuthenticateField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["UserID"] = encoding_cast(a.UserID); d["UserProductInfo"] = encoding_cast(a.UserProductInfo); d["AppID"] = encoding_cast(a.AppID); d["AppType"] = a.AppType; return d;});

	py::class_<CThostFtdcAuthenticationInfoField>(m, "CThostFtdcAuthenticationInfoField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcAuthenticationInfoField& a) {return CThostFtdcAuthenticationInfoField(a);})
		.def_property("BrokerID", [](const CThostFtdcAuthenticationInfoField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcAuthenticationInfoField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("UserID", [](const CThostFtdcAuthenticationInfoField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcAuthenticationInfoField& a, char c[]) {strcpy(a.UserID, c);})
		.def_property("UserProductInfo", [](const CThostFtdcAuthenticationInfoField& a) {return encoding_cast(a.UserProductInfo);}, [](CThostFtdcAuthenticationInfoField& a, char c[]) {strcpy(a.UserProductInfo, c);})
		.def_property("AuthInfo", [](const CThostFtdcAuthenticationInfoField& a) {return encoding_cast(a.AuthInfo);}, [](CThostFtdcAuthenticationInfoField& a, char c[]) {strcpy(a.AuthInfo, c);})
		.def_readwrite("IsResult", &CThostFtdcAuthenticationInfoField::IsResult)
		.def_property("AppID", [](const CThostFtdcAuthenticationInfoField& a) {return encoding_cast(a.AppID);}, [](CThostFtdcAuthenticationInfoField& a, char c[]) {strcpy(a.AppID, c);})
		.def_readwrite("AppType", &CThostFtdcAuthenticationInfoField::AppType)
		.def_property("reserve1", [](const CThostFtdcAuthenticationInfoField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcAuthenticationInfoField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("ClientIPAddress", [](const CThostFtdcAuthenticationInfoField& a) {return encoding_cast(a.ClientIPAddress);}, [](CThostFtdcAuthenticationInfoField& a, char c[]) {strcpy(a.ClientIPAddress, c);})
		.def("to_dict", [](const CThostFtdcAuthenticationInfoField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["UserID"] = encoding_cast(a.UserID); d["UserProductInfo"] = encoding_cast(a.UserProductInfo); d["AuthInfo"] = encoding_cast(a.AuthInfo); d["IsResult"] = a.IsResult; d["AppID"] = encoding_cast(a.AppID); d["AppType"] = a.AppType; d["reserve1"] = encoding_cast(a.reserve1); d["ClientIPAddress"] = encoding_cast(a.ClientIPAddress); return d;});

	py::class_<CThostFtdcRspUserLogin2Field>(m, "CThostFtdcRspUserLogin2Field")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcRspUserLogin2Field& a) {return CThostFtdcRspUserLogin2Field(a);})
		.def_property("TradingDay", [](const CThostFtdcRspUserLogin2Field& a) {return encoding_cast(a.TradingDay);}, [](CThostFtdcRspUserLogin2Field& a, char c[]) {strcpy(a.TradingDay, c);})
		.def_property("LoginTime", [](const CThostFtdcRspUserLogin2Field& a) {return encoding_cast(a.LoginTime);}, [](CThostFtdcRspUserLogin2Field& a, char c[]) {strcpy(a.LoginTime, c);})
		.def_property("BrokerID", [](const CThostFtdcRspUserLogin2Field& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcRspUserLogin2Field& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("UserID", [](const CThostFtdcRspUserLogin2Field& a) {return encoding_cast(a.UserID);}, [](CThostFtdcRspUserLogin2Field& a, char c[]) {strcpy(a.UserID, c);})
		.def_property("SystemName", [](const CThostFtdcRspUserLogin2Field& a) {return encoding_cast(a.SystemName);}, [](CThostFtdcRspUserLogin2Field& a, char c[]) {strcpy(a.SystemName, c);})
		.def_readwrite("FrontID", &CThostFtdcRspUserLogin2Field::FrontID)
		.def_readwrite("SessionID", &CThostFtdcRspUserLogin2Field::SessionID)
		.def_property("MaxOrderRef", [](const CThostFtdcRspUserLogin2Field& a) {return encoding_cast(a.MaxOrderRef);}, [](CThostFtdcRspUserLogin2Field& a, char c[]) {strcpy(a.MaxOrderRef, c);})
		.def_property("SHFETime", [](const CThostFtdcRspUserLogin2Field& a) {return encoding_cast(a.SHFETime);}, [](CThostFtdcRspUserLogin2Field& a, char c[]) {strcpy(a.SHFETime, c);})
		.def_property("DCETime", [](const CThostFtdcRspUserLogin2Field& a) {return encoding_cast(a.DCETime);}, [](CThostFtdcRspUserLogin2Field& a, char c[]) {strcpy(a.DCETime, c);})
		.def_property("CZCETime", [](const CThostFtdcRspUserLogin2Field& a) {return encoding_cast(a.CZCETime);}, [](CThostFtdcRspUserLogin2Field& a, char c[]) {strcpy(a.CZCETime, c);})
		.def_property("FFEXTime", [](const CThostFtdcRspUserLogin2Field& a) {return encoding_cast(a.FFEXTime);}, [](CThostFtdcRspUserLogin2Field& a, char c[]) {strcpy(a.FFEXTime, c);})
		.def_property("INETime", [](const CThostFtdcRspUserLogin2Field& a) {return encoding_cast(a.INETime);}, [](CThostFtdcRspUserLogin2Field& a, char c[]) {strcpy(a.INETime, c);})
		.def_property("RandomString", [](const CThostFtdcRspUserLogin2Field& a) {return encoding_cast(a.RandomString);}, [](CThostFtdcRspUserLogin2Field& a, char c[]) {strcpy(a.RandomString, c);})
		.def("to_dict", [](const CThostFtdcRspUserLogin2Field& a) {py::dict d; d["TradingDay"] = encoding_cast(a.TradingDay); d["LoginTime"] = encoding_cast(a.LoginTime); d["BrokerID"] = encoding_cast(a.BrokerID); d["UserID"] = encoding_cast(a.UserID); d["SystemName"] = encoding_cast(a.SystemName); d["FrontID"] = a.FrontID; d["SessionID"] = a.SessionID; d["MaxOrderRef"] = encoding_cast(a.MaxOrderRef); d["SHFETime"] = encoding_cast(a.SHFETime); d["DCETime"] = encoding_cast(a.DCETime); d["CZCETime"] = encoding_cast(a.CZCETime); d["FFEXTime"] = encoding_cast(a.FFEXTime); d["INETime"] = encoding_cast(a.INETime); d["RandomString"] = encoding_cast(a.RandomString); return d;});

	py::class_<CThostFtdcTransferHeaderField>(m, "CThostFtdcTransferHeaderField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcTransferHeaderField& a) {return CThostFtdcTransferHeaderField(a);})
		.def_property("Version", [](const CThostFtdcTransferHeaderField& a) {return encoding_cast(a.Version);}, [](CThostFtdcTransferHeaderField& a, char c[]) {strcpy(a.Version, c);})
		.def_property("TradeCode", [](const CThostFtdcTransferHeaderField& a) {return encoding_cast(a.TradeCode);}, [](CThostFtdcTransferHeaderField& a, char c[]) {strcpy(a.TradeCode, c);})
		.def_property("TradeDate", [](const CThostFtdcTransferHeaderField& a) {return encoding_cast(a.TradeDate);}, [](CThostFtdcTransferHeaderField& a, char c[]) {strcpy(a.TradeDate, c);})
		.def_property("TradeTime", [](const CThostFtdcTransferHeaderField& a) {return encoding_cast(a.TradeTime);}, [](CThostFtdcTransferHeaderField& a, char c[]) {strcpy(a.TradeTime, c);})
		.def_property("TradeSerial", [](const CThostFtdcTransferHeaderField& a) {return encoding_cast(a.TradeSerial);}, [](CThostFtdcTransferHeaderField& a, char c[]) {strcpy(a.TradeSerial, c);})
		.def_property("FutureID", [](const CThostFtdcTransferHeaderField& a) {return encoding_cast(a.FutureID);}, [](CThostFtdcTransferHeaderField& a, char c[]) {strcpy(a.FutureID, c);})
		.def_property("BankID", [](const CThostFtdcTransferHeaderField& a) {return encoding_cast(a.BankID);}, [](CThostFtdcTransferHeaderField& a, char c[]) {strcpy(a.BankID, c);})
		.def_property("BankBrchID", [](const CThostFtdcTransferHeaderField& a) {return encoding_cast(a.BankBrchID);}, [](CThostFtdcTransferHeaderField& a, char c[]) {strcpy(a.BankBrchID, c);})
		.def_property("OperNo", [](const CThostFtdcTransferHeaderField& a) {return encoding_cast(a.OperNo);}, [](CThostFtdcTransferHeaderField& a, char c[]) {strcpy(a.OperNo, c);})
		.def_property("DeviceID", [](const CThostFtdcTransferHeaderField& a) {return encoding_cast(a.DeviceID);}, [](CThostFtdcTransferHeaderField& a, char c[]) {strcpy(a.DeviceID, c);})
		.def_property("RecordNum", [](const CThostFtdcTransferHeaderField& a) {return encoding_cast(a.RecordNum);}, [](CThostFtdcTransferHeaderField& a, char c[]) {strcpy(a.RecordNum, c);})
		.def_readwrite("SessionID", &CThostFtdcTransferHeaderField::SessionID)
		.def_readwrite("RequestID", &CThostFtdcTransferHeaderField::RequestID)
		.def("to_dict", [](const CThostFtdcTransferHeaderField& a) {py::dict d; d["Version"] = encoding_cast(a.Version); d["TradeCode"] = encoding_cast(a.TradeCode); d["TradeDate"] = encoding_cast(a.TradeDate); d["TradeTime"] = encoding_cast(a.TradeTime); d["TradeSerial"] = encoding_cast(a.TradeSerial); d["FutureID"] = encoding_cast(a.FutureID); d["BankID"] = encoding_cast(a.BankID); d["BankBrchID"] = encoding_cast(a.BankBrchID); d["OperNo"] = encoding_cast(a.OperNo); d["DeviceID"] = encoding_cast(a.DeviceID); d["RecordNum"] = encoding_cast(a.RecordNum); d["SessionID"] = a.SessionID; d["RequestID"] = a.RequestID; return d;});

	py::class_<CThostFtdcTransferBankToFutureReqField>(m, "CThostFtdcTransferBankToFutureReqField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcTransferBankToFutureReqField& a) {return CThostFtdcTransferBankToFutureReqField(a);})
		.def_property("FutureAccount", [](const CThostFtdcTransferBankToFutureReqField& a) {return encoding_cast(a.FutureAccount);}, [](CThostFtdcTransferBankToFutureReqField& a, char c[]) {strcpy(a.FutureAccount, c);})
		.def_readwrite("FuturePwdFlag", &CThostFtdcTransferBankToFutureReqField::FuturePwdFlag)
		.def_property("FutureAccPwd", [](const CThostFtdcTransferBankToFutureReqField& a) {return encoding_cast(a.FutureAccPwd);}, [](CThostFtdcTransferBankToFutureReqField& a, char c[]) {strcpy(a.FutureAccPwd, c);})
		.def_readwrite("TradeAmt", &CThostFtdcTransferBankToFutureReqField::TradeAmt)
		.def_readwrite("CustFee", &CThostFtdcTransferBankToFutureReqField::CustFee)
		.def_property("CurrencyCode", [](const CThostFtdcTransferBankToFutureReqField& a) {return encoding_cast(a.CurrencyCode);}, [](CThostFtdcTransferBankToFutureReqField& a, char c[]) {strcpy(a.CurrencyCode, c);})
		.def("to_dict", [](const CThostFtdcTransferBankToFutureReqField& a) {py::dict d; d["FutureAccount"] = encoding_cast(a.FutureAccount); d["FuturePwdFlag"] = a.FuturePwdFlag; d["FutureAccPwd"] = encoding_cast(a.FutureAccPwd); d["TradeAmt"] = a.TradeAmt; d["CustFee"] = a.CustFee; d["CurrencyCode"] = encoding_cast(a.CurrencyCode); return d;});

	py::class_<CThostFtdcTransferBankToFutureRspField>(m, "CThostFtdcTransferBankToFutureRspField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcTransferBankToFutureRspField& a) {return CThostFtdcTransferBankToFutureRspField(a);})
		.def_property("RetCode", [](const CThostFtdcTransferBankToFutureRspField& a) {return encoding_cast(a.RetCode);}, [](CThostFtdcTransferBankToFutureRspField& a, char c[]) {strcpy(a.RetCode, c);})
		.def_property("RetInfo", [](const CThostFtdcTransferBankToFutureRspField& a) {return encoding_cast(a.RetInfo);}, [](CThostFtdcTransferBankToFutureRspField& a, char c[]) {strcpy(a.RetInfo, c);})
		.def_property("FutureAccount", [](const CThostFtdcTransferBankToFutureRspField& a) {return encoding_cast(a.FutureAccount);}, [](CThostFtdcTransferBankToFutureRspField& a, char c[]) {strcpy(a.FutureAccount, c);})
		.def_readwrite("TradeAmt", &CThostFtdcTransferBankToFutureRspField::TradeAmt)
		.def_readwrite("CustFee", &CThostFtdcTransferBankToFutureRspField::CustFee)
		.def_property("CurrencyCode", [](const CThostFtdcTransferBankToFutureRspField& a) {return encoding_cast(a.CurrencyCode);}, [](CThostFtdcTransferBankToFutureRspField& a, char c[]) {strcpy(a.CurrencyCode, c);})
		.def("to_dict", [](const CThostFtdcTransferBankToFutureRspField& a) {py::dict d; d["RetCode"] = encoding_cast(a.RetCode); d["RetInfo"] = encoding_cast(a.RetInfo); d["FutureAccount"] = encoding_cast(a.FutureAccount); d["TradeAmt"] = a.TradeAmt; d["CustFee"] = a.CustFee; d["CurrencyCode"] = encoding_cast(a.CurrencyCode); return d;});

	py::class_<CThostFtdcTransferFutureToBankReqField>(m, "CThostFtdcTransferFutureToBankReqField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcTransferFutureToBankReqField& a) {return CThostFtdcTransferFutureToBankReqField(a);})
		.def_property("FutureAccount", [](const CThostFtdcTransferFutureToBankReqField& a) {return encoding_cast(a.FutureAccount);}, [](CThostFtdcTransferFutureToBankReqField& a, char c[]) {strcpy(a.FutureAccount, c);})
		.def_readwrite("FuturePwdFlag", &CThostFtdcTransferFutureToBankReqField::FuturePwdFlag)
		.def_property("FutureAccPwd", [](const CThostFtdcTransferFutureToBankReqField& a) {return encoding_cast(a.FutureAccPwd);}, [](CThostFtdcTransferFutureToBankReqField& a, char c[]) {strcpy(a.FutureAccPwd, c);})
		.def_readwrite("TradeAmt", &CThostFtdcTransferFutureToBankReqField::TradeAmt)
		.def_readwrite("CustFee", &CThostFtdcTransferFutureToBankReqField::CustFee)
		.def_property("CurrencyCode", [](const CThostFtdcTransferFutureToBankReqField& a) {return encoding_cast(a.CurrencyCode);}, [](CThostFtdcTransferFutureToBankReqField& a, char c[]) {strcpy(a.CurrencyCode, c);})
		.def("to_dict", [](const CThostFtdcTransferFutureToBankReqField& a) {py::dict d; d["FutureAccount"] = encoding_cast(a.FutureAccount); d["FuturePwdFlag"] = a.FuturePwdFlag; d["FutureAccPwd"] = encoding_cast(a.FutureAccPwd); d["TradeAmt"] = a.TradeAmt; d["CustFee"] = a.CustFee; d["CurrencyCode"] = encoding_cast(a.CurrencyCode); return d;});

	py::class_<CThostFtdcTransferFutureToBankRspField>(m, "CThostFtdcTransferFutureToBankRspField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcTransferFutureToBankRspField& a) {return CThostFtdcTransferFutureToBankRspField(a);})
		.def_property("RetCode", [](const CThostFtdcTransferFutureToBankRspField& a) {return encoding_cast(a.RetCode);}, [](CThostFtdcTransferFutureToBankRspField& a, char c[]) {strcpy(a.RetCode, c);})
		.def_property("RetInfo", [](const CThostFtdcTransferFutureToBankRspField& a) {return encoding_cast(a.RetInfo);}, [](CThostFtdcTransferFutureToBankRspField& a, char c[]) {strcpy(a.RetInfo, c);})
		.def_property("FutureAccount", [](const CThostFtdcTransferFutureToBankRspField& a) {return encoding_cast(a.FutureAccount);}, [](CThostFtdcTransferFutureToBankRspField& a, char c[]) {strcpy(a.FutureAccount, c);})
		.def_readwrite("TradeAmt", &CThostFtdcTransferFutureToBankRspField::TradeAmt)
		.def_readwrite("CustFee", &CThostFtdcTransferFutureToBankRspField::CustFee)
		.def_property("CurrencyCode", [](const CThostFtdcTransferFutureToBankRspField& a) {return encoding_cast(a.CurrencyCode);}, [](CThostFtdcTransferFutureToBankRspField& a, char c[]) {strcpy(a.CurrencyCode, c);})
		.def("to_dict", [](const CThostFtdcTransferFutureToBankRspField& a) {py::dict d; d["RetCode"] = encoding_cast(a.RetCode); d["RetInfo"] = encoding_cast(a.RetInfo); d["FutureAccount"] = encoding_cast(a.FutureAccount); d["TradeAmt"] = a.TradeAmt; d["CustFee"] = a.CustFee; d["CurrencyCode"] = encoding_cast(a.CurrencyCode); return d;});

	py::class_<CThostFtdcTransferQryBankReqField>(m, "CThostFtdcTransferQryBankReqField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcTransferQryBankReqField& a) {return CThostFtdcTransferQryBankReqField(a);})
		.def_property("FutureAccount", [](const CThostFtdcTransferQryBankReqField& a) {return encoding_cast(a.FutureAccount);}, [](CThostFtdcTransferQryBankReqField& a, char c[]) {strcpy(a.FutureAccount, c);})
		.def_readwrite("FuturePwdFlag", &CThostFtdcTransferQryBankReqField::FuturePwdFlag)
		.def_property("FutureAccPwd", [](const CThostFtdcTransferQryBankReqField& a) {return encoding_cast(a.FutureAccPwd);}, [](CThostFtdcTransferQryBankReqField& a, char c[]) {strcpy(a.FutureAccPwd, c);})
		.def_property("CurrencyCode", [](const CThostFtdcTransferQryBankReqField& a) {return encoding_cast(a.CurrencyCode);}, [](CThostFtdcTransferQryBankReqField& a, char c[]) {strcpy(a.CurrencyCode, c);})
		.def("to_dict", [](const CThostFtdcTransferQryBankReqField& a) {py::dict d; d["FutureAccount"] = encoding_cast(a.FutureAccount); d["FuturePwdFlag"] = a.FuturePwdFlag; d["FutureAccPwd"] = encoding_cast(a.FutureAccPwd); d["CurrencyCode"] = encoding_cast(a.CurrencyCode); return d;});

	py::class_<CThostFtdcTransferQryBankRspField>(m, "CThostFtdcTransferQryBankRspField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcTransferQryBankRspField& a) {return CThostFtdcTransferQryBankRspField(a);})
		.def_property("RetCode", [](const CThostFtdcTransferQryBankRspField& a) {return encoding_cast(a.RetCode);}, [](CThostFtdcTransferQryBankRspField& a, char c[]) {strcpy(a.RetCode, c);})
		.def_property("RetInfo", [](const CThostFtdcTransferQryBankRspField& a) {return encoding_cast(a.RetInfo);}, [](CThostFtdcTransferQryBankRspField& a, char c[]) {strcpy(a.RetInfo, c);})
		.def_property("FutureAccount", [](const CThostFtdcTransferQryBankRspField& a) {return encoding_cast(a.FutureAccount);}, [](CThostFtdcTransferQryBankRspField& a, char c[]) {strcpy(a.FutureAccount, c);})
		.def_readwrite("TradeAmt", &CThostFtdcTransferQryBankRspField::TradeAmt)
		.def_readwrite("UseAmt", &CThostFtdcTransferQryBankRspField::UseAmt)
		.def_readwrite("FetchAmt", &CThostFtdcTransferQryBankRspField::FetchAmt)
		.def_property("CurrencyCode", [](const CThostFtdcTransferQryBankRspField& a) {return encoding_cast(a.CurrencyCode);}, [](CThostFtdcTransferQryBankRspField& a, char c[]) {strcpy(a.CurrencyCode, c);})
		.def("to_dict", [](const CThostFtdcTransferQryBankRspField& a) {py::dict d; d["RetCode"] = encoding_cast(a.RetCode); d["RetInfo"] = encoding_cast(a.RetInfo); d["FutureAccount"] = encoding_cast(a.FutureAccount); d["TradeAmt"] = a.TradeAmt; d["UseAmt"] = a.UseAmt; d["FetchAmt"] = a.FetchAmt; d["CurrencyCode"] = encoding_cast(a.CurrencyCode); return d;});

	py::class_<CThostFtdcTransferQryDetailReqField>(m, "CThostFtdcTransferQryDetailReqField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcTransferQryDetailReqField& a) {return CThostFtdcTransferQryDetailReqField(a);})
		.def_property("FutureAccount", [](const CThostFtdcTransferQryDetailReqField& a) {return encoding_cast(a.FutureAccount);}, [](CThostFtdcTransferQryDetailReqField& a, char c[]) {strcpy(a.FutureAccount, c);})
		.def("to_dict", [](const CThostFtdcTransferQryDetailReqField& a) {py::dict d; d["FutureAccount"] = encoding_cast(a.FutureAccount); return d;});

	py::class_<CThostFtdcTransferQryDetailRspField>(m, "CThostFtdcTransferQryDetailRspField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcTransferQryDetailRspField& a) {return CThostFtdcTransferQryDetailRspField(a);})
		.def_property("TradeDate", [](const CThostFtdcTransferQryDetailRspField& a) {return encoding_cast(a.TradeDate);}, [](CThostFtdcTransferQryDetailRspField& a, char c[]) {strcpy(a.TradeDate, c);})
		.def_property("TradeTime", [](const CThostFtdcTransferQryDetailRspField& a) {return encoding_cast(a.TradeTime);}, [](CThostFtdcTransferQryDetailRspField& a, char c[]) {strcpy(a.TradeTime, c);})
		.def_property("TradeCode", [](const CThostFtdcTransferQryDetailRspField& a) {return encoding_cast(a.TradeCode);}, [](CThostFtdcTransferQryDetailRspField& a, char c[]) {strcpy(a.TradeCode, c);})
		.def_readwrite("FutureSerial", &CThostFtdcTransferQryDetailRspField::FutureSerial)
		.def_property("FutureID", [](const CThostFtdcTransferQryDetailRspField& a) {return encoding_cast(a.FutureID);}, [](CThostFtdcTransferQryDetailRspField& a, char c[]) {strcpy(a.FutureID, c);})
		.def_property("FutureAccount", [](const CThostFtdcTransferQryDetailRspField& a) {return encoding_cast(a.FutureAccount);}, [](CThostFtdcTransferQryDetailRspField& a, char c[]) {strcpy(a.FutureAccount, c);})
		.def_readwrite("BankSerial", &CThostFtdcTransferQryDetailRspField::BankSerial)
		.def_property("BankID", [](const CThostFtdcTransferQryDetailRspField& a) {return encoding_cast(a.BankID);}, [](CThostFtdcTransferQryDetailRspField& a, char c[]) {strcpy(a.BankID, c);})
		.def_property("BankBrchID", [](const CThostFtdcTransferQryDetailRspField& a) {return encoding_cast(a.BankBrchID);}, [](CThostFtdcTransferQryDetailRspField& a, char c[]) {strcpy(a.BankBrchID, c);})
		.def_property("BankAccount", [](const CThostFtdcTransferQryDetailRspField& a) {return encoding_cast(a.BankAccount);}, [](CThostFtdcTransferQryDetailRspField& a, char c[]) {strcpy(a.BankAccount, c);})
		.def_property("CertCode", [](const CThostFtdcTransferQryDetailRspField& a) {return encoding_cast(a.CertCode);}, [](CThostFtdcTransferQryDetailRspField& a, char c[]) {strcpy(a.CertCode, c);})
		.def_property("CurrencyCode", [](const CThostFtdcTransferQryDetailRspField& a) {return encoding_cast(a.CurrencyCode);}, [](CThostFtdcTransferQryDetailRspField& a, char c[]) {strcpy(a.CurrencyCode, c);})
		.def_readwrite("TxAmount", &CThostFtdcTransferQryDetailRspField::TxAmount)
		.def_readwrite("Flag", &CThostFtdcTransferQryDetailRspField::Flag)
		.def("to_dict", [](const CThostFtdcTransferQryDetailRspField& a) {py::dict d; d["TradeDate"] = encoding_cast(a.TradeDate); d["TradeTime"] = encoding_cast(a.TradeTime); d["TradeCode"] = encoding_cast(a.TradeCode); d["FutureSerial"] = a.FutureSerial; d["FutureID"] = encoding_cast(a.FutureID); d["FutureAccount"] = encoding_cast(a.FutureAccount); d["BankSerial"] = a.BankSerial; d["BankID"] = encoding_cast(a.BankID); d["BankBrchID"] = encoding_cast(a.BankBrchID); d["BankAccount"] = encoding_cast(a.BankAccount); d["CertCode"] = encoding_cast(a.CertCode); d["CurrencyCode"] = encoding_cast(a.CurrencyCode); d["TxAmount"] = a.TxAmount; d["Flag"] = a.Flag; return d;});

	py::class_<CThostFtdcRspInfoField>(m, "CThostFtdcRspInfoField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcRspInfoField& a) {return CThostFtdcRspInfoField(a);})
		.def_readwrite("ErrorID", &CThostFtdcRspInfoField::ErrorID)
		.def_property("ErrorMsg", [](const CThostFtdcRspInfoField& a) {return encoding_cast(a.ErrorMsg);}, [](CThostFtdcRspInfoField& a, char c[]) {strcpy(a.ErrorMsg, c);})
		.def("to_dict", [](const CThostFtdcRspInfoField& a) {py::dict d; d["ErrorID"] = a.ErrorID; d["ErrorMsg"] = encoding_cast(a.ErrorMsg); return d;});

	py::class_<CThostFtdcExchangeField>(m, "CThostFtdcExchangeField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcExchangeField& a) {return CThostFtdcExchangeField(a);})
		.def_property("ExchangeID", [](const CThostFtdcExchangeField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcExchangeField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("ExchangeName", [](const CThostFtdcExchangeField& a) {return encoding_cast(a.ExchangeName);}, [](CThostFtdcExchangeField& a, char c[]) {strcpy(a.ExchangeName, c);})
		.def_readwrite("ExchangeProperty", &CThostFtdcExchangeField::ExchangeProperty)
		.def("to_dict", [](const CThostFtdcExchangeField& a) {py::dict d; d["ExchangeID"] = encoding_cast(a.ExchangeID); d["ExchangeName"] = encoding_cast(a.ExchangeName); d["ExchangeProperty"] = a.ExchangeProperty; return d;});

	py::class_<CThostFtdcProductField>(m, "CThostFtdcProductField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcProductField& a) {return CThostFtdcProductField(a);})
		.def_property("reserve1", [](const CThostFtdcProductField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcProductField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("ProductName", [](const CThostFtdcProductField& a) {return encoding_cast(a.ProductName);}, [](CThostFtdcProductField& a, char c[]) {strcpy(a.ProductName, c);})
		.def_property("ExchangeID", [](const CThostFtdcProductField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcProductField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_readwrite("ProductClass", &CThostFtdcProductField::ProductClass)
		.def_readwrite("VolumeMultiple", &CThostFtdcProductField::VolumeMultiple)
		.def_readwrite("PriceTick", &CThostFtdcProductField::PriceTick)
		.def_readwrite("MaxMarketOrderVolume", &CThostFtdcProductField::MaxMarketOrderVolume)
		.def_readwrite("MinMarketOrderVolume", &CThostFtdcProductField::MinMarketOrderVolume)
		.def_readwrite("MaxLimitOrderVolume", &CThostFtdcProductField::MaxLimitOrderVolume)
		.def_readwrite("MinLimitOrderVolume", &CThostFtdcProductField::MinLimitOrderVolume)
		.def_readwrite("PositionType", &CThostFtdcProductField::PositionType)
		.def_readwrite("PositionDateType", &CThostFtdcProductField::PositionDateType)
		.def_readwrite("CloseDealType", &CThostFtdcProductField::CloseDealType)
		.def_property("TradeCurrencyID", [](const CThostFtdcProductField& a) {return encoding_cast(a.TradeCurrencyID);}, [](CThostFtdcProductField& a, char c[]) {strcpy(a.TradeCurrencyID, c);})
		.def_readwrite("MortgageFundUseRange", &CThostFtdcProductField::MortgageFundUseRange)
		.def_property("reserve2", [](const CThostFtdcProductField& a) {return encoding_cast(a.reserve2);}, [](CThostFtdcProductField& a, char c[]) {strcpy(a.reserve2, c);})
		.def_readwrite("UnderlyingMultiple", &CThostFtdcProductField::UnderlyingMultiple)
		.def_property("ProductID", [](const CThostFtdcProductField& a) {return encoding_cast(a.ProductID);}, [](CThostFtdcProductField& a, char c[]) {strcpy(a.ProductID, c);})
		.def_property("ExchangeProductID", [](const CThostFtdcProductField& a) {return encoding_cast(a.ExchangeProductID);}, [](CThostFtdcProductField& a, char c[]) {strcpy(a.ExchangeProductID, c);})
		.def("to_dict", [](const CThostFtdcProductField& a) {py::dict d; d["reserve1"] = encoding_cast(a.reserve1); d["ProductName"] = encoding_cast(a.ProductName); d["ExchangeID"] = encoding_cast(a.ExchangeID); d["ProductClass"] = a.ProductClass; d["VolumeMultiple"] = a.VolumeMultiple; d["PriceTick"] = a.PriceTick; d["MaxMarketOrderVolume"] = a.MaxMarketOrderVolume; d["MinMarketOrderVolume"] = a.MinMarketOrderVolume; d["MaxLimitOrderVolume"] = a.MaxLimitOrderVolume; d["MinLimitOrderVolume"] = a.MinLimitOrderVolume; d["PositionType"] = a.PositionType; d["PositionDateType"] = a.PositionDateType; d["CloseDealType"] = a.CloseDealType; d["TradeCurrencyID"] = encoding_cast(a.TradeCurrencyID); d["MortgageFundUseRange"] = a.MortgageFundUseRange; d["reserve2"] = encoding_cast(a.reserve2); d["UnderlyingMultiple"] = a.UnderlyingMultiple; d["ProductID"] = encoding_cast(a.ProductID); d["ExchangeProductID"] = encoding_cast(a.ExchangeProductID); return d;});

	py::class_<CThostFtdcInstrumentField>(m, "CThostFtdcInstrumentField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcInstrumentField& a) {return CThostFtdcInstrumentField(a);})
		.def_property("reserve1", [](const CThostFtdcInstrumentField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcInstrumentField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("ExchangeID", [](const CThostFtdcInstrumentField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcInstrumentField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("InstrumentName", [](const CThostFtdcInstrumentField& a) {return encoding_cast(a.InstrumentName);}, [](CThostFtdcInstrumentField& a, char c[]) {strcpy(a.InstrumentName, c);})
		.def_property("reserve2", [](const CThostFtdcInstrumentField& a) {return encoding_cast(a.reserve2);}, [](CThostFtdcInstrumentField& a, char c[]) {strcpy(a.reserve2, c);})
		.def_property("reserve3", [](const CThostFtdcInstrumentField& a) {return encoding_cast(a.reserve3);}, [](CThostFtdcInstrumentField& a, char c[]) {strcpy(a.reserve3, c);})
		.def_readwrite("ProductClass", &CThostFtdcInstrumentField::ProductClass)
		.def_readwrite("DeliveryYear", &CThostFtdcInstrumentField::DeliveryYear)
		.def_readwrite("DeliveryMonth", &CThostFtdcInstrumentField::DeliveryMonth)
		.def_readwrite("MaxMarketOrderVolume", &CThostFtdcInstrumentField::MaxMarketOrderVolume)
		.def_readwrite("MinMarketOrderVolume", &CThostFtdcInstrumentField::MinMarketOrderVolume)
		.def_readwrite("MaxLimitOrderVolume", &CThostFtdcInstrumentField::MaxLimitOrderVolume)
		.def_readwrite("MinLimitOrderVolume", &CThostFtdcInstrumentField::MinLimitOrderVolume)
		.def_readwrite("VolumeMultiple", &CThostFtdcInstrumentField::VolumeMultiple)
		.def_readwrite("PriceTick", &CThostFtdcInstrumentField::PriceTick)
		.def_property("CreateDate", [](const CThostFtdcInstrumentField& a) {return encoding_cast(a.CreateDate);}, [](CThostFtdcInstrumentField& a, char c[]) {strcpy(a.CreateDate, c);})
		.def_property("OpenDate", [](const CThostFtdcInstrumentField& a) {return encoding_cast(a.OpenDate);}, [](CThostFtdcInstrumentField& a, char c[]) {strcpy(a.OpenDate, c);})
		.def_property("ExpireDate", [](const CThostFtdcInstrumentField& a) {return encoding_cast(a.ExpireDate);}, [](CThostFtdcInstrumentField& a, char c[]) {strcpy(a.ExpireDate, c);})
		.def_property("StartDelivDate", [](const CThostFtdcInstrumentField& a) {return encoding_cast(a.StartDelivDate);}, [](CThostFtdcInstrumentField& a, char c[]) {strcpy(a.StartDelivDate, c);})
		.def_property("EndDelivDate", [](const CThostFtdcInstrumentField& a) {return encoding_cast(a.EndDelivDate);}, [](CThostFtdcInstrumentField& a, char c[]) {strcpy(a.EndDelivDate, c);})
		.def_readwrite("InstLifePhase", &CThostFtdcInstrumentField::InstLifePhase)
		.def_readwrite("IsTrading", &CThostFtdcInstrumentField::IsTrading)
		.def_readwrite("PositionType", &CThostFtdcInstrumentField::PositionType)
		.def_readwrite("PositionDateType", &CThostFtdcInstrumentField::PositionDateType)
		.def_readwrite("LongMarginRatio", &CThostFtdcInstrumentField::LongMarginRatio)
		.def_readwrite("ShortMarginRatio", &CThostFtdcInstrumentField::ShortMarginRatio)
		.def_readwrite("MaxMarginSideAlgorithm", &CThostFtdcInstrumentField::MaxMarginSideAlgorithm)
		.def_property("reserve4", [](const CThostFtdcInstrumentField& a) {return encoding_cast(a.reserve4);}, [](CThostFtdcInstrumentField& a, char c[]) {strcpy(a.reserve4, c);})
		.def_readwrite("StrikePrice", &CThostFtdcInstrumentField::StrikePrice)
		.def_readwrite("OptionsType", &CThostFtdcInstrumentField::OptionsType)
		.def_readwrite("UnderlyingMultiple", &CThostFtdcInstrumentField::UnderlyingMultiple)
		.def_readwrite("CombinationType", &CThostFtdcInstrumentField::CombinationType)
		.def_property("InstrumentID", [](const CThostFtdcInstrumentField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcInstrumentField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def_property("ExchangeInstID", [](const CThostFtdcInstrumentField& a) {return encoding_cast(a.ExchangeInstID);}, [](CThostFtdcInstrumentField& a, char c[]) {strcpy(a.ExchangeInstID, c);})
		.def_property("ProductID", [](const CThostFtdcInstrumentField& a) {return encoding_cast(a.ProductID);}, [](CThostFtdcInstrumentField& a, char c[]) {strcpy(a.ProductID, c);})
		.def_property("UnderlyingInstrID", [](const CThostFtdcInstrumentField& a) {return encoding_cast(a.UnderlyingInstrID);}, [](CThostFtdcInstrumentField& a, char c[]) {strcpy(a.UnderlyingInstrID, c);})
		.def("to_dict", [](const CThostFtdcInstrumentField& a) {py::dict d; d["reserve1"] = encoding_cast(a.reserve1); d["ExchangeID"] = encoding_cast(a.ExchangeID); d["InstrumentName"] = encoding_cast(a.InstrumentName); d["reserve2"] = encoding_cast(a.reserve2); d["reserve3"] = encoding_cast(a.reserve3); d["ProductClass"] = a.ProductClass; d["DeliveryYear"] = a.DeliveryYear; d["DeliveryMonth"] = a.DeliveryMonth; d["MaxMarketOrderVolume"] = a.MaxMarketOrderVolume; d["MinMarketOrderVolume"] = a.MinMarketOrderVolume; d["MaxLimitOrderVolume"] = a.MaxLimitOrderVolume; d["MinLimitOrderVolume"] = a.MinLimitOrderVolume; d["VolumeMultiple"] = a.VolumeMultiple; d["PriceTick"] = a.PriceTick; d["CreateDate"] = encoding_cast(a.CreateDate); d["OpenDate"] = encoding_cast(a.OpenDate); d["ExpireDate"] = encoding_cast(a.ExpireDate); d["StartDelivDate"] = encoding_cast(a.StartDelivDate); d["EndDelivDate"] = encoding_cast(a.EndDelivDate); d["InstLifePhase"] = a.InstLifePhase; d["IsTrading"] = a.IsTrading; d["PositionType"] = a.PositionType; d["PositionDateType"] = a.PositionDateType; d["LongMarginRatio"] = a.LongMarginRatio; d["ShortMarginRatio"] = a.ShortMarginRatio; d["MaxMarginSideAlgorithm"] = a.MaxMarginSideAlgorithm; d["reserve4"] = encoding_cast(a.reserve4); d["StrikePrice"] = a.StrikePrice; d["OptionsType"] = a.OptionsType; d["UnderlyingMultiple"] = a.UnderlyingMultiple; d["CombinationType"] = a.CombinationType; d["InstrumentID"] = encoding_cast(a.InstrumentID); d["ExchangeInstID"] = encoding_cast(a.ExchangeInstID); d["ProductID"] = encoding_cast(a.ProductID); d["UnderlyingInstrID"] = encoding_cast(a.UnderlyingInstrID); return d;});

	py::class_<CThostFtdcBrokerField>(m, "CThostFtdcBrokerField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcBrokerField& a) {return CThostFtdcBrokerField(a);})
		.def_property("BrokerID", [](const CThostFtdcBrokerField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcBrokerField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("BrokerAbbr", [](const CThostFtdcBrokerField& a) {return encoding_cast(a.BrokerAbbr);}, [](CThostFtdcBrokerField& a, char c[]) {strcpy(a.BrokerAbbr, c);})
		.def_property("BrokerName", [](const CThostFtdcBrokerField& a) {return encoding_cast(a.BrokerName);}, [](CThostFtdcBrokerField& a, char c[]) {strcpy(a.BrokerName, c);})
		.def_readwrite("IsActive", &CThostFtdcBrokerField::IsActive)
		.def("to_dict", [](const CThostFtdcBrokerField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["BrokerAbbr"] = encoding_cast(a.BrokerAbbr); d["BrokerName"] = encoding_cast(a.BrokerName); d["IsActive"] = a.IsActive; return d;});

	py::class_<CThostFtdcTraderField>(m, "CThostFtdcTraderField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcTraderField& a) {return CThostFtdcTraderField(a);})
		.def_property("ExchangeID", [](const CThostFtdcTraderField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcTraderField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("TraderID", [](const CThostFtdcTraderField& a) {return encoding_cast(a.TraderID);}, [](CThostFtdcTraderField& a, char c[]) {strcpy(a.TraderID, c);})
		.def_property("ParticipantID", [](const CThostFtdcTraderField& a) {return encoding_cast(a.ParticipantID);}, [](CThostFtdcTraderField& a, char c[]) {strcpy(a.ParticipantID, c);})
		.def_property("Password", [](const CThostFtdcTraderField& a) {return encoding_cast(a.Password);}, [](CThostFtdcTraderField& a, char c[]) {strcpy(a.Password, c);})
		.def_readwrite("InstallCount", &CThostFtdcTraderField::InstallCount)
		.def_property("BrokerID", [](const CThostFtdcTraderField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcTraderField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def("to_dict", [](const CThostFtdcTraderField& a) {py::dict d; d["ExchangeID"] = encoding_cast(a.ExchangeID); d["TraderID"] = encoding_cast(a.TraderID); d["ParticipantID"] = encoding_cast(a.ParticipantID); d["Password"] = encoding_cast(a.Password); d["InstallCount"] = a.InstallCount; d["BrokerID"] = encoding_cast(a.BrokerID); return d;});

	py::class_<CThostFtdcInvestorField>(m, "CThostFtdcInvestorField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcInvestorField& a) {return CThostFtdcInvestorField(a);})
		.def_property("InvestorID", [](const CThostFtdcInvestorField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcInvestorField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_property("BrokerID", [](const CThostFtdcInvestorField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcInvestorField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorGroupID", [](const CThostFtdcInvestorField& a) {return encoding_cast(a.InvestorGroupID);}, [](CThostFtdcInvestorField& a, char c[]) {strcpy(a.InvestorGroupID, c);})
		.def_property("InvestorName", [](const CThostFtdcInvestorField& a) {return encoding_cast(a.InvestorName);}, [](CThostFtdcInvestorField& a, char c[]) {strcpy(a.InvestorName, c);})
		.def_readwrite("IdentifiedCardType", &CThostFtdcInvestorField::IdentifiedCardType)
		.def_property("IdentifiedCardNo", [](const CThostFtdcInvestorField& a) {return encoding_cast(a.IdentifiedCardNo);}, [](CThostFtdcInvestorField& a, char c[]) {strcpy(a.IdentifiedCardNo, c);})
		.def_readwrite("IsActive", &CThostFtdcInvestorField::IsActive)
		.def_property("Telephone", [](const CThostFtdcInvestorField& a) {return encoding_cast(a.Telephone);}, [](CThostFtdcInvestorField& a, char c[]) {strcpy(a.Telephone, c);})
		.def_property("Address", [](const CThostFtdcInvestorField& a) {return encoding_cast(a.Address);}, [](CThostFtdcInvestorField& a, char c[]) {strcpy(a.Address, c);})
		.def_property("OpenDate", [](const CThostFtdcInvestorField& a) {return encoding_cast(a.OpenDate);}, [](CThostFtdcInvestorField& a, char c[]) {strcpy(a.OpenDate, c);})
		.def_property("Mobile", [](const CThostFtdcInvestorField& a) {return encoding_cast(a.Mobile);}, [](CThostFtdcInvestorField& a, char c[]) {strcpy(a.Mobile, c);})
		.def_property("CommModelID", [](const CThostFtdcInvestorField& a) {return encoding_cast(a.CommModelID);}, [](CThostFtdcInvestorField& a, char c[]) {strcpy(a.CommModelID, c);})
		.def_property("MarginModelID", [](const CThostFtdcInvestorField& a) {return encoding_cast(a.MarginModelID);}, [](CThostFtdcInvestorField& a, char c[]) {strcpy(a.MarginModelID, c);})
		.def("to_dict", [](const CThostFtdcInvestorField& a) {py::dict d; d["InvestorID"] = encoding_cast(a.InvestorID); d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorGroupID"] = encoding_cast(a.InvestorGroupID); d["InvestorName"] = encoding_cast(a.InvestorName); d["IdentifiedCardType"] = a.IdentifiedCardType; d["IdentifiedCardNo"] = encoding_cast(a.IdentifiedCardNo); d["IsActive"] = a.IsActive; d["Telephone"] = encoding_cast(a.Telephone); d["Address"] = encoding_cast(a.Address); d["OpenDate"] = encoding_cast(a.OpenDate); d["Mobile"] = encoding_cast(a.Mobile); d["CommModelID"] = encoding_cast(a.CommModelID); d["MarginModelID"] = encoding_cast(a.MarginModelID); return d;});

	py::class_<CThostFtdcTradingCodeField>(m, "CThostFtdcTradingCodeField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcTradingCodeField& a) {return CThostFtdcTradingCodeField(a);})
		.def_property("InvestorID", [](const CThostFtdcTradingCodeField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcTradingCodeField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_property("BrokerID", [](const CThostFtdcTradingCodeField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcTradingCodeField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("ExchangeID", [](const CThostFtdcTradingCodeField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcTradingCodeField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("ClientID", [](const CThostFtdcTradingCodeField& a) {return encoding_cast(a.ClientID);}, [](CThostFtdcTradingCodeField& a, char c[]) {strcpy(a.ClientID, c);})
		.def_readwrite("IsActive", &CThostFtdcTradingCodeField::IsActive)
		.def_readwrite("ClientIDType", &CThostFtdcTradingCodeField::ClientIDType)
		.def_property("BranchID", [](const CThostFtdcTradingCodeField& a) {return encoding_cast(a.BranchID);}, [](CThostFtdcTradingCodeField& a, char c[]) {strcpy(a.BranchID, c);})
		.def_readwrite("BizType", &CThostFtdcTradingCodeField::BizType)
		.def_property("InvestUnitID", [](const CThostFtdcTradingCodeField& a) {return encoding_cast(a.InvestUnitID);}, [](CThostFtdcTradingCodeField& a, char c[]) {strcpy(a.InvestUnitID, c);})
		.def("to_dict", [](const CThostFtdcTradingCodeField& a) {py::dict d; d["InvestorID"] = encoding_cast(a.InvestorID); d["BrokerID"] = encoding_cast(a.BrokerID); d["ExchangeID"] = encoding_cast(a.ExchangeID); d["ClientID"] = encoding_cast(a.ClientID); d["IsActive"] = a.IsActive; d["ClientIDType"] = a.ClientIDType; d["BranchID"] = encoding_cast(a.BranchID); d["BizType"] = a.BizType; d["InvestUnitID"] = encoding_cast(a.InvestUnitID); return d;});

	py::class_<CThostFtdcPartBrokerField>(m, "CThostFtdcPartBrokerField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcPartBrokerField& a) {return CThostFtdcPartBrokerField(a);})
		.def_property("BrokerID", [](const CThostFtdcPartBrokerField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcPartBrokerField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("ExchangeID", [](const CThostFtdcPartBrokerField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcPartBrokerField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("ParticipantID", [](const CThostFtdcPartBrokerField& a) {return encoding_cast(a.ParticipantID);}, [](CThostFtdcPartBrokerField& a, char c[]) {strcpy(a.ParticipantID, c);})
		.def_readwrite("IsActive", &CThostFtdcPartBrokerField::IsActive)
		.def("to_dict", [](const CThostFtdcPartBrokerField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["ExchangeID"] = encoding_cast(a.ExchangeID); d["ParticipantID"] = encoding_cast(a.ParticipantID); d["IsActive"] = a.IsActive; return d;});

	py::class_<CThostFtdcSuperUserField>(m, "CThostFtdcSuperUserField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcSuperUserField& a) {return CThostFtdcSuperUserField(a);})
		.def_property("UserID", [](const CThostFtdcSuperUserField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcSuperUserField& a, char c[]) {strcpy(a.UserID, c);})
		.def_property("UserName", [](const CThostFtdcSuperUserField& a) {return encoding_cast(a.UserName);}, [](CThostFtdcSuperUserField& a, char c[]) {strcpy(a.UserName, c);})
		.def_property("Password", [](const CThostFtdcSuperUserField& a) {return encoding_cast(a.Password);}, [](CThostFtdcSuperUserField& a, char c[]) {strcpy(a.Password, c);})
		.def_readwrite("IsActive", &CThostFtdcSuperUserField::IsActive)
		.def("to_dict", [](const CThostFtdcSuperUserField& a) {py::dict d; d["UserID"] = encoding_cast(a.UserID); d["UserName"] = encoding_cast(a.UserName); d["Password"] = encoding_cast(a.Password); d["IsActive"] = a.IsActive; return d;});

	py::class_<CThostFtdcSuperUserFunctionField>(m, "CThostFtdcSuperUserFunctionField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcSuperUserFunctionField& a) {return CThostFtdcSuperUserFunctionField(a);})
		.def_property("UserID", [](const CThostFtdcSuperUserFunctionField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcSuperUserFunctionField& a, char c[]) {strcpy(a.UserID, c);})
		.def_readwrite("FunctionCode", &CThostFtdcSuperUserFunctionField::FunctionCode)
		.def("to_dict", [](const CThostFtdcSuperUserFunctionField& a) {py::dict d; d["UserID"] = encoding_cast(a.UserID); d["FunctionCode"] = a.FunctionCode; return d;});

	py::class_<CThostFtdcInvestorGroupField>(m, "CThostFtdcInvestorGroupField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcInvestorGroupField& a) {return CThostFtdcInvestorGroupField(a);})
		.def_property("BrokerID", [](const CThostFtdcInvestorGroupField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcInvestorGroupField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorGroupID", [](const CThostFtdcInvestorGroupField& a) {return encoding_cast(a.InvestorGroupID);}, [](CThostFtdcInvestorGroupField& a, char c[]) {strcpy(a.InvestorGroupID, c);})
		.def_property("InvestorGroupName", [](const CThostFtdcInvestorGroupField& a) {return encoding_cast(a.InvestorGroupName);}, [](CThostFtdcInvestorGroupField& a, char c[]) {strcpy(a.InvestorGroupName, c);})
		.def("to_dict", [](const CThostFtdcInvestorGroupField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorGroupID"] = encoding_cast(a.InvestorGroupID); d["InvestorGroupName"] = encoding_cast(a.InvestorGroupName); return d;});

	py::class_<CThostFtdcTradingAccountField>(m, "CThostFtdcTradingAccountField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcTradingAccountField& a) {return CThostFtdcTradingAccountField(a);})
		.def_property("BrokerID", [](const CThostFtdcTradingAccountField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcTradingAccountField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("AccountID", [](const CThostFtdcTradingAccountField& a) {return encoding_cast(a.AccountID);}, [](CThostFtdcTradingAccountField& a, char c[]) {strcpy(a.AccountID, c);})
		.def_readwrite("PreMortgage", &CThostFtdcTradingAccountField::PreMortgage)
		.def_readwrite("PreCredit", &CThostFtdcTradingAccountField::PreCredit)
		.def_readwrite("PreDeposit", &CThostFtdcTradingAccountField::PreDeposit)
		.def_readwrite("PreBalance", &CThostFtdcTradingAccountField::PreBalance)
		.def_readwrite("PreMargin", &CThostFtdcTradingAccountField::PreMargin)
		.def_readwrite("InterestBase", &CThostFtdcTradingAccountField::InterestBase)
		.def_readwrite("Interest", &CThostFtdcTradingAccountField::Interest)
		.def_readwrite("Deposit", &CThostFtdcTradingAccountField::Deposit)
		.def_readwrite("Withdraw", &CThostFtdcTradingAccountField::Withdraw)
		.def_readwrite("FrozenMargin", &CThostFtdcTradingAccountField::FrozenMargin)
		.def_readwrite("FrozenCash", &CThostFtdcTradingAccountField::FrozenCash)
		.def_readwrite("FrozenCommission", &CThostFtdcTradingAccountField::FrozenCommission)
		.def_readwrite("CurrMargin", &CThostFtdcTradingAccountField::CurrMargin)
		.def_readwrite("CashIn", &CThostFtdcTradingAccountField::CashIn)
		.def_readwrite("Commission", &CThostFtdcTradingAccountField::Commission)
		.def_readwrite("CloseProfit", &CThostFtdcTradingAccountField::CloseProfit)
		.def_readwrite("PositionProfit", &CThostFtdcTradingAccountField::PositionProfit)
		.def_readwrite("Balance", &CThostFtdcTradingAccountField::Balance)
		.def_readwrite("Available", &CThostFtdcTradingAccountField::Available)
		.def_readwrite("WithdrawQuota", &CThostFtdcTradingAccountField::WithdrawQuota)
		.def_readwrite("Reserve", &CThostFtdcTradingAccountField::Reserve)
		.def_property("TradingDay", [](const CThostFtdcTradingAccountField& a) {return encoding_cast(a.TradingDay);}, [](CThostFtdcTradingAccountField& a, char c[]) {strcpy(a.TradingDay, c);})
		.def_readwrite("SettlementID", &CThostFtdcTradingAccountField::SettlementID)
		.def_readwrite("Credit", &CThostFtdcTradingAccountField::Credit)
		.def_readwrite("Mortgage", &CThostFtdcTradingAccountField::Mortgage)
		.def_readwrite("ExchangeMargin", &CThostFtdcTradingAccountField::ExchangeMargin)
		.def_readwrite("DeliveryMargin", &CThostFtdcTradingAccountField::DeliveryMargin)
		.def_readwrite("ExchangeDeliveryMargin", &CThostFtdcTradingAccountField::ExchangeDeliveryMargin)
		.def_readwrite("ReserveBalance", &CThostFtdcTradingAccountField::ReserveBalance)
		.def_property("CurrencyID", [](const CThostFtdcTradingAccountField& a) {return encoding_cast(a.CurrencyID);}, [](CThostFtdcTradingAccountField& a, char c[]) {strcpy(a.CurrencyID, c);})
		.def_readwrite("PreFundMortgageIn", &CThostFtdcTradingAccountField::PreFundMortgageIn)
		.def_readwrite("PreFundMortgageOut", &CThostFtdcTradingAccountField::PreFundMortgageOut)
		.def_readwrite("FundMortgageIn", &CThostFtdcTradingAccountField::FundMortgageIn)
		.def_readwrite("FundMortgageOut", &CThostFtdcTradingAccountField::FundMortgageOut)
		.def_readwrite("FundMortgageAvailable", &CThostFtdcTradingAccountField::FundMortgageAvailable)
		.def_readwrite("MortgageableFund", &CThostFtdcTradingAccountField::MortgageableFund)
		.def_readwrite("SpecProductMargin", &CThostFtdcTradingAccountField::SpecProductMargin)
		.def_readwrite("SpecProductFrozenMargin", &CThostFtdcTradingAccountField::SpecProductFrozenMargin)
		.def_readwrite("SpecProductCommission", &CThostFtdcTradingAccountField::SpecProductCommission)
		.def_readwrite("SpecProductFrozenCommission", &CThostFtdcTradingAccountField::SpecProductFrozenCommission)
		.def_readwrite("SpecProductPositionProfit", &CThostFtdcTradingAccountField::SpecProductPositionProfit)
		.def_readwrite("SpecProductCloseProfit", &CThostFtdcTradingAccountField::SpecProductCloseProfit)
		.def_readwrite("SpecProductPositionProfitByAlg", &CThostFtdcTradingAccountField::SpecProductPositionProfitByAlg)
		.def_readwrite("SpecProductExchangeMargin", &CThostFtdcTradingAccountField::SpecProductExchangeMargin)
		.def_readwrite("BizType", &CThostFtdcTradingAccountField::BizType)
		.def_readwrite("FrozenSwap", &CThostFtdcTradingAccountField::FrozenSwap)
		.def_readwrite("RemainSwap", &CThostFtdcTradingAccountField::RemainSwap)
		.def("to_dict", [](const CThostFtdcTradingAccountField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["AccountID"] = encoding_cast(a.AccountID); d["PreMortgage"] = a.PreMortgage; d["PreCredit"] = a.PreCredit; d["PreDeposit"] = a.PreDeposit; d["PreBalance"] = a.PreBalance; d["PreMargin"] = a.PreMargin; d["InterestBase"] = a.InterestBase; d["Interest"] = a.Interest; d["Deposit"] = a.Deposit; d["Withdraw"] = a.Withdraw; d["FrozenMargin"] = a.FrozenMargin; d["FrozenCash"] = a.FrozenCash; d["FrozenCommission"] = a.FrozenCommission; d["CurrMargin"] = a.CurrMargin; d["CashIn"] = a.CashIn; d["Commission"] = a.Commission; d["CloseProfit"] = a.CloseProfit; d["PositionProfit"] = a.PositionProfit; d["Balance"] = a.Balance; d["Available"] = a.Available; d["WithdrawQuota"] = a.WithdrawQuota; d["Reserve"] = a.Reserve; d["TradingDay"] = encoding_cast(a.TradingDay); d["SettlementID"] = a.SettlementID; d["Credit"] = a.Credit; d["Mortgage"] = a.Mortgage; d["ExchangeMargin"] = a.ExchangeMargin; d["DeliveryMargin"] = a.DeliveryMargin; d["ExchangeDeliveryMargin"] = a.ExchangeDeliveryMargin; d["ReserveBalance"] = a.ReserveBalance; d["CurrencyID"] = encoding_cast(a.CurrencyID); d["PreFundMortgageIn"] = a.PreFundMortgageIn; d["PreFundMortgageOut"] = a.PreFundMortgageOut; d["FundMortgageIn"] = a.FundMortgageIn; d["FundMortgageOut"] = a.FundMortgageOut; d["FundMortgageAvailable"] = a.FundMortgageAvailable; d["MortgageableFund"] = a.MortgageableFund; d["SpecProductMargin"] = a.SpecProductMargin; d["SpecProductFrozenMargin"] = a.SpecProductFrozenMargin; d["SpecProductCommission"] = a.SpecProductCommission; d["SpecProductFrozenCommission"] = a.SpecProductFrozenCommission; d["SpecProductPositionProfit"] = a.SpecProductPositionProfit; d["SpecProductCloseProfit"] = a.SpecProductCloseProfit; d["SpecProductPositionProfitByAlg"] = a.SpecProductPositionProfitByAlg; d["SpecProductExchangeMargin"] = a.SpecProductExchangeMargin; d["BizType"] = a.BizType; d["FrozenSwap"] = a.FrozenSwap; d["RemainSwap"] = a.RemainSwap; return d;});

	py::class_<CThostFtdcInvestorPositionField>(m, "CThostFtdcInvestorPositionField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcInvestorPositionField& a) {return CThostFtdcInvestorPositionField(a);})
		.def_property("reserve1", [](const CThostFtdcInvestorPositionField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcInvestorPositionField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("BrokerID", [](const CThostFtdcInvestorPositionField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcInvestorPositionField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcInvestorPositionField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcInvestorPositionField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_readwrite("PosiDirection", &CThostFtdcInvestorPositionField::PosiDirection)
		.def_readwrite("HedgeFlag", &CThostFtdcInvestorPositionField::HedgeFlag)
		.def_readwrite("PositionDate", &CThostFtdcInvestorPositionField::PositionDate)
		.def_readwrite("YdPosition", &CThostFtdcInvestorPositionField::YdPosition)
		.def_readwrite("Position", &CThostFtdcInvestorPositionField::Position)
		.def_readwrite("LongFrozen", &CThostFtdcInvestorPositionField::LongFrozen)
		.def_readwrite("ShortFrozen", &CThostFtdcInvestorPositionField::ShortFrozen)
		.def_readwrite("LongFrozenAmount", &CThostFtdcInvestorPositionField::LongFrozenAmount)
		.def_readwrite("ShortFrozenAmount", &CThostFtdcInvestorPositionField::ShortFrozenAmount)
		.def_readwrite("OpenVolume", &CThostFtdcInvestorPositionField::OpenVolume)
		.def_readwrite("CloseVolume", &CThostFtdcInvestorPositionField::CloseVolume)
		.def_readwrite("OpenAmount", &CThostFtdcInvestorPositionField::OpenAmount)
		.def_readwrite("CloseAmount", &CThostFtdcInvestorPositionField::CloseAmount)
		.def_readwrite("PositionCost", &CThostFtdcInvestorPositionField::PositionCost)
		.def_readwrite("PreMargin", &CThostFtdcInvestorPositionField::PreMargin)
		.def_readwrite("UseMargin", &CThostFtdcInvestorPositionField::UseMargin)
		.def_readwrite("FrozenMargin", &CThostFtdcInvestorPositionField::FrozenMargin)
		.def_readwrite("FrozenCash", &CThostFtdcInvestorPositionField::FrozenCash)
		.def_readwrite("FrozenCommission", &CThostFtdcInvestorPositionField::FrozenCommission)
		.def_readwrite("CashIn", &CThostFtdcInvestorPositionField::CashIn)
		.def_readwrite("Commission", &CThostFtdcInvestorPositionField::Commission)
		.def_readwrite("CloseProfit", &CThostFtdcInvestorPositionField::CloseProfit)
		.def_readwrite("PositionProfit", &CThostFtdcInvestorPositionField::PositionProfit)
		.def_readwrite("PreSettlementPrice", &CThostFtdcInvestorPositionField::PreSettlementPrice)
		.def_readwrite("SettlementPrice", &CThostFtdcInvestorPositionField::SettlementPrice)
		.def_property("TradingDay", [](const CThostFtdcInvestorPositionField& a) {return encoding_cast(a.TradingDay);}, [](CThostFtdcInvestorPositionField& a, char c[]) {strcpy(a.TradingDay, c);})
		.def_readwrite("SettlementID", &CThostFtdcInvestorPositionField::SettlementID)
		.def_readwrite("OpenCost", &CThostFtdcInvestorPositionField::OpenCost)
		.def_readwrite("ExchangeMargin", &CThostFtdcInvestorPositionField::ExchangeMargin)
		.def_readwrite("CombPosition", &CThostFtdcInvestorPositionField::CombPosition)
		.def_readwrite("CombLongFrozen", &CThostFtdcInvestorPositionField::CombLongFrozen)
		.def_readwrite("CombShortFrozen", &CThostFtdcInvestorPositionField::CombShortFrozen)
		.def_readwrite("CloseProfitByDate", &CThostFtdcInvestorPositionField::CloseProfitByDate)
		.def_readwrite("CloseProfitByTrade", &CThostFtdcInvestorPositionField::CloseProfitByTrade)
		.def_readwrite("TodayPosition", &CThostFtdcInvestorPositionField::TodayPosition)
		.def_readwrite("MarginRateByMoney", &CThostFtdcInvestorPositionField::MarginRateByMoney)
		.def_readwrite("MarginRateByVolume", &CThostFtdcInvestorPositionField::MarginRateByVolume)
		.def_readwrite("StrikeFrozen", &CThostFtdcInvestorPositionField::StrikeFrozen)
		.def_readwrite("StrikeFrozenAmount", &CThostFtdcInvestorPositionField::StrikeFrozenAmount)
		.def_readwrite("AbandonFrozen", &CThostFtdcInvestorPositionField::AbandonFrozen)
		.def_property("ExchangeID", [](const CThostFtdcInvestorPositionField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcInvestorPositionField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_readwrite("YdStrikeFrozen", &CThostFtdcInvestorPositionField::YdStrikeFrozen)
		.def_property("InvestUnitID", [](const CThostFtdcInvestorPositionField& a) {return encoding_cast(a.InvestUnitID);}, [](CThostFtdcInvestorPositionField& a, char c[]) {strcpy(a.InvestUnitID, c);})
		.def_readwrite("PositionCostOffset", &CThostFtdcInvestorPositionField::PositionCostOffset)
		.def_readwrite("TasPosition", &CThostFtdcInvestorPositionField::TasPosition)
		.def_readwrite("TasPositionCost", &CThostFtdcInvestorPositionField::TasPositionCost)
		.def_property("InstrumentID", [](const CThostFtdcInvestorPositionField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcInvestorPositionField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def("to_dict", [](const CThostFtdcInvestorPositionField& a) {py::dict d; d["reserve1"] = encoding_cast(a.reserve1); d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["PosiDirection"] = a.PosiDirection; d["HedgeFlag"] = a.HedgeFlag; d["PositionDate"] = a.PositionDate; d["YdPosition"] = a.YdPosition; d["Position"] = a.Position; d["LongFrozen"] = a.LongFrozen; d["ShortFrozen"] = a.ShortFrozen; d["LongFrozenAmount"] = a.LongFrozenAmount; d["ShortFrozenAmount"] = a.ShortFrozenAmount; d["OpenVolume"] = a.OpenVolume; d["CloseVolume"] = a.CloseVolume; d["OpenAmount"] = a.OpenAmount; d["CloseAmount"] = a.CloseAmount; d["PositionCost"] = a.PositionCost; d["PreMargin"] = a.PreMargin; d["UseMargin"] = a.UseMargin; d["FrozenMargin"] = a.FrozenMargin; d["FrozenCash"] = a.FrozenCash; d["FrozenCommission"] = a.FrozenCommission; d["CashIn"] = a.CashIn; d["Commission"] = a.Commission; d["CloseProfit"] = a.CloseProfit; d["PositionProfit"] = a.PositionProfit; d["PreSettlementPrice"] = a.PreSettlementPrice; d["SettlementPrice"] = a.SettlementPrice; d["TradingDay"] = encoding_cast(a.TradingDay); d["SettlementID"] = a.SettlementID; d["OpenCost"] = a.OpenCost; d["ExchangeMargin"] = a.ExchangeMargin; d["CombPosition"] = a.CombPosition; d["CombLongFrozen"] = a.CombLongFrozen; d["CombShortFrozen"] = a.CombShortFrozen; d["CloseProfitByDate"] = a.CloseProfitByDate; d["CloseProfitByTrade"] = a.CloseProfitByTrade; d["TodayPosition"] = a.TodayPosition; d["MarginRateByMoney"] = a.MarginRateByMoney; d["MarginRateByVolume"] = a.MarginRateByVolume; d["StrikeFrozen"] = a.StrikeFrozen; d["StrikeFrozenAmount"] = a.StrikeFrozenAmount; d["AbandonFrozen"] = a.AbandonFrozen; d["ExchangeID"] = encoding_cast(a.ExchangeID); d["YdStrikeFrozen"] = a.YdStrikeFrozen; d["InvestUnitID"] = encoding_cast(a.InvestUnitID); d["PositionCostOffset"] = a.PositionCostOffset; d["TasPosition"] = a.TasPosition; d["TasPositionCost"] = a.TasPositionCost; d["InstrumentID"] = encoding_cast(a.InstrumentID); return d;});

	py::class_<CThostFtdcInstrumentMarginRateField>(m, "CThostFtdcInstrumentMarginRateField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcInstrumentMarginRateField& a) {return CThostFtdcInstrumentMarginRateField(a);})
		.def_property("reserve1", [](const CThostFtdcInstrumentMarginRateField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcInstrumentMarginRateField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_readwrite("InvestorRange", &CThostFtdcInstrumentMarginRateField::InvestorRange)
		.def_property("BrokerID", [](const CThostFtdcInstrumentMarginRateField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcInstrumentMarginRateField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcInstrumentMarginRateField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcInstrumentMarginRateField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_readwrite("HedgeFlag", &CThostFtdcInstrumentMarginRateField::HedgeFlag)
		.def_readwrite("LongMarginRatioByMoney", &CThostFtdcInstrumentMarginRateField::LongMarginRatioByMoney)
		.def_readwrite("LongMarginRatioByVolume", &CThostFtdcInstrumentMarginRateField::LongMarginRatioByVolume)
		.def_readwrite("ShortMarginRatioByMoney", &CThostFtdcInstrumentMarginRateField::ShortMarginRatioByMoney)
		.def_readwrite("ShortMarginRatioByVolume", &CThostFtdcInstrumentMarginRateField::ShortMarginRatioByVolume)
		.def_readwrite("IsRelative", &CThostFtdcInstrumentMarginRateField::IsRelative)
		.def_property("ExchangeID", [](const CThostFtdcInstrumentMarginRateField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcInstrumentMarginRateField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("InvestUnitID", [](const CThostFtdcInstrumentMarginRateField& a) {return encoding_cast(a.InvestUnitID);}, [](CThostFtdcInstrumentMarginRateField& a, char c[]) {strcpy(a.InvestUnitID, c);})
		.def_property("InstrumentID", [](const CThostFtdcInstrumentMarginRateField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcInstrumentMarginRateField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def("to_dict", [](const CThostFtdcInstrumentMarginRateField& a) {py::dict d; d["reserve1"] = encoding_cast(a.reserve1); d["InvestorRange"] = a.InvestorRange; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["HedgeFlag"] = a.HedgeFlag; d["LongMarginRatioByMoney"] = a.LongMarginRatioByMoney; d["LongMarginRatioByVolume"] = a.LongMarginRatioByVolume; d["ShortMarginRatioByMoney"] = a.ShortMarginRatioByMoney; d["ShortMarginRatioByVolume"] = a.ShortMarginRatioByVolume; d["IsRelative"] = a.IsRelative; d["ExchangeID"] = encoding_cast(a.ExchangeID); d["InvestUnitID"] = encoding_cast(a.InvestUnitID); d["InstrumentID"] = encoding_cast(a.InstrumentID); return d;});

	py::class_<CThostFtdcInstrumentCommissionRateField>(m, "CThostFtdcInstrumentCommissionRateField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcInstrumentCommissionRateField& a) {return CThostFtdcInstrumentCommissionRateField(a);})
		.def_property("reserve1", [](const CThostFtdcInstrumentCommissionRateField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcInstrumentCommissionRateField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_readwrite("InvestorRange", &CThostFtdcInstrumentCommissionRateField::InvestorRange)
		.def_property("BrokerID", [](const CThostFtdcInstrumentCommissionRateField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcInstrumentCommissionRateField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcInstrumentCommissionRateField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcInstrumentCommissionRateField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_readwrite("OpenRatioByMoney", &CThostFtdcInstrumentCommissionRateField::OpenRatioByMoney)
		.def_readwrite("OpenRatioByVolume", &CThostFtdcInstrumentCommissionRateField::OpenRatioByVolume)
		.def_readwrite("CloseRatioByMoney", &CThostFtdcInstrumentCommissionRateField::CloseRatioByMoney)
		.def_readwrite("CloseRatioByVolume", &CThostFtdcInstrumentCommissionRateField::CloseRatioByVolume)
		.def_readwrite("CloseTodayRatioByMoney", &CThostFtdcInstrumentCommissionRateField::CloseTodayRatioByMoney)
		.def_readwrite("CloseTodayRatioByVolume", &CThostFtdcInstrumentCommissionRateField::CloseTodayRatioByVolume)
		.def_property("ExchangeID", [](const CThostFtdcInstrumentCommissionRateField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcInstrumentCommissionRateField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_readwrite("BizType", &CThostFtdcInstrumentCommissionRateField::BizType)
		.def_property("InvestUnitID", [](const CThostFtdcInstrumentCommissionRateField& a) {return encoding_cast(a.InvestUnitID);}, [](CThostFtdcInstrumentCommissionRateField& a, char c[]) {strcpy(a.InvestUnitID, c);})
		.def_property("InstrumentID", [](const CThostFtdcInstrumentCommissionRateField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcInstrumentCommissionRateField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def("to_dict", [](const CThostFtdcInstrumentCommissionRateField& a) {py::dict d; d["reserve1"] = encoding_cast(a.reserve1); d["InvestorRange"] = a.InvestorRange; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["OpenRatioByMoney"] = a.OpenRatioByMoney; d["OpenRatioByVolume"] = a.OpenRatioByVolume; d["CloseRatioByMoney"] = a.CloseRatioByMoney; d["CloseRatioByVolume"] = a.CloseRatioByVolume; d["CloseTodayRatioByMoney"] = a.CloseTodayRatioByMoney; d["CloseTodayRatioByVolume"] = a.CloseTodayRatioByVolume; d["ExchangeID"] = encoding_cast(a.ExchangeID); d["BizType"] = a.BizType; d["InvestUnitID"] = encoding_cast(a.InvestUnitID); d["InstrumentID"] = encoding_cast(a.InstrumentID); return d;});

	py::class_<CThostFtdcDepthMarketDataField>(m, "CThostFtdcDepthMarketDataField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcDepthMarketDataField& a) {return CThostFtdcDepthMarketDataField(a);})
		.def_property("TradingDay", [](const CThostFtdcDepthMarketDataField& a) {return encoding_cast(a.TradingDay);}, [](CThostFtdcDepthMarketDataField& a, char c[]) {strcpy(a.TradingDay, c);})
		.def_property("reserve1", [](const CThostFtdcDepthMarketDataField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcDepthMarketDataField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("ExchangeID", [](const CThostFtdcDepthMarketDataField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcDepthMarketDataField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("reserve2", [](const CThostFtdcDepthMarketDataField& a) {return encoding_cast(a.reserve2);}, [](CThostFtdcDepthMarketDataField& a, char c[]) {strcpy(a.reserve2, c);})
		.def_readwrite("LastPrice", &CThostFtdcDepthMarketDataField::LastPrice)
		.def_readwrite("PreSettlementPrice", &CThostFtdcDepthMarketDataField::PreSettlementPrice)
		.def_readwrite("PreClosePrice", &CThostFtdcDepthMarketDataField::PreClosePrice)
		.def_readwrite("PreOpenInterest", &CThostFtdcDepthMarketDataField::PreOpenInterest)
		.def_readwrite("OpenPrice", &CThostFtdcDepthMarketDataField::OpenPrice)
		.def_readwrite("HighestPrice", &CThostFtdcDepthMarketDataField::HighestPrice)
		.def_readwrite("LowestPrice", &CThostFtdcDepthMarketDataField::LowestPrice)
		.def_readwrite("Volume", &CThostFtdcDepthMarketDataField::Volume)
		.def_readwrite("Turnover", &CThostFtdcDepthMarketDataField::Turnover)
		.def_readwrite("OpenInterest", &CThostFtdcDepthMarketDataField::OpenInterest)
		.def_readwrite("ClosePrice", &CThostFtdcDepthMarketDataField::ClosePrice)
		.def_readwrite("SettlementPrice", &CThostFtdcDepthMarketDataField::SettlementPrice)
		.def_readwrite("UpperLimitPrice", &CThostFtdcDepthMarketDataField::UpperLimitPrice)
		.def_readwrite("LowerLimitPrice", &CThostFtdcDepthMarketDataField::LowerLimitPrice)
		.def_readwrite("PreDelta", &CThostFtdcDepthMarketDataField::PreDelta)
		.def_readwrite("CurrDelta", &CThostFtdcDepthMarketDataField::CurrDelta)
		.def_property("UpdateTime", [](const CThostFtdcDepthMarketDataField& a) {return encoding_cast(a.UpdateTime);}, [](CThostFtdcDepthMarketDataField& a, char c[]) {strcpy(a.UpdateTime, c);})
		.def_readwrite("UpdateMillisec", &CThostFtdcDepthMarketDataField::UpdateMillisec)
		.def_readwrite("BidPrice1", &CThostFtdcDepthMarketDataField::BidPrice1)
		.def_readwrite("BidVolume1", &CThostFtdcDepthMarketDataField::BidVolume1)
		.def_readwrite("AskPrice1", &CThostFtdcDepthMarketDataField::AskPrice1)
		.def_readwrite("AskVolume1", &CThostFtdcDepthMarketDataField::AskVolume1)
		.def_readwrite("BidPrice2", &CThostFtdcDepthMarketDataField::BidPrice2)
		.def_readwrite("BidVolume2", &CThostFtdcDepthMarketDataField::BidVolume2)
		.def_readwrite("AskPrice2", &CThostFtdcDepthMarketDataField::AskPrice2)
		.def_readwrite("AskVolume2", &CThostFtdcDepthMarketDataField::AskVolume2)
		.def_readwrite("BidPrice3", &CThostFtdcDepthMarketDataField::BidPrice3)
		.def_readwrite("BidVolume3", &CThostFtdcDepthMarketDataField::BidVolume3)
		.def_readwrite("AskPrice3", &CThostFtdcDepthMarketDataField::AskPrice3)
		.def_readwrite("AskVolume3", &CThostFtdcDepthMarketDataField::AskVolume3)
		.def_readwrite("BidPrice4", &CThostFtdcDepthMarketDataField::BidPrice4)
		.def_readwrite("BidVolume4", &CThostFtdcDepthMarketDataField::BidVolume4)
		.def_readwrite("AskPrice4", &CThostFtdcDepthMarketDataField::AskPrice4)
		.def_readwrite("AskVolume4", &CThostFtdcDepthMarketDataField::AskVolume4)
		.def_readwrite("BidPrice5", &CThostFtdcDepthMarketDataField::BidPrice5)
		.def_readwrite("BidVolume5", &CThostFtdcDepthMarketDataField::BidVolume5)
		.def_readwrite("AskPrice5", &CThostFtdcDepthMarketDataField::AskPrice5)
		.def_readwrite("AskVolume5", &CThostFtdcDepthMarketDataField::AskVolume5)
		.def_readwrite("AveragePrice", &CThostFtdcDepthMarketDataField::AveragePrice)
		.def_property("ActionDay", [](const CThostFtdcDepthMarketDataField& a) {return encoding_cast(a.ActionDay);}, [](CThostFtdcDepthMarketDataField& a, char c[]) {strcpy(a.ActionDay, c);})
		.def_property("InstrumentID", [](const CThostFtdcDepthMarketDataField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcDepthMarketDataField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def_property("ExchangeInstID", [](const CThostFtdcDepthMarketDataField& a) {return encoding_cast(a.ExchangeInstID);}, [](CThostFtdcDepthMarketDataField& a, char c[]) {strcpy(a.ExchangeInstID, c);})
		.def("to_dict", [](const CThostFtdcDepthMarketDataField& a) {py::dict d; d["TradingDay"] = encoding_cast(a.TradingDay); d["reserve1"] = encoding_cast(a.reserve1); d["ExchangeID"] = encoding_cast(a.ExchangeID); d["reserve2"] = encoding_cast(a.reserve2); d["LastPrice"] = a.LastPrice; d["PreSettlementPrice"] = a.PreSettlementPrice; d["PreClosePrice"] = a.PreClosePrice; d["PreOpenInterest"] = a.PreOpenInterest; d["OpenPrice"] = a.OpenPrice; d["HighestPrice"] = a.HighestPrice; d["LowestPrice"] = a.LowestPrice; d["Volume"] = a.Volume; d["Turnover"] = a.Turnover; d["OpenInterest"] = a.OpenInterest; d["ClosePrice"] = a.ClosePrice; d["SettlementPrice"] = a.SettlementPrice; d["UpperLimitPrice"] = a.UpperLimitPrice; d["LowerLimitPrice"] = a.LowerLimitPrice; d["PreDelta"] = a.PreDelta; d["CurrDelta"] = a.CurrDelta; d["UpdateTime"] = encoding_cast(a.UpdateTime); d["UpdateMillisec"] = a.UpdateMillisec; d["BidPrice1"] = a.BidPrice1; d["BidVolume1"] = a.BidVolume1; d["AskPrice1"] = a.AskPrice1; d["AskVolume1"] = a.AskVolume1; d["BidPrice2"] = a.BidPrice2; d["BidVolume2"] = a.BidVolume2; d["AskPrice2"] = a.AskPrice2; d["AskVolume2"] = a.AskVolume2; d["BidPrice3"] = a.BidPrice3; d["BidVolume3"] = a.BidVolume3; d["AskPrice3"] = a.AskPrice3; d["AskVolume3"] = a.AskVolume3; d["BidPrice4"] = a.BidPrice4; d["BidVolume4"] = a.BidVolume4; d["AskPrice4"] = a.AskPrice4; d["AskVolume4"] = a.AskVolume4; d["BidPrice5"] = a.BidPrice5; d["BidVolume5"] = a.BidVolume5; d["AskPrice5"] = a.AskPrice5; d["AskVolume5"] = a.AskVolume5; d["AveragePrice"] = a.AveragePrice; d["ActionDay"] = encoding_cast(a.ActionDay); d["InstrumentID"] = encoding_cast(a.InstrumentID); d["ExchangeInstID"] = encoding_cast(a.ExchangeInstID); return d;});

	py::class_<CThostFtdcInstrumentTradingRightField>(m, "CThostFtdcInstrumentTradingRightField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcInstrumentTradingRightField& a) {return CThostFtdcInstrumentTradingRightField(a);})
		.def_property("reserve1", [](const CThostFtdcInstrumentTradingRightField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcInstrumentTradingRightField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_readwrite("InvestorRange", &CThostFtdcInstrumentTradingRightField::InvestorRange)
		.def_property("BrokerID", [](const CThostFtdcInstrumentTradingRightField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcInstrumentTradingRightField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcInstrumentTradingRightField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcInstrumentTradingRightField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_readwrite("TradingRight", &CThostFtdcInstrumentTradingRightField::TradingRight)
		.def_property("InstrumentID", [](const CThostFtdcInstrumentTradingRightField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcInstrumentTradingRightField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def("to_dict", [](const CThostFtdcInstrumentTradingRightField& a) {py::dict d; d["reserve1"] = encoding_cast(a.reserve1); d["InvestorRange"] = a.InvestorRange; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["TradingRight"] = a.TradingRight; d["InstrumentID"] = encoding_cast(a.InstrumentID); return d;});

	py::class_<CThostFtdcBrokerUserField>(m, "CThostFtdcBrokerUserField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcBrokerUserField& a) {return CThostFtdcBrokerUserField(a);})
		.def_property("BrokerID", [](const CThostFtdcBrokerUserField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcBrokerUserField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("UserID", [](const CThostFtdcBrokerUserField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcBrokerUserField& a, char c[]) {strcpy(a.UserID, c);})
		.def_property("UserName", [](const CThostFtdcBrokerUserField& a) {return encoding_cast(a.UserName);}, [](CThostFtdcBrokerUserField& a, char c[]) {strcpy(a.UserName, c);})
		.def_readwrite("UserType", &CThostFtdcBrokerUserField::UserType)
		.def_readwrite("IsActive", &CThostFtdcBrokerUserField::IsActive)
		.def_readwrite("IsUsingOTP", &CThostFtdcBrokerUserField::IsUsingOTP)
		.def_readwrite("IsAuthForce", &CThostFtdcBrokerUserField::IsAuthForce)
		.def("to_dict", [](const CThostFtdcBrokerUserField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["UserID"] = encoding_cast(a.UserID); d["UserName"] = encoding_cast(a.UserName); d["UserType"] = a.UserType; d["IsActive"] = a.IsActive; d["IsUsingOTP"] = a.IsUsingOTP; d["IsAuthForce"] = a.IsAuthForce; return d;});

	py::class_<CThostFtdcBrokerUserPasswordField>(m, "CThostFtdcBrokerUserPasswordField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcBrokerUserPasswordField& a) {return CThostFtdcBrokerUserPasswordField(a);})
		.def_property("BrokerID", [](const CThostFtdcBrokerUserPasswordField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcBrokerUserPasswordField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("UserID", [](const CThostFtdcBrokerUserPasswordField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcBrokerUserPasswordField& a, char c[]) {strcpy(a.UserID, c);})
		.def_property("Password", [](const CThostFtdcBrokerUserPasswordField& a) {return encoding_cast(a.Password);}, [](CThostFtdcBrokerUserPasswordField& a, char c[]) {strcpy(a.Password, c);})
		.def_property("LastUpdateTime", [](const CThostFtdcBrokerUserPasswordField& a) {return encoding_cast(a.LastUpdateTime);}, [](CThostFtdcBrokerUserPasswordField& a, char c[]) {strcpy(a.LastUpdateTime, c);})
		.def_property("LastLoginTime", [](const CThostFtdcBrokerUserPasswordField& a) {return encoding_cast(a.LastLoginTime);}, [](CThostFtdcBrokerUserPasswordField& a, char c[]) {strcpy(a.LastLoginTime, c);})
		.def_property("ExpireDate", [](const CThostFtdcBrokerUserPasswordField& a) {return encoding_cast(a.ExpireDate);}, [](CThostFtdcBrokerUserPasswordField& a, char c[]) {strcpy(a.ExpireDate, c);})
		.def_property("WeakExpireDate", [](const CThostFtdcBrokerUserPasswordField& a) {return encoding_cast(a.WeakExpireDate);}, [](CThostFtdcBrokerUserPasswordField& a, char c[]) {strcpy(a.WeakExpireDate, c);})
		.def("to_dict", [](const CThostFtdcBrokerUserPasswordField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["UserID"] = encoding_cast(a.UserID); d["Password"] = encoding_cast(a.Password); d["LastUpdateTime"] = encoding_cast(a.LastUpdateTime); d["LastLoginTime"] = encoding_cast(a.LastLoginTime); d["ExpireDate"] = encoding_cast(a.ExpireDate); d["WeakExpireDate"] = encoding_cast(a.WeakExpireDate); return d;});

	py::class_<CThostFtdcBrokerUserFunctionField>(m, "CThostFtdcBrokerUserFunctionField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcBrokerUserFunctionField& a) {return CThostFtdcBrokerUserFunctionField(a);})
		.def_property("BrokerID", [](const CThostFtdcBrokerUserFunctionField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcBrokerUserFunctionField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("UserID", [](const CThostFtdcBrokerUserFunctionField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcBrokerUserFunctionField& a, char c[]) {strcpy(a.UserID, c);})
		.def_readwrite("BrokerFunctionCode", &CThostFtdcBrokerUserFunctionField::BrokerFunctionCode)
		.def("to_dict", [](const CThostFtdcBrokerUserFunctionField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["UserID"] = encoding_cast(a.UserID); d["BrokerFunctionCode"] = a.BrokerFunctionCode; return d;});

	py::class_<CThostFtdcTraderOfferField>(m, "CThostFtdcTraderOfferField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcTraderOfferField& a) {return CThostFtdcTraderOfferField(a);})
		.def_property("ExchangeID", [](const CThostFtdcTraderOfferField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcTraderOfferField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("TraderID", [](const CThostFtdcTraderOfferField& a) {return encoding_cast(a.TraderID);}, [](CThostFtdcTraderOfferField& a, char c[]) {strcpy(a.TraderID, c);})
		.def_property("ParticipantID", [](const CThostFtdcTraderOfferField& a) {return encoding_cast(a.ParticipantID);}, [](CThostFtdcTraderOfferField& a, char c[]) {strcpy(a.ParticipantID, c);})
		.def_property("Password", [](const CThostFtdcTraderOfferField& a) {return encoding_cast(a.Password);}, [](CThostFtdcTraderOfferField& a, char c[]) {strcpy(a.Password, c);})
		.def_readwrite("InstallID", &CThostFtdcTraderOfferField::InstallID)
		.def_property("OrderLocalID", [](const CThostFtdcTraderOfferField& a) {return encoding_cast(a.OrderLocalID);}, [](CThostFtdcTraderOfferField& a, char c[]) {strcpy(a.OrderLocalID, c);})
		.def_readwrite("TraderConnectStatus", &CThostFtdcTraderOfferField::TraderConnectStatus)
		.def_property("ConnectRequestDate", [](const CThostFtdcTraderOfferField& a) {return encoding_cast(a.ConnectRequestDate);}, [](CThostFtdcTraderOfferField& a, char c[]) {strcpy(a.ConnectRequestDate, c);})
		.def_property("ConnectRequestTime", [](const CThostFtdcTraderOfferField& a) {return encoding_cast(a.ConnectRequestTime);}, [](CThostFtdcTraderOfferField& a, char c[]) {strcpy(a.ConnectRequestTime, c);})
		.def_property("LastReportDate", [](const CThostFtdcTraderOfferField& a) {return encoding_cast(a.LastReportDate);}, [](CThostFtdcTraderOfferField& a, char c[]) {strcpy(a.LastReportDate, c);})
		.def_property("LastReportTime", [](const CThostFtdcTraderOfferField& a) {return encoding_cast(a.LastReportTime);}, [](CThostFtdcTraderOfferField& a, char c[]) {strcpy(a.LastReportTime, c);})
		.def_property("ConnectDate", [](const CThostFtdcTraderOfferField& a) {return encoding_cast(a.ConnectDate);}, [](CThostFtdcTraderOfferField& a, char c[]) {strcpy(a.ConnectDate, c);})
		.def_property("ConnectTime", [](const CThostFtdcTraderOfferField& a) {return encoding_cast(a.ConnectTime);}, [](CThostFtdcTraderOfferField& a, char c[]) {strcpy(a.ConnectTime, c);})
		.def_property("StartDate", [](const CThostFtdcTraderOfferField& a) {return encoding_cast(a.StartDate);}, [](CThostFtdcTraderOfferField& a, char c[]) {strcpy(a.StartDate, c);})
		.def_property("StartTime", [](const CThostFtdcTraderOfferField& a) {return encoding_cast(a.StartTime);}, [](CThostFtdcTraderOfferField& a, char c[]) {strcpy(a.StartTime, c);})
		.def_property("TradingDay", [](const CThostFtdcTraderOfferField& a) {return encoding_cast(a.TradingDay);}, [](CThostFtdcTraderOfferField& a, char c[]) {strcpy(a.TradingDay, c);})
		.def_property("BrokerID", [](const CThostFtdcTraderOfferField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcTraderOfferField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("MaxTradeID", [](const CThostFtdcTraderOfferField& a) {return encoding_cast(a.MaxTradeID);}, [](CThostFtdcTraderOfferField& a, char c[]) {strcpy(a.MaxTradeID, c);})
		.def_property("MaxOrderMessageReference", [](const CThostFtdcTraderOfferField& a) {return encoding_cast(a.MaxOrderMessageReference);}, [](CThostFtdcTraderOfferField& a, char c[]) {strcpy(a.MaxOrderMessageReference, c);})
		.def("to_dict", [](const CThostFtdcTraderOfferField& a) {py::dict d; d["ExchangeID"] = encoding_cast(a.ExchangeID); d["TraderID"] = encoding_cast(a.TraderID); d["ParticipantID"] = encoding_cast(a.ParticipantID); d["Password"] = encoding_cast(a.Password); d["InstallID"] = a.InstallID; d["OrderLocalID"] = encoding_cast(a.OrderLocalID); d["TraderConnectStatus"] = a.TraderConnectStatus; d["ConnectRequestDate"] = encoding_cast(a.ConnectRequestDate); d["ConnectRequestTime"] = encoding_cast(a.ConnectRequestTime); d["LastReportDate"] = encoding_cast(a.LastReportDate); d["LastReportTime"] = encoding_cast(a.LastReportTime); d["ConnectDate"] = encoding_cast(a.ConnectDate); d["ConnectTime"] = encoding_cast(a.ConnectTime); d["StartDate"] = encoding_cast(a.StartDate); d["StartTime"] = encoding_cast(a.StartTime); d["TradingDay"] = encoding_cast(a.TradingDay); d["BrokerID"] = encoding_cast(a.BrokerID); d["MaxTradeID"] = encoding_cast(a.MaxTradeID); d["MaxOrderMessageReference"] = encoding_cast(a.MaxOrderMessageReference); return d;});

	py::class_<CThostFtdcSettlementInfoField>(m, "CThostFtdcSettlementInfoField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcSettlementInfoField& a) {return CThostFtdcSettlementInfoField(a);})
		.def_property("TradingDay", [](const CThostFtdcSettlementInfoField& a) {return encoding_cast(a.TradingDay);}, [](CThostFtdcSettlementInfoField& a, char c[]) {strcpy(a.TradingDay, c);})
		.def_readwrite("SettlementID", &CThostFtdcSettlementInfoField::SettlementID)
		.def_property("BrokerID", [](const CThostFtdcSettlementInfoField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcSettlementInfoField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcSettlementInfoField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcSettlementInfoField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_readwrite("SequenceNo", &CThostFtdcSettlementInfoField::SequenceNo)
		.def_property("Content", [](const CThostFtdcSettlementInfoField& a) {return encoding_cast(a.Content);}, [](CThostFtdcSettlementInfoField& a, char c[]) {strcpy(a.Content, c);})
		.def_property("AccountID", [](const CThostFtdcSettlementInfoField& a) {return encoding_cast(a.AccountID);}, [](CThostFtdcSettlementInfoField& a, char c[]) {strcpy(a.AccountID, c);})
		.def_property("CurrencyID", [](const CThostFtdcSettlementInfoField& a) {return encoding_cast(a.CurrencyID);}, [](CThostFtdcSettlementInfoField& a, char c[]) {strcpy(a.CurrencyID, c);})
		.def("to_dict", [](const CThostFtdcSettlementInfoField& a) {py::dict d; d["TradingDay"] = encoding_cast(a.TradingDay); d["SettlementID"] = a.SettlementID; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["SequenceNo"] = a.SequenceNo; d["Content"] = encoding_cast(a.Content); d["AccountID"] = encoding_cast(a.AccountID); d["CurrencyID"] = encoding_cast(a.CurrencyID); return d;});

	py::class_<CThostFtdcInstrumentMarginRateAdjustField>(m, "CThostFtdcInstrumentMarginRateAdjustField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcInstrumentMarginRateAdjustField& a) {return CThostFtdcInstrumentMarginRateAdjustField(a);})
		.def_property("reserve1", [](const CThostFtdcInstrumentMarginRateAdjustField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcInstrumentMarginRateAdjustField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_readwrite("InvestorRange", &CThostFtdcInstrumentMarginRateAdjustField::InvestorRange)
		.def_property("BrokerID", [](const CThostFtdcInstrumentMarginRateAdjustField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcInstrumentMarginRateAdjustField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcInstrumentMarginRateAdjustField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcInstrumentMarginRateAdjustField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_readwrite("HedgeFlag", &CThostFtdcInstrumentMarginRateAdjustField::HedgeFlag)
		.def_readwrite("LongMarginRatioByMoney", &CThostFtdcInstrumentMarginRateAdjustField::LongMarginRatioByMoney)
		.def_readwrite("LongMarginRatioByVolume", &CThostFtdcInstrumentMarginRateAdjustField::LongMarginRatioByVolume)
		.def_readwrite("ShortMarginRatioByMoney", &CThostFtdcInstrumentMarginRateAdjustField::ShortMarginRatioByMoney)
		.def_readwrite("ShortMarginRatioByVolume", &CThostFtdcInstrumentMarginRateAdjustField::ShortMarginRatioByVolume)
		.def_readwrite("IsRelative", &CThostFtdcInstrumentMarginRateAdjustField::IsRelative)
		.def_property("InstrumentID", [](const CThostFtdcInstrumentMarginRateAdjustField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcInstrumentMarginRateAdjustField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def("to_dict", [](const CThostFtdcInstrumentMarginRateAdjustField& a) {py::dict d; d["reserve1"] = encoding_cast(a.reserve1); d["InvestorRange"] = a.InvestorRange; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["HedgeFlag"] = a.HedgeFlag; d["LongMarginRatioByMoney"] = a.LongMarginRatioByMoney; d["LongMarginRatioByVolume"] = a.LongMarginRatioByVolume; d["ShortMarginRatioByMoney"] = a.ShortMarginRatioByMoney; d["ShortMarginRatioByVolume"] = a.ShortMarginRatioByVolume; d["IsRelative"] = a.IsRelative; d["InstrumentID"] = encoding_cast(a.InstrumentID); return d;});

	py::class_<CThostFtdcExchangeMarginRateField>(m, "CThostFtdcExchangeMarginRateField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcExchangeMarginRateField& a) {return CThostFtdcExchangeMarginRateField(a);})
		.def_property("BrokerID", [](const CThostFtdcExchangeMarginRateField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcExchangeMarginRateField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("reserve1", [](const CThostFtdcExchangeMarginRateField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcExchangeMarginRateField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_readwrite("HedgeFlag", &CThostFtdcExchangeMarginRateField::HedgeFlag)
		.def_readwrite("LongMarginRatioByMoney", &CThostFtdcExchangeMarginRateField::LongMarginRatioByMoney)
		.def_readwrite("LongMarginRatioByVolume", &CThostFtdcExchangeMarginRateField::LongMarginRatioByVolume)
		.def_readwrite("ShortMarginRatioByMoney", &CThostFtdcExchangeMarginRateField::ShortMarginRatioByMoney)
		.def_readwrite("ShortMarginRatioByVolume", &CThostFtdcExchangeMarginRateField::ShortMarginRatioByVolume)
		.def_property("ExchangeID", [](const CThostFtdcExchangeMarginRateField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcExchangeMarginRateField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("InstrumentID", [](const CThostFtdcExchangeMarginRateField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcExchangeMarginRateField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def("to_dict", [](const CThostFtdcExchangeMarginRateField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["reserve1"] = encoding_cast(a.reserve1); d["HedgeFlag"] = a.HedgeFlag; d["LongMarginRatioByMoney"] = a.LongMarginRatioByMoney; d["LongMarginRatioByVolume"] = a.LongMarginRatioByVolume; d["ShortMarginRatioByMoney"] = a.ShortMarginRatioByMoney; d["ShortMarginRatioByVolume"] = a.ShortMarginRatioByVolume; d["ExchangeID"] = encoding_cast(a.ExchangeID); d["InstrumentID"] = encoding_cast(a.InstrumentID); return d;});

	py::class_<CThostFtdcExchangeMarginRateAdjustField>(m, "CThostFtdcExchangeMarginRateAdjustField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcExchangeMarginRateAdjustField& a) {return CThostFtdcExchangeMarginRateAdjustField(a);})
		.def_property("BrokerID", [](const CThostFtdcExchangeMarginRateAdjustField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcExchangeMarginRateAdjustField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("reserve1", [](const CThostFtdcExchangeMarginRateAdjustField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcExchangeMarginRateAdjustField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_readwrite("HedgeFlag", &CThostFtdcExchangeMarginRateAdjustField::HedgeFlag)
		.def_readwrite("LongMarginRatioByMoney", &CThostFtdcExchangeMarginRateAdjustField::LongMarginRatioByMoney)
		.def_readwrite("LongMarginRatioByVolume", &CThostFtdcExchangeMarginRateAdjustField::LongMarginRatioByVolume)
		.def_readwrite("ShortMarginRatioByMoney", &CThostFtdcExchangeMarginRateAdjustField::ShortMarginRatioByMoney)
		.def_readwrite("ShortMarginRatioByVolume", &CThostFtdcExchangeMarginRateAdjustField::ShortMarginRatioByVolume)
		.def_readwrite("ExchLongMarginRatioByMoney", &CThostFtdcExchangeMarginRateAdjustField::ExchLongMarginRatioByMoney)
		.def_readwrite("ExchLongMarginRatioByVolume", &CThostFtdcExchangeMarginRateAdjustField::ExchLongMarginRatioByVolume)
		.def_readwrite("ExchShortMarginRatioByMoney", &CThostFtdcExchangeMarginRateAdjustField::ExchShortMarginRatioByMoney)
		.def_readwrite("ExchShortMarginRatioByVolume", &CThostFtdcExchangeMarginRateAdjustField::ExchShortMarginRatioByVolume)
		.def_readwrite("NoLongMarginRatioByMoney", &CThostFtdcExchangeMarginRateAdjustField::NoLongMarginRatioByMoney)
		.def_readwrite("NoLongMarginRatioByVolume", &CThostFtdcExchangeMarginRateAdjustField::NoLongMarginRatioByVolume)
		.def_readwrite("NoShortMarginRatioByMoney", &CThostFtdcExchangeMarginRateAdjustField::NoShortMarginRatioByMoney)
		.def_readwrite("NoShortMarginRatioByVolume", &CThostFtdcExchangeMarginRateAdjustField::NoShortMarginRatioByVolume)
		.def_property("InstrumentID", [](const CThostFtdcExchangeMarginRateAdjustField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcExchangeMarginRateAdjustField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def("to_dict", [](const CThostFtdcExchangeMarginRateAdjustField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["reserve1"] = encoding_cast(a.reserve1); d["HedgeFlag"] = a.HedgeFlag; d["LongMarginRatioByMoney"] = a.LongMarginRatioByMoney; d["LongMarginRatioByVolume"] = a.LongMarginRatioByVolume; d["ShortMarginRatioByMoney"] = a.ShortMarginRatioByMoney; d["ShortMarginRatioByVolume"] = a.ShortMarginRatioByVolume; d["ExchLongMarginRatioByMoney"] = a.ExchLongMarginRatioByMoney; d["ExchLongMarginRatioByVolume"] = a.ExchLongMarginRatioByVolume; d["ExchShortMarginRatioByMoney"] = a.ExchShortMarginRatioByMoney; d["ExchShortMarginRatioByVolume"] = a.ExchShortMarginRatioByVolume; d["NoLongMarginRatioByMoney"] = a.NoLongMarginRatioByMoney; d["NoLongMarginRatioByVolume"] = a.NoLongMarginRatioByVolume; d["NoShortMarginRatioByMoney"] = a.NoShortMarginRatioByMoney; d["NoShortMarginRatioByVolume"] = a.NoShortMarginRatioByVolume; d["InstrumentID"] = encoding_cast(a.InstrumentID); return d;});

	py::class_<CThostFtdcExchangeRateField>(m, "CThostFtdcExchangeRateField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcExchangeRateField& a) {return CThostFtdcExchangeRateField(a);})
		.def_property("BrokerID", [](const CThostFtdcExchangeRateField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcExchangeRateField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("FromCurrencyID", [](const CThostFtdcExchangeRateField& a) {return encoding_cast(a.FromCurrencyID);}, [](CThostFtdcExchangeRateField& a, char c[]) {strcpy(a.FromCurrencyID, c);})
		.def_readwrite("FromCurrencyUnit", &CThostFtdcExchangeRateField::FromCurrencyUnit)
		.def_property("ToCurrencyID", [](const CThostFtdcExchangeRateField& a) {return encoding_cast(a.ToCurrencyID);}, [](CThostFtdcExchangeRateField& a, char c[]) {strcpy(a.ToCurrencyID, c);})
		.def_readwrite("ExchangeRate", &CThostFtdcExchangeRateField::ExchangeRate)
		.def("to_dict", [](const CThostFtdcExchangeRateField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["FromCurrencyID"] = encoding_cast(a.FromCurrencyID); d["FromCurrencyUnit"] = a.FromCurrencyUnit; d["ToCurrencyID"] = encoding_cast(a.ToCurrencyID); d["ExchangeRate"] = a.ExchangeRate; return d;});

	py::class_<CThostFtdcSettlementRefField>(m, "CThostFtdcSettlementRefField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcSettlementRefField& a) {return CThostFtdcSettlementRefField(a);})
		.def_property("TradingDay", [](const CThostFtdcSettlementRefField& a) {return encoding_cast(a.TradingDay);}, [](CThostFtdcSettlementRefField& a, char c[]) {strcpy(a.TradingDay, c);})
		.def_readwrite("SettlementID", &CThostFtdcSettlementRefField::SettlementID)
		.def("to_dict", [](const CThostFtdcSettlementRefField& a) {py::dict d; d["TradingDay"] = encoding_cast(a.TradingDay); d["SettlementID"] = a.SettlementID; return d;});

	py::class_<CThostFtdcCurrentTimeField>(m, "CThostFtdcCurrentTimeField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcCurrentTimeField& a) {return CThostFtdcCurrentTimeField(a);})
		.def_property("CurrDate", [](const CThostFtdcCurrentTimeField& a) {return encoding_cast(a.CurrDate);}, [](CThostFtdcCurrentTimeField& a, char c[]) {strcpy(a.CurrDate, c);})
		.def_property("CurrTime", [](const CThostFtdcCurrentTimeField& a) {return encoding_cast(a.CurrTime);}, [](CThostFtdcCurrentTimeField& a, char c[]) {strcpy(a.CurrTime, c);})
		.def_readwrite("CurrMillisec", &CThostFtdcCurrentTimeField::CurrMillisec)
		.def_property("ActionDay", [](const CThostFtdcCurrentTimeField& a) {return encoding_cast(a.ActionDay);}, [](CThostFtdcCurrentTimeField& a, char c[]) {strcpy(a.ActionDay, c);})
		.def("to_dict", [](const CThostFtdcCurrentTimeField& a) {py::dict d; d["CurrDate"] = encoding_cast(a.CurrDate); d["CurrTime"] = encoding_cast(a.CurrTime); d["CurrMillisec"] = a.CurrMillisec; d["ActionDay"] = encoding_cast(a.ActionDay); return d;});

	py::class_<CThostFtdcCommPhaseField>(m, "CThostFtdcCommPhaseField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcCommPhaseField& a) {return CThostFtdcCommPhaseField(a);})
		.def_property("TradingDay", [](const CThostFtdcCommPhaseField& a) {return encoding_cast(a.TradingDay);}, [](CThostFtdcCommPhaseField& a, char c[]) {strcpy(a.TradingDay, c);})
		.def_readwrite("CommPhaseNo", &CThostFtdcCommPhaseField::CommPhaseNo)
		.def_property("SystemID", [](const CThostFtdcCommPhaseField& a) {return encoding_cast(a.SystemID);}, [](CThostFtdcCommPhaseField& a, char c[]) {strcpy(a.SystemID, c);})
		.def("to_dict", [](const CThostFtdcCommPhaseField& a) {py::dict d; d["TradingDay"] = encoding_cast(a.TradingDay); d["CommPhaseNo"] = a.CommPhaseNo; d["SystemID"] = encoding_cast(a.SystemID); return d;});

	py::class_<CThostFtdcLoginInfoField>(m, "CThostFtdcLoginInfoField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcLoginInfoField& a) {return CThostFtdcLoginInfoField(a);})
		.def_readwrite("FrontID", &CThostFtdcLoginInfoField::FrontID)
		.def_readwrite("SessionID", &CThostFtdcLoginInfoField::SessionID)
		.def_property("BrokerID", [](const CThostFtdcLoginInfoField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcLoginInfoField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("UserID", [](const CThostFtdcLoginInfoField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcLoginInfoField& a, char c[]) {strcpy(a.UserID, c);})
		.def_property("LoginDate", [](const CThostFtdcLoginInfoField& a) {return encoding_cast(a.LoginDate);}, [](CThostFtdcLoginInfoField& a, char c[]) {strcpy(a.LoginDate, c);})
		.def_property("LoginTime", [](const CThostFtdcLoginInfoField& a) {return encoding_cast(a.LoginTime);}, [](CThostFtdcLoginInfoField& a, char c[]) {strcpy(a.LoginTime, c);})
		.def_property("reserve1", [](const CThostFtdcLoginInfoField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcLoginInfoField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("UserProductInfo", [](const CThostFtdcLoginInfoField& a) {return encoding_cast(a.UserProductInfo);}, [](CThostFtdcLoginInfoField& a, char c[]) {strcpy(a.UserProductInfo, c);})
		.def_property("InterfaceProductInfo", [](const CThostFtdcLoginInfoField& a) {return encoding_cast(a.InterfaceProductInfo);}, [](CThostFtdcLoginInfoField& a, char c[]) {strcpy(a.InterfaceProductInfo, c);})
		.def_property("ProtocolInfo", [](const CThostFtdcLoginInfoField& a) {return encoding_cast(a.ProtocolInfo);}, [](CThostFtdcLoginInfoField& a, char c[]) {strcpy(a.ProtocolInfo, c);})
		.def_property("SystemName", [](const CThostFtdcLoginInfoField& a) {return encoding_cast(a.SystemName);}, [](CThostFtdcLoginInfoField& a, char c[]) {strcpy(a.SystemName, c);})
		.def_property("PasswordDeprecated", [](const CThostFtdcLoginInfoField& a) {return encoding_cast(a.PasswordDeprecated);}, [](CThostFtdcLoginInfoField& a, char c[]) {strcpy(a.PasswordDeprecated, c);})
		.def_property("MaxOrderRef", [](const CThostFtdcLoginInfoField& a) {return encoding_cast(a.MaxOrderRef);}, [](CThostFtdcLoginInfoField& a, char c[]) {strcpy(a.MaxOrderRef, c);})
		.def_property("SHFETime", [](const CThostFtdcLoginInfoField& a) {return encoding_cast(a.SHFETime);}, [](CThostFtdcLoginInfoField& a, char c[]) {strcpy(a.SHFETime, c);})
		.def_property("DCETime", [](const CThostFtdcLoginInfoField& a) {return encoding_cast(a.DCETime);}, [](CThostFtdcLoginInfoField& a, char c[]) {strcpy(a.DCETime, c);})
		.def_property("CZCETime", [](const CThostFtdcLoginInfoField& a) {return encoding_cast(a.CZCETime);}, [](CThostFtdcLoginInfoField& a, char c[]) {strcpy(a.CZCETime, c);})
		.def_property("FFEXTime", [](const CThostFtdcLoginInfoField& a) {return encoding_cast(a.FFEXTime);}, [](CThostFtdcLoginInfoField& a, char c[]) {strcpy(a.FFEXTime, c);})
		.def_property("MacAddress", [](const CThostFtdcLoginInfoField& a) {return encoding_cast(a.MacAddress);}, [](CThostFtdcLoginInfoField& a, char c[]) {strcpy(a.MacAddress, c);})
		.def_property("OneTimePassword", [](const CThostFtdcLoginInfoField& a) {return encoding_cast(a.OneTimePassword);}, [](CThostFtdcLoginInfoField& a, char c[]) {strcpy(a.OneTimePassword, c);})
		.def_property("INETime", [](const CThostFtdcLoginInfoField& a) {return encoding_cast(a.INETime);}, [](CThostFtdcLoginInfoField& a, char c[]) {strcpy(a.INETime, c);})
		.def_readwrite("IsQryControl", &CThostFtdcLoginInfoField::IsQryControl)
		.def_property("LoginRemark", [](const CThostFtdcLoginInfoField& a) {return encoding_cast(a.LoginRemark);}, [](CThostFtdcLoginInfoField& a, char c[]) {strcpy(a.LoginRemark, c);})
		.def_property("Password", [](const CThostFtdcLoginInfoField& a) {return encoding_cast(a.Password);}, [](CThostFtdcLoginInfoField& a, char c[]) {strcpy(a.Password, c);})
		.def_property("IPAddress", [](const CThostFtdcLoginInfoField& a) {return encoding_cast(a.IPAddress);}, [](CThostFtdcLoginInfoField& a, char c[]) {strcpy(a.IPAddress, c);})
		.def("to_dict", [](const CThostFtdcLoginInfoField& a) {py::dict d; d["FrontID"] = a.FrontID; d["SessionID"] = a.SessionID; d["BrokerID"] = encoding_cast(a.BrokerID); d["UserID"] = encoding_cast(a.UserID); d["LoginDate"] = encoding_cast(a.LoginDate); d["LoginTime"] = encoding_cast(a.LoginTime); d["reserve1"] = encoding_cast(a.reserve1); d["UserProductInfo"] = encoding_cast(a.UserProductInfo); d["InterfaceProductInfo"] = encoding_cast(a.InterfaceProductInfo); d["ProtocolInfo"] = encoding_cast(a.ProtocolInfo); d["SystemName"] = encoding_cast(a.SystemName); d["PasswordDeprecated"] = encoding_cast(a.PasswordDeprecated); d["MaxOrderRef"] = encoding_cast(a.MaxOrderRef); d["SHFETime"] = encoding_cast(a.SHFETime); d["DCETime"] = encoding_cast(a.DCETime); d["CZCETime"] = encoding_cast(a.CZCETime); d["FFEXTime"] = encoding_cast(a.FFEXTime); d["MacAddress"] = encoding_cast(a.MacAddress); d["OneTimePassword"] = encoding_cast(a.OneTimePassword); d["INETime"] = encoding_cast(a.INETime); d["IsQryControl"] = a.IsQryControl; d["LoginRemark"] = encoding_cast(a.LoginRemark); d["Password"] = encoding_cast(a.Password); d["IPAddress"] = encoding_cast(a.IPAddress); return d;});

	py::class_<CThostFtdcLogoutAllField>(m, "CThostFtdcLogoutAllField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcLogoutAllField& a) {return CThostFtdcLogoutAllField(a);})
		.def_readwrite("FrontID", &CThostFtdcLogoutAllField::FrontID)
		.def_readwrite("SessionID", &CThostFtdcLogoutAllField::SessionID)
		.def_property("SystemName", [](const CThostFtdcLogoutAllField& a) {return encoding_cast(a.SystemName);}, [](CThostFtdcLogoutAllField& a, char c[]) {strcpy(a.SystemName, c);})
		.def("to_dict", [](const CThostFtdcLogoutAllField& a) {py::dict d; d["FrontID"] = a.FrontID; d["SessionID"] = a.SessionID; d["SystemName"] = encoding_cast(a.SystemName); return d;});

	py::class_<CThostFtdcFrontStatusField>(m, "CThostFtdcFrontStatusField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcFrontStatusField& a) {return CThostFtdcFrontStatusField(a);})
		.def_readwrite("FrontID", &CThostFtdcFrontStatusField::FrontID)
		.def_property("LastReportDate", [](const CThostFtdcFrontStatusField& a) {return encoding_cast(a.LastReportDate);}, [](CThostFtdcFrontStatusField& a, char c[]) {strcpy(a.LastReportDate, c);})
		.def_property("LastReportTime", [](const CThostFtdcFrontStatusField& a) {return encoding_cast(a.LastReportTime);}, [](CThostFtdcFrontStatusField& a, char c[]) {strcpy(a.LastReportTime, c);})
		.def_readwrite("IsActive", &CThostFtdcFrontStatusField::IsActive)
		.def("to_dict", [](const CThostFtdcFrontStatusField& a) {py::dict d; d["FrontID"] = a.FrontID; d["LastReportDate"] = encoding_cast(a.LastReportDate); d["LastReportTime"] = encoding_cast(a.LastReportTime); d["IsActive"] = a.IsActive; return d;});

	py::class_<CThostFtdcUserPasswordUpdateField>(m, "CThostFtdcUserPasswordUpdateField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcUserPasswordUpdateField& a) {return CThostFtdcUserPasswordUpdateField(a);})
		.def_property("BrokerID", [](const CThostFtdcUserPasswordUpdateField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcUserPasswordUpdateField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("UserID", [](const CThostFtdcUserPasswordUpdateField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcUserPasswordUpdateField& a, char c[]) {strcpy(a.UserID, c);})
		.def_property("OldPassword", [](const CThostFtdcUserPasswordUpdateField& a) {return encoding_cast(a.OldPassword);}, [](CThostFtdcUserPasswordUpdateField& a, char c[]) {strcpy(a.OldPassword, c);})
		.def_property("NewPassword", [](const CThostFtdcUserPasswordUpdateField& a) {return encoding_cast(a.NewPassword);}, [](CThostFtdcUserPasswordUpdateField& a, char c[]) {strcpy(a.NewPassword, c);})
		.def("to_dict", [](const CThostFtdcUserPasswordUpdateField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["UserID"] = encoding_cast(a.UserID); d["OldPassword"] = encoding_cast(a.OldPassword); d["NewPassword"] = encoding_cast(a.NewPassword); return d;});

	py::class_<CThostFtdcInputOrderField>(m, "CThostFtdcInputOrderField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcInputOrderField& a) {return CThostFtdcInputOrderField(a);})
		.def_property("BrokerID", [](const CThostFtdcInputOrderField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcInputOrderField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcInputOrderField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcInputOrderField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_property("reserve1", [](const CThostFtdcInputOrderField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcInputOrderField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("OrderRef", [](const CThostFtdcInputOrderField& a) {return encoding_cast(a.OrderRef);}, [](CThostFtdcInputOrderField& a, char c[]) {strcpy(a.OrderRef, c);})
		.def_property("UserID", [](const CThostFtdcInputOrderField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcInputOrderField& a, char c[]) {strcpy(a.UserID, c);})
		.def_readwrite("OrderPriceType", &CThostFtdcInputOrderField::OrderPriceType)
		.def_readwrite("Direction", &CThostFtdcInputOrderField::Direction)
		.def_property("CombOffsetFlag", [](const CThostFtdcInputOrderField& a) {return encoding_cast(a.CombOffsetFlag);}, [](CThostFtdcInputOrderField& a, char c[]) {strcpy(a.CombOffsetFlag, c);})
		.def_property("CombHedgeFlag", [](const CThostFtdcInputOrderField& a) {return encoding_cast(a.CombHedgeFlag);}, [](CThostFtdcInputOrderField& a, char c[]) {strcpy(a.CombHedgeFlag, c);})
		.def_readwrite("LimitPrice", &CThostFtdcInputOrderField::LimitPrice)
		.def_readwrite("VolumeTotalOriginal", &CThostFtdcInputOrderField::VolumeTotalOriginal)
		.def_readwrite("TimeCondition", &CThostFtdcInputOrderField::TimeCondition)
		.def_property("GTDDate", [](const CThostFtdcInputOrderField& a) {return encoding_cast(a.GTDDate);}, [](CThostFtdcInputOrderField& a, char c[]) {strcpy(a.GTDDate, c);})
		.def_readwrite("VolumeCondition", &CThostFtdcInputOrderField::VolumeCondition)
		.def_readwrite("MinVolume", &CThostFtdcInputOrderField::MinVolume)
		.def_readwrite("ContingentCondition", &CThostFtdcInputOrderField::ContingentCondition)
		.def_readwrite("StopPrice", &CThostFtdcInputOrderField::StopPrice)
		.def_readwrite("ForceCloseReason", &CThostFtdcInputOrderField::ForceCloseReason)
		.def_readwrite("IsAutoSuspend", &CThostFtdcInputOrderField::IsAutoSuspend)
		.def_property("BusinessUnit", [](const CThostFtdcInputOrderField& a) {return encoding_cast(a.BusinessUnit);}, [](CThostFtdcInputOrderField& a, char c[]) {strcpy(a.BusinessUnit, c);})
		.def_readwrite("RequestID", &CThostFtdcInputOrderField::RequestID)
		.def_readwrite("UserForceClose", &CThostFtdcInputOrderField::UserForceClose)
		.def_readwrite("IsSwapOrder", &CThostFtdcInputOrderField::IsSwapOrder)
		.def_property("ExchangeID", [](const CThostFtdcInputOrderField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcInputOrderField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("InvestUnitID", [](const CThostFtdcInputOrderField& a) {return encoding_cast(a.InvestUnitID);}, [](CThostFtdcInputOrderField& a, char c[]) {strcpy(a.InvestUnitID, c);})
		.def_property("AccountID", [](const CThostFtdcInputOrderField& a) {return encoding_cast(a.AccountID);}, [](CThostFtdcInputOrderField& a, char c[]) {strcpy(a.AccountID, c);})
		.def_property("CurrencyID", [](const CThostFtdcInputOrderField& a) {return encoding_cast(a.CurrencyID);}, [](CThostFtdcInputOrderField& a, char c[]) {strcpy(a.CurrencyID, c);})
		.def_property("ClientID", [](const CThostFtdcInputOrderField& a) {return encoding_cast(a.ClientID);}, [](CThostFtdcInputOrderField& a, char c[]) {strcpy(a.ClientID, c);})
		.def_property("reserve2", [](const CThostFtdcInputOrderField& a) {return encoding_cast(a.reserve2);}, [](CThostFtdcInputOrderField& a, char c[]) {strcpy(a.reserve2, c);})
		.def_property("MacAddress", [](const CThostFtdcInputOrderField& a) {return encoding_cast(a.MacAddress);}, [](CThostFtdcInputOrderField& a, char c[]) {strcpy(a.MacAddress, c);})
		.def_property("InstrumentID", [](const CThostFtdcInputOrderField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcInputOrderField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def_property("IPAddress", [](const CThostFtdcInputOrderField& a) {return encoding_cast(a.IPAddress);}, [](CThostFtdcInputOrderField& a, char c[]) {strcpy(a.IPAddress, c);})
		.def("to_dict", [](const CThostFtdcInputOrderField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["reserve1"] = encoding_cast(a.reserve1); d["OrderRef"] = encoding_cast(a.OrderRef); d["UserID"] = encoding_cast(a.UserID); d["OrderPriceType"] = a.OrderPriceType; d["Direction"] = a.Direction; d["CombOffsetFlag"] = encoding_cast(a.CombOffsetFlag); d["CombHedgeFlag"] = encoding_cast(a.CombHedgeFlag); d["LimitPrice"] = a.LimitPrice; d["VolumeTotalOriginal"] = a.VolumeTotalOriginal; d["TimeCondition"] = a.TimeCondition; d["GTDDate"] = encoding_cast(a.GTDDate); d["VolumeCondition"] = a.VolumeCondition; d["MinVolume"] = a.MinVolume; d["ContingentCondition"] = a.ContingentCondition; d["StopPrice"] = a.StopPrice; d["ForceCloseReason"] = a.ForceCloseReason; d["IsAutoSuspend"] = a.IsAutoSuspend; d["BusinessUnit"] = encoding_cast(a.BusinessUnit); d["RequestID"] = a.RequestID; d["UserForceClose"] = a.UserForceClose; d["IsSwapOrder"] = a.IsSwapOrder; d["ExchangeID"] = encoding_cast(a.ExchangeID); d["InvestUnitID"] = encoding_cast(a.InvestUnitID); d["AccountID"] = encoding_cast(a.AccountID); d["CurrencyID"] = encoding_cast(a.CurrencyID); d["ClientID"] = encoding_cast(a.ClientID); d["reserve2"] = encoding_cast(a.reserve2); d["MacAddress"] = encoding_cast(a.MacAddress); d["InstrumentID"] = encoding_cast(a.InstrumentID); d["IPAddress"] = encoding_cast(a.IPAddress); return d;});

	py::class_<CThostFtdcOrderField>(m, "CThostFtdcOrderField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcOrderField& a) {return CThostFtdcOrderField(a);})
		.def_property("BrokerID", [](const CThostFtdcOrderField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcOrderField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcOrderField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcOrderField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_property("reserve1", [](const CThostFtdcOrderField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcOrderField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("OrderRef", [](const CThostFtdcOrderField& a) {return encoding_cast(a.OrderRef);}, [](CThostFtdcOrderField& a, char c[]) {strcpy(a.OrderRef, c);})
		.def_property("UserID", [](const CThostFtdcOrderField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcOrderField& a, char c[]) {strcpy(a.UserID, c);})
		.def_readwrite("OrderPriceType", &CThostFtdcOrderField::OrderPriceType)
		.def_readwrite("Direction", &CThostFtdcOrderField::Direction)
		.def_property("CombOffsetFlag", [](const CThostFtdcOrderField& a) {return encoding_cast(a.CombOffsetFlag);}, [](CThostFtdcOrderField& a, char c[]) {strcpy(a.CombOffsetFlag, c);})
		.def_property("CombHedgeFlag", [](const CThostFtdcOrderField& a) {return encoding_cast(a.CombHedgeFlag);}, [](CThostFtdcOrderField& a, char c[]) {strcpy(a.CombHedgeFlag, c);})
		.def_readwrite("LimitPrice", &CThostFtdcOrderField::LimitPrice)
		.def_readwrite("VolumeTotalOriginal", &CThostFtdcOrderField::VolumeTotalOriginal)
		.def_readwrite("TimeCondition", &CThostFtdcOrderField::TimeCondition)
		.def_property("GTDDate", [](const CThostFtdcOrderField& a) {return encoding_cast(a.GTDDate);}, [](CThostFtdcOrderField& a, char c[]) {strcpy(a.GTDDate, c);})
		.def_readwrite("VolumeCondition", &CThostFtdcOrderField::VolumeCondition)
		.def_readwrite("MinVolume", &CThostFtdcOrderField::MinVolume)
		.def_readwrite("ContingentCondition", &CThostFtdcOrderField::ContingentCondition)
		.def_readwrite("StopPrice", &CThostFtdcOrderField::StopPrice)
		.def_readwrite("ForceCloseReason", &CThostFtdcOrderField::ForceCloseReason)
		.def_readwrite("IsAutoSuspend", &CThostFtdcOrderField::IsAutoSuspend)
		.def_property("BusinessUnit", [](const CThostFtdcOrderField& a) {return encoding_cast(a.BusinessUnit);}, [](CThostFtdcOrderField& a, char c[]) {strcpy(a.BusinessUnit, c);})
		.def_readwrite("RequestID", &CThostFtdcOrderField::RequestID)
		.def_property("OrderLocalID", [](const CThostFtdcOrderField& a) {return encoding_cast(a.OrderLocalID);}, [](CThostFtdcOrderField& a, char c[]) {strcpy(a.OrderLocalID, c);})
		.def_property("ExchangeID", [](const CThostFtdcOrderField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcOrderField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("ParticipantID", [](const CThostFtdcOrderField& a) {return encoding_cast(a.ParticipantID);}, [](CThostFtdcOrderField& a, char c[]) {strcpy(a.ParticipantID, c);})
		.def_property("ClientID", [](const CThostFtdcOrderField& a) {return encoding_cast(a.ClientID);}, [](CThostFtdcOrderField& a, char c[]) {strcpy(a.ClientID, c);})
		.def_property("reserve2", [](const CThostFtdcOrderField& a) {return encoding_cast(a.reserve2);}, [](CThostFtdcOrderField& a, char c[]) {strcpy(a.reserve2, c);})
		.def_property("TraderID", [](const CThostFtdcOrderField& a) {return encoding_cast(a.TraderID);}, [](CThostFtdcOrderField& a, char c[]) {strcpy(a.TraderID, c);})
		.def_readwrite("InstallID", &CThostFtdcOrderField::InstallID)
		.def_readwrite("OrderSubmitStatus", &CThostFtdcOrderField::OrderSubmitStatus)
		.def_readwrite("NotifySequence", &CThostFtdcOrderField::NotifySequence)
		.def_property("TradingDay", [](const CThostFtdcOrderField& a) {return encoding_cast(a.TradingDay);}, [](CThostFtdcOrderField& a, char c[]) {strcpy(a.TradingDay, c);})
		.def_readwrite("SettlementID", &CThostFtdcOrderField::SettlementID)
		.def_property("OrderSysID", [](const CThostFtdcOrderField& a) {return encoding_cast(a.OrderSysID);}, [](CThostFtdcOrderField& a, char c[]) {strcpy(a.OrderSysID, c);})
		.def_readwrite("OrderSource", &CThostFtdcOrderField::OrderSource)
		.def_readwrite("OrderStatus", &CThostFtdcOrderField::OrderStatus)
		.def_readwrite("OrderType", &CThostFtdcOrderField::OrderType)
		.def_readwrite("VolumeTraded", &CThostFtdcOrderField::VolumeTraded)
		.def_readwrite("VolumeTotal", &CThostFtdcOrderField::VolumeTotal)
		.def_property("InsertDate", [](const CThostFtdcOrderField& a) {return encoding_cast(a.InsertDate);}, [](CThostFtdcOrderField& a, char c[]) {strcpy(a.InsertDate, c);})
		.def_property("InsertTime", [](const CThostFtdcOrderField& a) {return encoding_cast(a.InsertTime);}, [](CThostFtdcOrderField& a, char c[]) {strcpy(a.InsertTime, c);})
		.def_property("ActiveTime", [](const CThostFtdcOrderField& a) {return encoding_cast(a.ActiveTime);}, [](CThostFtdcOrderField& a, char c[]) {strcpy(a.ActiveTime, c);})
		.def_property("SuspendTime", [](const CThostFtdcOrderField& a) {return encoding_cast(a.SuspendTime);}, [](CThostFtdcOrderField& a, char c[]) {strcpy(a.SuspendTime, c);})
		.def_property("UpdateTime", [](const CThostFtdcOrderField& a) {return encoding_cast(a.UpdateTime);}, [](CThostFtdcOrderField& a, char c[]) {strcpy(a.UpdateTime, c);})
		.def_property("CancelTime", [](const CThostFtdcOrderField& a) {return encoding_cast(a.CancelTime);}, [](CThostFtdcOrderField& a, char c[]) {strcpy(a.CancelTime, c);})
		.def_property("ActiveTraderID", [](const CThostFtdcOrderField& a) {return encoding_cast(a.ActiveTraderID);}, [](CThostFtdcOrderField& a, char c[]) {strcpy(a.ActiveTraderID, c);})
		.def_property("ClearingPartID", [](const CThostFtdcOrderField& a) {return encoding_cast(a.ClearingPartID);}, [](CThostFtdcOrderField& a, char c[]) {strcpy(a.ClearingPartID, c);})
		.def_readwrite("SequenceNo", &CThostFtdcOrderField::SequenceNo)
		.def_readwrite("FrontID", &CThostFtdcOrderField::FrontID)
		.def_readwrite("SessionID", &CThostFtdcOrderField::SessionID)
		.def_property("UserProductInfo", [](const CThostFtdcOrderField& a) {return encoding_cast(a.UserProductInfo);}, [](CThostFtdcOrderField& a, char c[]) {strcpy(a.UserProductInfo, c);})
		.def_property("StatusMsg", [](const CThostFtdcOrderField& a) {return encoding_cast(a.StatusMsg);}, [](CThostFtdcOrderField& a, char c[]) {strcpy(a.StatusMsg, c);})
		.def_readwrite("UserForceClose", &CThostFtdcOrderField::UserForceClose)
		.def_property("ActiveUserID", [](const CThostFtdcOrderField& a) {return encoding_cast(a.ActiveUserID);}, [](CThostFtdcOrderField& a, char c[]) {strcpy(a.ActiveUserID, c);})
		.def_readwrite("BrokerOrderSeq", &CThostFtdcOrderField::BrokerOrderSeq)
		.def_property("RelativeOrderSysID", [](const CThostFtdcOrderField& a) {return encoding_cast(a.RelativeOrderSysID);}, [](CThostFtdcOrderField& a, char c[]) {strcpy(a.RelativeOrderSysID, c);})
		.def_readwrite("ZCETotalTradedVolume", &CThostFtdcOrderField::ZCETotalTradedVolume)
		.def_readwrite("IsSwapOrder", &CThostFtdcOrderField::IsSwapOrder)
		.def_property("BranchID", [](const CThostFtdcOrderField& a) {return encoding_cast(a.BranchID);}, [](CThostFtdcOrderField& a, char c[]) {strcpy(a.BranchID, c);})
		.def_property("InvestUnitID", [](const CThostFtdcOrderField& a) {return encoding_cast(a.InvestUnitID);}, [](CThostFtdcOrderField& a, char c[]) {strcpy(a.InvestUnitID, c);})
		.def_property("AccountID", [](const CThostFtdcOrderField& a) {return encoding_cast(a.AccountID);}, [](CThostFtdcOrderField& a, char c[]) {strcpy(a.AccountID, c);})
		.def_property("CurrencyID", [](const CThostFtdcOrderField& a) {return encoding_cast(a.CurrencyID);}, [](CThostFtdcOrderField& a, char c[]) {strcpy(a.CurrencyID, c);})
		.def_property("reserve3", [](const CThostFtdcOrderField& a) {return encoding_cast(a.reserve3);}, [](CThostFtdcOrderField& a, char c[]) {strcpy(a.reserve3, c);})
		.def_property("MacAddress", [](const CThostFtdcOrderField& a) {return encoding_cast(a.MacAddress);}, [](CThostFtdcOrderField& a, char c[]) {strcpy(a.MacAddress, c);})
		.def_property("InstrumentID", [](const CThostFtdcOrderField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcOrderField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def_property("ExchangeInstID", [](const CThostFtdcOrderField& a) {return encoding_cast(a.ExchangeInstID);}, [](CThostFtdcOrderField& a, char c[]) {strcpy(a.ExchangeInstID, c);})
		.def_property("IPAddress", [](const CThostFtdcOrderField& a) {return encoding_cast(a.IPAddress);}, [](CThostFtdcOrderField& a, char c[]) {strcpy(a.IPAddress, c);})
		.def("to_dict", [](const CThostFtdcOrderField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["reserve1"] = encoding_cast(a.reserve1); d["OrderRef"] = encoding_cast(a.OrderRef); d["UserID"] = encoding_cast(a.UserID); d["OrderPriceType"] = a.OrderPriceType; d["Direction"] = a.Direction; d["CombOffsetFlag"] = encoding_cast(a.CombOffsetFlag); d["CombHedgeFlag"] = encoding_cast(a.CombHedgeFlag); d["LimitPrice"] = a.LimitPrice; d["VolumeTotalOriginal"] = a.VolumeTotalOriginal; d["TimeCondition"] = a.TimeCondition; d["GTDDate"] = encoding_cast(a.GTDDate); d["VolumeCondition"] = a.VolumeCondition; d["MinVolume"] = a.MinVolume; d["ContingentCondition"] = a.ContingentCondition; d["StopPrice"] = a.StopPrice; d["ForceCloseReason"] = a.ForceCloseReason; d["IsAutoSuspend"] = a.IsAutoSuspend; d["BusinessUnit"] = encoding_cast(a.BusinessUnit); d["RequestID"] = a.RequestID; d["OrderLocalID"] = encoding_cast(a.OrderLocalID); d["ExchangeID"] = encoding_cast(a.ExchangeID); d["ParticipantID"] = encoding_cast(a.ParticipantID); d["ClientID"] = encoding_cast(a.ClientID); d["reserve2"] = encoding_cast(a.reserve2); d["TraderID"] = encoding_cast(a.TraderID); d["InstallID"] = a.InstallID; d["OrderSubmitStatus"] = a.OrderSubmitStatus; d["NotifySequence"] = a.NotifySequence; d["TradingDay"] = encoding_cast(a.TradingDay); d["SettlementID"] = a.SettlementID; d["OrderSysID"] = encoding_cast(a.OrderSysID); d["OrderSource"] = a.OrderSource; d["OrderStatus"] = a.OrderStatus; d["OrderType"] = a.OrderType; d["VolumeTraded"] = a.VolumeTraded; d["VolumeTotal"] = a.VolumeTotal; d["InsertDate"] = encoding_cast(a.InsertDate); d["InsertTime"] = encoding_cast(a.InsertTime); d["ActiveTime"] = encoding_cast(a.ActiveTime); d["SuspendTime"] = encoding_cast(a.SuspendTime); d["UpdateTime"] = encoding_cast(a.UpdateTime); d["CancelTime"] = encoding_cast(a.CancelTime); d["ActiveTraderID"] = encoding_cast(a.ActiveTraderID); d["ClearingPartID"] = encoding_cast(a.ClearingPartID); d["SequenceNo"] = a.SequenceNo; d["FrontID"] = a.FrontID; d["SessionID"] = a.SessionID; d["UserProductInfo"] = encoding_cast(a.UserProductInfo); d["StatusMsg"] = encoding_cast(a.StatusMsg); d["UserForceClose"] = a.UserForceClose; d["ActiveUserID"] = encoding_cast(a.ActiveUserID); d["BrokerOrderSeq"] = a.BrokerOrderSeq; d["RelativeOrderSysID"] = encoding_cast(a.RelativeOrderSysID); d["ZCETotalTradedVolume"] = a.ZCETotalTradedVolume; d["IsSwapOrder"] = a.IsSwapOrder; d["BranchID"] = encoding_cast(a.BranchID); d["InvestUnitID"] = encoding_cast(a.InvestUnitID); d["AccountID"] = encoding_cast(a.AccountID); d["CurrencyID"] = encoding_cast(a.CurrencyID); d["reserve3"] = encoding_cast(a.reserve3); d["MacAddress"] = encoding_cast(a.MacAddress); d["InstrumentID"] = encoding_cast(a.InstrumentID); d["ExchangeInstID"] = encoding_cast(a.ExchangeInstID); d["IPAddress"] = encoding_cast(a.IPAddress); return d;});

	py::class_<CThostFtdcExchangeOrderField>(m, "CThostFtdcExchangeOrderField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcExchangeOrderField& a) {return CThostFtdcExchangeOrderField(a);})
		.def_readwrite("OrderPriceType", &CThostFtdcExchangeOrderField::OrderPriceType)
		.def_readwrite("Direction", &CThostFtdcExchangeOrderField::Direction)
		.def_property("CombOffsetFlag", [](const CThostFtdcExchangeOrderField& a) {return encoding_cast(a.CombOffsetFlag);}, [](CThostFtdcExchangeOrderField& a, char c[]) {strcpy(a.CombOffsetFlag, c);})
		.def_property("CombHedgeFlag", [](const CThostFtdcExchangeOrderField& a) {return encoding_cast(a.CombHedgeFlag);}, [](CThostFtdcExchangeOrderField& a, char c[]) {strcpy(a.CombHedgeFlag, c);})
		.def_readwrite("LimitPrice", &CThostFtdcExchangeOrderField::LimitPrice)
		.def_readwrite("VolumeTotalOriginal", &CThostFtdcExchangeOrderField::VolumeTotalOriginal)
		.def_readwrite("TimeCondition", &CThostFtdcExchangeOrderField::TimeCondition)
		.def_property("GTDDate", [](const CThostFtdcExchangeOrderField& a) {return encoding_cast(a.GTDDate);}, [](CThostFtdcExchangeOrderField& a, char c[]) {strcpy(a.GTDDate, c);})
		.def_readwrite("VolumeCondition", &CThostFtdcExchangeOrderField::VolumeCondition)
		.def_readwrite("MinVolume", &CThostFtdcExchangeOrderField::MinVolume)
		.def_readwrite("ContingentCondition", &CThostFtdcExchangeOrderField::ContingentCondition)
		.def_readwrite("StopPrice", &CThostFtdcExchangeOrderField::StopPrice)
		.def_readwrite("ForceCloseReason", &CThostFtdcExchangeOrderField::ForceCloseReason)
		.def_readwrite("IsAutoSuspend", &CThostFtdcExchangeOrderField::IsAutoSuspend)
		.def_property("BusinessUnit", [](const CThostFtdcExchangeOrderField& a) {return encoding_cast(a.BusinessUnit);}, [](CThostFtdcExchangeOrderField& a, char c[]) {strcpy(a.BusinessUnit, c);})
		.def_readwrite("RequestID", &CThostFtdcExchangeOrderField::RequestID)
		.def_property("OrderLocalID", [](const CThostFtdcExchangeOrderField& a) {return encoding_cast(a.OrderLocalID);}, [](CThostFtdcExchangeOrderField& a, char c[]) {strcpy(a.OrderLocalID, c);})
		.def_property("ExchangeID", [](const CThostFtdcExchangeOrderField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcExchangeOrderField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("ParticipantID", [](const CThostFtdcExchangeOrderField& a) {return encoding_cast(a.ParticipantID);}, [](CThostFtdcExchangeOrderField& a, char c[]) {strcpy(a.ParticipantID, c);})
		.def_property("ClientID", [](const CThostFtdcExchangeOrderField& a) {return encoding_cast(a.ClientID);}, [](CThostFtdcExchangeOrderField& a, char c[]) {strcpy(a.ClientID, c);})
		.def_property("reserve1", [](const CThostFtdcExchangeOrderField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcExchangeOrderField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("TraderID", [](const CThostFtdcExchangeOrderField& a) {return encoding_cast(a.TraderID);}, [](CThostFtdcExchangeOrderField& a, char c[]) {strcpy(a.TraderID, c);})
		.def_readwrite("InstallID", &CThostFtdcExchangeOrderField::InstallID)
		.def_readwrite("OrderSubmitStatus", &CThostFtdcExchangeOrderField::OrderSubmitStatus)
		.def_readwrite("NotifySequence", &CThostFtdcExchangeOrderField::NotifySequence)
		.def_property("TradingDay", [](const CThostFtdcExchangeOrderField& a) {return encoding_cast(a.TradingDay);}, [](CThostFtdcExchangeOrderField& a, char c[]) {strcpy(a.TradingDay, c);})
		.def_readwrite("SettlementID", &CThostFtdcExchangeOrderField::SettlementID)
		.def_property("OrderSysID", [](const CThostFtdcExchangeOrderField& a) {return encoding_cast(a.OrderSysID);}, [](CThostFtdcExchangeOrderField& a, char c[]) {strcpy(a.OrderSysID, c);})
		.def_readwrite("OrderSource", &CThostFtdcExchangeOrderField::OrderSource)
		.def_readwrite("OrderStatus", &CThostFtdcExchangeOrderField::OrderStatus)
		.def_readwrite("OrderType", &CThostFtdcExchangeOrderField::OrderType)
		.def_readwrite("VolumeTraded", &CThostFtdcExchangeOrderField::VolumeTraded)
		.def_readwrite("VolumeTotal", &CThostFtdcExchangeOrderField::VolumeTotal)
		.def_property("InsertDate", [](const CThostFtdcExchangeOrderField& a) {return encoding_cast(a.InsertDate);}, [](CThostFtdcExchangeOrderField& a, char c[]) {strcpy(a.InsertDate, c);})
		.def_property("InsertTime", [](const CThostFtdcExchangeOrderField& a) {return encoding_cast(a.InsertTime);}, [](CThostFtdcExchangeOrderField& a, char c[]) {strcpy(a.InsertTime, c);})
		.def_property("ActiveTime", [](const CThostFtdcExchangeOrderField& a) {return encoding_cast(a.ActiveTime);}, [](CThostFtdcExchangeOrderField& a, char c[]) {strcpy(a.ActiveTime, c);})
		.def_property("SuspendTime", [](const CThostFtdcExchangeOrderField& a) {return encoding_cast(a.SuspendTime);}, [](CThostFtdcExchangeOrderField& a, char c[]) {strcpy(a.SuspendTime, c);})
		.def_property("UpdateTime", [](const CThostFtdcExchangeOrderField& a) {return encoding_cast(a.UpdateTime);}, [](CThostFtdcExchangeOrderField& a, char c[]) {strcpy(a.UpdateTime, c);})
		.def_property("CancelTime", [](const CThostFtdcExchangeOrderField& a) {return encoding_cast(a.CancelTime);}, [](CThostFtdcExchangeOrderField& a, char c[]) {strcpy(a.CancelTime, c);})
		.def_property("ActiveTraderID", [](const CThostFtdcExchangeOrderField& a) {return encoding_cast(a.ActiveTraderID);}, [](CThostFtdcExchangeOrderField& a, char c[]) {strcpy(a.ActiveTraderID, c);})
		.def_property("ClearingPartID", [](const CThostFtdcExchangeOrderField& a) {return encoding_cast(a.ClearingPartID);}, [](CThostFtdcExchangeOrderField& a, char c[]) {strcpy(a.ClearingPartID, c);})
		.def_readwrite("SequenceNo", &CThostFtdcExchangeOrderField::SequenceNo)
		.def_property("BranchID", [](const CThostFtdcExchangeOrderField& a) {return encoding_cast(a.BranchID);}, [](CThostFtdcExchangeOrderField& a, char c[]) {strcpy(a.BranchID, c);})
		.def_property("reserve2", [](const CThostFtdcExchangeOrderField& a) {return encoding_cast(a.reserve2);}, [](CThostFtdcExchangeOrderField& a, char c[]) {strcpy(a.reserve2, c);})
		.def_property("MacAddress", [](const CThostFtdcExchangeOrderField& a) {return encoding_cast(a.MacAddress);}, [](CThostFtdcExchangeOrderField& a, char c[]) {strcpy(a.MacAddress, c);})
		.def_property("ExchangeInstID", [](const CThostFtdcExchangeOrderField& a) {return encoding_cast(a.ExchangeInstID);}, [](CThostFtdcExchangeOrderField& a, char c[]) {strcpy(a.ExchangeInstID, c);})
		.def_property("IPAddress", [](const CThostFtdcExchangeOrderField& a) {return encoding_cast(a.IPAddress);}, [](CThostFtdcExchangeOrderField& a, char c[]) {strcpy(a.IPAddress, c);})
		.def("to_dict", [](const CThostFtdcExchangeOrderField& a) {py::dict d; d["OrderPriceType"] = a.OrderPriceType; d["Direction"] = a.Direction; d["CombOffsetFlag"] = encoding_cast(a.CombOffsetFlag); d["CombHedgeFlag"] = encoding_cast(a.CombHedgeFlag); d["LimitPrice"] = a.LimitPrice; d["VolumeTotalOriginal"] = a.VolumeTotalOriginal; d["TimeCondition"] = a.TimeCondition; d["GTDDate"] = encoding_cast(a.GTDDate); d["VolumeCondition"] = a.VolumeCondition; d["MinVolume"] = a.MinVolume; d["ContingentCondition"] = a.ContingentCondition; d["StopPrice"] = a.StopPrice; d["ForceCloseReason"] = a.ForceCloseReason; d["IsAutoSuspend"] = a.IsAutoSuspend; d["BusinessUnit"] = encoding_cast(a.BusinessUnit); d["RequestID"] = a.RequestID; d["OrderLocalID"] = encoding_cast(a.OrderLocalID); d["ExchangeID"] = encoding_cast(a.ExchangeID); d["ParticipantID"] = encoding_cast(a.ParticipantID); d["ClientID"] = encoding_cast(a.ClientID); d["reserve1"] = encoding_cast(a.reserve1); d["TraderID"] = encoding_cast(a.TraderID); d["InstallID"] = a.InstallID; d["OrderSubmitStatus"] = a.OrderSubmitStatus; d["NotifySequence"] = a.NotifySequence; d["TradingDay"] = encoding_cast(a.TradingDay); d["SettlementID"] = a.SettlementID; d["OrderSysID"] = encoding_cast(a.OrderSysID); d["OrderSource"] = a.OrderSource; d["OrderStatus"] = a.OrderStatus; d["OrderType"] = a.OrderType; d["VolumeTraded"] = a.VolumeTraded; d["VolumeTotal"] = a.VolumeTotal; d["InsertDate"] = encoding_cast(a.InsertDate); d["InsertTime"] = encoding_cast(a.InsertTime); d["ActiveTime"] = encoding_cast(a.ActiveTime); d["SuspendTime"] = encoding_cast(a.SuspendTime); d["UpdateTime"] = encoding_cast(a.UpdateTime); d["CancelTime"] = encoding_cast(a.CancelTime); d["ActiveTraderID"] = encoding_cast(a.ActiveTraderID); d["ClearingPartID"] = encoding_cast(a.ClearingPartID); d["SequenceNo"] = a.SequenceNo; d["BranchID"] = encoding_cast(a.BranchID); d["reserve2"] = encoding_cast(a.reserve2); d["MacAddress"] = encoding_cast(a.MacAddress); d["ExchangeInstID"] = encoding_cast(a.ExchangeInstID); d["IPAddress"] = encoding_cast(a.IPAddress); return d;});

	py::class_<CThostFtdcExchangeOrderInsertErrorField>(m, "CThostFtdcExchangeOrderInsertErrorField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcExchangeOrderInsertErrorField& a) {return CThostFtdcExchangeOrderInsertErrorField(a);})
		.def_property("ExchangeID", [](const CThostFtdcExchangeOrderInsertErrorField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcExchangeOrderInsertErrorField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("ParticipantID", [](const CThostFtdcExchangeOrderInsertErrorField& a) {return encoding_cast(a.ParticipantID);}, [](CThostFtdcExchangeOrderInsertErrorField& a, char c[]) {strcpy(a.ParticipantID, c);})
		.def_property("TraderID", [](const CThostFtdcExchangeOrderInsertErrorField& a) {return encoding_cast(a.TraderID);}, [](CThostFtdcExchangeOrderInsertErrorField& a, char c[]) {strcpy(a.TraderID, c);})
		.def_readwrite("InstallID", &CThostFtdcExchangeOrderInsertErrorField::InstallID)
		.def_property("OrderLocalID", [](const CThostFtdcExchangeOrderInsertErrorField& a) {return encoding_cast(a.OrderLocalID);}, [](CThostFtdcExchangeOrderInsertErrorField& a, char c[]) {strcpy(a.OrderLocalID, c);})
		.def_readwrite("ErrorID", &CThostFtdcExchangeOrderInsertErrorField::ErrorID)
		.def_property("ErrorMsg", [](const CThostFtdcExchangeOrderInsertErrorField& a) {return encoding_cast(a.ErrorMsg);}, [](CThostFtdcExchangeOrderInsertErrorField& a, char c[]) {strcpy(a.ErrorMsg, c);})
		.def("to_dict", [](const CThostFtdcExchangeOrderInsertErrorField& a) {py::dict d; d["ExchangeID"] = encoding_cast(a.ExchangeID); d["ParticipantID"] = encoding_cast(a.ParticipantID); d["TraderID"] = encoding_cast(a.TraderID); d["InstallID"] = a.InstallID; d["OrderLocalID"] = encoding_cast(a.OrderLocalID); d["ErrorID"] = a.ErrorID; d["ErrorMsg"] = encoding_cast(a.ErrorMsg); return d;});

	py::class_<CThostFtdcInputOrderActionField>(m, "CThostFtdcInputOrderActionField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcInputOrderActionField& a) {return CThostFtdcInputOrderActionField(a);})
		.def_property("BrokerID", [](const CThostFtdcInputOrderActionField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcInputOrderActionField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcInputOrderActionField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcInputOrderActionField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_readwrite("OrderActionRef", &CThostFtdcInputOrderActionField::OrderActionRef)
		.def_property("OrderRef", [](const CThostFtdcInputOrderActionField& a) {return encoding_cast(a.OrderRef);}, [](CThostFtdcInputOrderActionField& a, char c[]) {strcpy(a.OrderRef, c);})
		.def_readwrite("RequestID", &CThostFtdcInputOrderActionField::RequestID)
		.def_readwrite("FrontID", &CThostFtdcInputOrderActionField::FrontID)
		.def_readwrite("SessionID", &CThostFtdcInputOrderActionField::SessionID)
		.def_property("ExchangeID", [](const CThostFtdcInputOrderActionField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcInputOrderActionField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("OrderSysID", [](const CThostFtdcInputOrderActionField& a) {return encoding_cast(a.OrderSysID);}, [](CThostFtdcInputOrderActionField& a, char c[]) {strcpy(a.OrderSysID, c);})
		.def_readwrite("ActionFlag", &CThostFtdcInputOrderActionField::ActionFlag)
		.def_readwrite("LimitPrice", &CThostFtdcInputOrderActionField::LimitPrice)
		.def_readwrite("VolumeChange", &CThostFtdcInputOrderActionField::VolumeChange)
		.def_property("UserID", [](const CThostFtdcInputOrderActionField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcInputOrderActionField& a, char c[]) {strcpy(a.UserID, c);})
		.def_property("reserve1", [](const CThostFtdcInputOrderActionField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcInputOrderActionField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("InvestUnitID", [](const CThostFtdcInputOrderActionField& a) {return encoding_cast(a.InvestUnitID);}, [](CThostFtdcInputOrderActionField& a, char c[]) {strcpy(a.InvestUnitID, c);})
		.def_property("reserve2", [](const CThostFtdcInputOrderActionField& a) {return encoding_cast(a.reserve2);}, [](CThostFtdcInputOrderActionField& a, char c[]) {strcpy(a.reserve2, c);})
		.def_property("MacAddress", [](const CThostFtdcInputOrderActionField& a) {return encoding_cast(a.MacAddress);}, [](CThostFtdcInputOrderActionField& a, char c[]) {strcpy(a.MacAddress, c);})
		.def_property("InstrumentID", [](const CThostFtdcInputOrderActionField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcInputOrderActionField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def_property("IPAddress", [](const CThostFtdcInputOrderActionField& a) {return encoding_cast(a.IPAddress);}, [](CThostFtdcInputOrderActionField& a, char c[]) {strcpy(a.IPAddress, c);})
		.def("to_dict", [](const CThostFtdcInputOrderActionField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["OrderActionRef"] = a.OrderActionRef; d["OrderRef"] = encoding_cast(a.OrderRef); d["RequestID"] = a.RequestID; d["FrontID"] = a.FrontID; d["SessionID"] = a.SessionID; d["ExchangeID"] = encoding_cast(a.ExchangeID); d["OrderSysID"] = encoding_cast(a.OrderSysID); d["ActionFlag"] = a.ActionFlag; d["LimitPrice"] = a.LimitPrice; d["VolumeChange"] = a.VolumeChange; d["UserID"] = encoding_cast(a.UserID); d["reserve1"] = encoding_cast(a.reserve1); d["InvestUnitID"] = encoding_cast(a.InvestUnitID); d["reserve2"] = encoding_cast(a.reserve2); d["MacAddress"] = encoding_cast(a.MacAddress); d["InstrumentID"] = encoding_cast(a.InstrumentID); d["IPAddress"] = encoding_cast(a.IPAddress); return d;});

	py::class_<CThostFtdcOrderActionField>(m, "CThostFtdcOrderActionField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcOrderActionField& a) {return CThostFtdcOrderActionField(a);})
		.def_property("BrokerID", [](const CThostFtdcOrderActionField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcOrderActionField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcOrderActionField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcOrderActionField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_readwrite("OrderActionRef", &CThostFtdcOrderActionField::OrderActionRef)
		.def_property("OrderRef", [](const CThostFtdcOrderActionField& a) {return encoding_cast(a.OrderRef);}, [](CThostFtdcOrderActionField& a, char c[]) {strcpy(a.OrderRef, c);})
		.def_readwrite("RequestID", &CThostFtdcOrderActionField::RequestID)
		.def_readwrite("FrontID", &CThostFtdcOrderActionField::FrontID)
		.def_readwrite("SessionID", &CThostFtdcOrderActionField::SessionID)
		.def_property("ExchangeID", [](const CThostFtdcOrderActionField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcOrderActionField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("OrderSysID", [](const CThostFtdcOrderActionField& a) {return encoding_cast(a.OrderSysID);}, [](CThostFtdcOrderActionField& a, char c[]) {strcpy(a.OrderSysID, c);})
		.def_readwrite("ActionFlag", &CThostFtdcOrderActionField::ActionFlag)
		.def_readwrite("LimitPrice", &CThostFtdcOrderActionField::LimitPrice)
		.def_readwrite("VolumeChange", &CThostFtdcOrderActionField::VolumeChange)
		.def_property("ActionDate", [](const CThostFtdcOrderActionField& a) {return encoding_cast(a.ActionDate);}, [](CThostFtdcOrderActionField& a, char c[]) {strcpy(a.ActionDate, c);})
		.def_property("ActionTime", [](const CThostFtdcOrderActionField& a) {return encoding_cast(a.ActionTime);}, [](CThostFtdcOrderActionField& a, char c[]) {strcpy(a.ActionTime, c);})
		.def_property("TraderID", [](const CThostFtdcOrderActionField& a) {return encoding_cast(a.TraderID);}, [](CThostFtdcOrderActionField& a, char c[]) {strcpy(a.TraderID, c);})
		.def_readwrite("InstallID", &CThostFtdcOrderActionField::InstallID)
		.def_property("OrderLocalID", [](const CThostFtdcOrderActionField& a) {return encoding_cast(a.OrderLocalID);}, [](CThostFtdcOrderActionField& a, char c[]) {strcpy(a.OrderLocalID, c);})
		.def_property("ActionLocalID", [](const CThostFtdcOrderActionField& a) {return encoding_cast(a.ActionLocalID);}, [](CThostFtdcOrderActionField& a, char c[]) {strcpy(a.ActionLocalID, c);})
		.def_property("ParticipantID", [](const CThostFtdcOrderActionField& a) {return encoding_cast(a.ParticipantID);}, [](CThostFtdcOrderActionField& a, char c[]) {strcpy(a.ParticipantID, c);})
		.def_property("ClientID", [](const CThostFtdcOrderActionField& a) {return encoding_cast(a.ClientID);}, [](CThostFtdcOrderActionField& a, char c[]) {strcpy(a.ClientID, c);})
		.def_property("BusinessUnit", [](const CThostFtdcOrderActionField& a) {return encoding_cast(a.BusinessUnit);}, [](CThostFtdcOrderActionField& a, char c[]) {strcpy(a.BusinessUnit, c);})
		.def_readwrite("OrderActionStatus", &CThostFtdcOrderActionField::OrderActionStatus)
		.def_property("UserID", [](const CThostFtdcOrderActionField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcOrderActionField& a, char c[]) {strcpy(a.UserID, c);})
		.def_property("StatusMsg", [](const CThostFtdcOrderActionField& a) {return encoding_cast(a.StatusMsg);}, [](CThostFtdcOrderActionField& a, char c[]) {strcpy(a.StatusMsg, c);})
		.def_property("reserve1", [](const CThostFtdcOrderActionField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcOrderActionField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("BranchID", [](const CThostFtdcOrderActionField& a) {return encoding_cast(a.BranchID);}, [](CThostFtdcOrderActionField& a, char c[]) {strcpy(a.BranchID, c);})
		.def_property("InvestUnitID", [](const CThostFtdcOrderActionField& a) {return encoding_cast(a.InvestUnitID);}, [](CThostFtdcOrderActionField& a, char c[]) {strcpy(a.InvestUnitID, c);})
		.def_property("reserve2", [](const CThostFtdcOrderActionField& a) {return encoding_cast(a.reserve2);}, [](CThostFtdcOrderActionField& a, char c[]) {strcpy(a.reserve2, c);})
		.def_property("MacAddress", [](const CThostFtdcOrderActionField& a) {return encoding_cast(a.MacAddress);}, [](CThostFtdcOrderActionField& a, char c[]) {strcpy(a.MacAddress, c);})
		.def_property("InstrumentID", [](const CThostFtdcOrderActionField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcOrderActionField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def_property("IPAddress", [](const CThostFtdcOrderActionField& a) {return encoding_cast(a.IPAddress);}, [](CThostFtdcOrderActionField& a, char c[]) {strcpy(a.IPAddress, c);})
		.def("to_dict", [](const CThostFtdcOrderActionField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["OrderActionRef"] = a.OrderActionRef; d["OrderRef"] = encoding_cast(a.OrderRef); d["RequestID"] = a.RequestID; d["FrontID"] = a.FrontID; d["SessionID"] = a.SessionID; d["ExchangeID"] = encoding_cast(a.ExchangeID); d["OrderSysID"] = encoding_cast(a.OrderSysID); d["ActionFlag"] = a.ActionFlag; d["LimitPrice"] = a.LimitPrice; d["VolumeChange"] = a.VolumeChange; d["ActionDate"] = encoding_cast(a.ActionDate); d["ActionTime"] = encoding_cast(a.ActionTime); d["TraderID"] = encoding_cast(a.TraderID); d["InstallID"] = a.InstallID; d["OrderLocalID"] = encoding_cast(a.OrderLocalID); d["ActionLocalID"] = encoding_cast(a.ActionLocalID); d["ParticipantID"] = encoding_cast(a.ParticipantID); d["ClientID"] = encoding_cast(a.ClientID); d["BusinessUnit"] = encoding_cast(a.BusinessUnit); d["OrderActionStatus"] = a.OrderActionStatus; d["UserID"] = encoding_cast(a.UserID); d["StatusMsg"] = encoding_cast(a.StatusMsg); d["reserve1"] = encoding_cast(a.reserve1); d["BranchID"] = encoding_cast(a.BranchID); d["InvestUnitID"] = encoding_cast(a.InvestUnitID); d["reserve2"] = encoding_cast(a.reserve2); d["MacAddress"] = encoding_cast(a.MacAddress); d["InstrumentID"] = encoding_cast(a.InstrumentID); d["IPAddress"] = encoding_cast(a.IPAddress); return d;});

	py::class_<CThostFtdcExchangeOrderActionField>(m, "CThostFtdcExchangeOrderActionField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcExchangeOrderActionField& a) {return CThostFtdcExchangeOrderActionField(a);})
		.def_property("ExchangeID", [](const CThostFtdcExchangeOrderActionField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcExchangeOrderActionField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("OrderSysID", [](const CThostFtdcExchangeOrderActionField& a) {return encoding_cast(a.OrderSysID);}, [](CThostFtdcExchangeOrderActionField& a, char c[]) {strcpy(a.OrderSysID, c);})
		.def_readwrite("ActionFlag", &CThostFtdcExchangeOrderActionField::ActionFlag)
		.def_readwrite("LimitPrice", &CThostFtdcExchangeOrderActionField::LimitPrice)
		.def_readwrite("VolumeChange", &CThostFtdcExchangeOrderActionField::VolumeChange)
		.def_property("ActionDate", [](const CThostFtdcExchangeOrderActionField& a) {return encoding_cast(a.ActionDate);}, [](CThostFtdcExchangeOrderActionField& a, char c[]) {strcpy(a.ActionDate, c);})
		.def_property("ActionTime", [](const CThostFtdcExchangeOrderActionField& a) {return encoding_cast(a.ActionTime);}, [](CThostFtdcExchangeOrderActionField& a, char c[]) {strcpy(a.ActionTime, c);})
		.def_property("TraderID", [](const CThostFtdcExchangeOrderActionField& a) {return encoding_cast(a.TraderID);}, [](CThostFtdcExchangeOrderActionField& a, char c[]) {strcpy(a.TraderID, c);})
		.def_readwrite("InstallID", &CThostFtdcExchangeOrderActionField::InstallID)
		.def_property("OrderLocalID", [](const CThostFtdcExchangeOrderActionField& a) {return encoding_cast(a.OrderLocalID);}, [](CThostFtdcExchangeOrderActionField& a, char c[]) {strcpy(a.OrderLocalID, c);})
		.def_property("ActionLocalID", [](const CThostFtdcExchangeOrderActionField& a) {return encoding_cast(a.ActionLocalID);}, [](CThostFtdcExchangeOrderActionField& a, char c[]) {strcpy(a.ActionLocalID, c);})
		.def_property("ParticipantID", [](const CThostFtdcExchangeOrderActionField& a) {return encoding_cast(a.ParticipantID);}, [](CThostFtdcExchangeOrderActionField& a, char c[]) {strcpy(a.ParticipantID, c);})
		.def_property("ClientID", [](const CThostFtdcExchangeOrderActionField& a) {return encoding_cast(a.ClientID);}, [](CThostFtdcExchangeOrderActionField& a, char c[]) {strcpy(a.ClientID, c);})
		.def_property("BusinessUnit", [](const CThostFtdcExchangeOrderActionField& a) {return encoding_cast(a.BusinessUnit);}, [](CThostFtdcExchangeOrderActionField& a, char c[]) {strcpy(a.BusinessUnit, c);})
		.def_readwrite("OrderActionStatus", &CThostFtdcExchangeOrderActionField::OrderActionStatus)
		.def_property("UserID", [](const CThostFtdcExchangeOrderActionField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcExchangeOrderActionField& a, char c[]) {strcpy(a.UserID, c);})
		.def_property("BranchID", [](const CThostFtdcExchangeOrderActionField& a) {return encoding_cast(a.BranchID);}, [](CThostFtdcExchangeOrderActionField& a, char c[]) {strcpy(a.BranchID, c);})
		.def_property("reserve1", [](const CThostFtdcExchangeOrderActionField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcExchangeOrderActionField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("MacAddress", [](const CThostFtdcExchangeOrderActionField& a) {return encoding_cast(a.MacAddress);}, [](CThostFtdcExchangeOrderActionField& a, char c[]) {strcpy(a.MacAddress, c);})
		.def_property("IPAddress", [](const CThostFtdcExchangeOrderActionField& a) {return encoding_cast(a.IPAddress);}, [](CThostFtdcExchangeOrderActionField& a, char c[]) {strcpy(a.IPAddress, c);})
		.def("to_dict", [](const CThostFtdcExchangeOrderActionField& a) {py::dict d; d["ExchangeID"] = encoding_cast(a.ExchangeID); d["OrderSysID"] = encoding_cast(a.OrderSysID); d["ActionFlag"] = a.ActionFlag; d["LimitPrice"] = a.LimitPrice; d["VolumeChange"] = a.VolumeChange; d["ActionDate"] = encoding_cast(a.ActionDate); d["ActionTime"] = encoding_cast(a.ActionTime); d["TraderID"] = encoding_cast(a.TraderID); d["InstallID"] = a.InstallID; d["OrderLocalID"] = encoding_cast(a.OrderLocalID); d["ActionLocalID"] = encoding_cast(a.ActionLocalID); d["ParticipantID"] = encoding_cast(a.ParticipantID); d["ClientID"] = encoding_cast(a.ClientID); d["BusinessUnit"] = encoding_cast(a.BusinessUnit); d["OrderActionStatus"] = a.OrderActionStatus; d["UserID"] = encoding_cast(a.UserID); d["BranchID"] = encoding_cast(a.BranchID); d["reserve1"] = encoding_cast(a.reserve1); d["MacAddress"] = encoding_cast(a.MacAddress); d["IPAddress"] = encoding_cast(a.IPAddress); return d;});

	py::class_<CThostFtdcExchangeOrderActionErrorField>(m, "CThostFtdcExchangeOrderActionErrorField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcExchangeOrderActionErrorField& a) {return CThostFtdcExchangeOrderActionErrorField(a);})
		.def_property("ExchangeID", [](const CThostFtdcExchangeOrderActionErrorField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcExchangeOrderActionErrorField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("OrderSysID", [](const CThostFtdcExchangeOrderActionErrorField& a) {return encoding_cast(a.OrderSysID);}, [](CThostFtdcExchangeOrderActionErrorField& a, char c[]) {strcpy(a.OrderSysID, c);})
		.def_property("TraderID", [](const CThostFtdcExchangeOrderActionErrorField& a) {return encoding_cast(a.TraderID);}, [](CThostFtdcExchangeOrderActionErrorField& a, char c[]) {strcpy(a.TraderID, c);})
		.def_readwrite("InstallID", &CThostFtdcExchangeOrderActionErrorField::InstallID)
		.def_property("OrderLocalID", [](const CThostFtdcExchangeOrderActionErrorField& a) {return encoding_cast(a.OrderLocalID);}, [](CThostFtdcExchangeOrderActionErrorField& a, char c[]) {strcpy(a.OrderLocalID, c);})
		.def_property("ActionLocalID", [](const CThostFtdcExchangeOrderActionErrorField& a) {return encoding_cast(a.ActionLocalID);}, [](CThostFtdcExchangeOrderActionErrorField& a, char c[]) {strcpy(a.ActionLocalID, c);})
		.def_readwrite("ErrorID", &CThostFtdcExchangeOrderActionErrorField::ErrorID)
		.def_property("ErrorMsg", [](const CThostFtdcExchangeOrderActionErrorField& a) {return encoding_cast(a.ErrorMsg);}, [](CThostFtdcExchangeOrderActionErrorField& a, char c[]) {strcpy(a.ErrorMsg, c);})
		.def("to_dict", [](const CThostFtdcExchangeOrderActionErrorField& a) {py::dict d; d["ExchangeID"] = encoding_cast(a.ExchangeID); d["OrderSysID"] = encoding_cast(a.OrderSysID); d["TraderID"] = encoding_cast(a.TraderID); d["InstallID"] = a.InstallID; d["OrderLocalID"] = encoding_cast(a.OrderLocalID); d["ActionLocalID"] = encoding_cast(a.ActionLocalID); d["ErrorID"] = a.ErrorID; d["ErrorMsg"] = encoding_cast(a.ErrorMsg); return d;});

	py::class_<CThostFtdcExchangeTradeField>(m, "CThostFtdcExchangeTradeField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcExchangeTradeField& a) {return CThostFtdcExchangeTradeField(a);})
		.def_property("ExchangeID", [](const CThostFtdcExchangeTradeField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcExchangeTradeField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("TradeID", [](const CThostFtdcExchangeTradeField& a) {return encoding_cast(a.TradeID);}, [](CThostFtdcExchangeTradeField& a, char c[]) {strcpy(a.TradeID, c);})
		.def_readwrite("Direction", &CThostFtdcExchangeTradeField::Direction)
		.def_property("OrderSysID", [](const CThostFtdcExchangeTradeField& a) {return encoding_cast(a.OrderSysID);}, [](CThostFtdcExchangeTradeField& a, char c[]) {strcpy(a.OrderSysID, c);})
		.def_property("ParticipantID", [](const CThostFtdcExchangeTradeField& a) {return encoding_cast(a.ParticipantID);}, [](CThostFtdcExchangeTradeField& a, char c[]) {strcpy(a.ParticipantID, c);})
		.def_property("ClientID", [](const CThostFtdcExchangeTradeField& a) {return encoding_cast(a.ClientID);}, [](CThostFtdcExchangeTradeField& a, char c[]) {strcpy(a.ClientID, c);})
		.def_readwrite("TradingRole", &CThostFtdcExchangeTradeField::TradingRole)
		.def_property("reserve1", [](const CThostFtdcExchangeTradeField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcExchangeTradeField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_readwrite("OffsetFlag", &CThostFtdcExchangeTradeField::OffsetFlag)
		.def_readwrite("HedgeFlag", &CThostFtdcExchangeTradeField::HedgeFlag)
		.def_readwrite("Price", &CThostFtdcExchangeTradeField::Price)
		.def_readwrite("Volume", &CThostFtdcExchangeTradeField::Volume)
		.def_property("TradeDate", [](const CThostFtdcExchangeTradeField& a) {return encoding_cast(a.TradeDate);}, [](CThostFtdcExchangeTradeField& a, char c[]) {strcpy(a.TradeDate, c);})
		.def_property("TradeTime", [](const CThostFtdcExchangeTradeField& a) {return encoding_cast(a.TradeTime);}, [](CThostFtdcExchangeTradeField& a, char c[]) {strcpy(a.TradeTime, c);})
		.def_readwrite("TradeType", &CThostFtdcExchangeTradeField::TradeType)
		.def_readwrite("PriceSource", &CThostFtdcExchangeTradeField::PriceSource)
		.def_property("TraderID", [](const CThostFtdcExchangeTradeField& a) {return encoding_cast(a.TraderID);}, [](CThostFtdcExchangeTradeField& a, char c[]) {strcpy(a.TraderID, c);})
		.def_property("OrderLocalID", [](const CThostFtdcExchangeTradeField& a) {return encoding_cast(a.OrderLocalID);}, [](CThostFtdcExchangeTradeField& a, char c[]) {strcpy(a.OrderLocalID, c);})
		.def_property("ClearingPartID", [](const CThostFtdcExchangeTradeField& a) {return encoding_cast(a.ClearingPartID);}, [](CThostFtdcExchangeTradeField& a, char c[]) {strcpy(a.ClearingPartID, c);})
		.def_property("BusinessUnit", [](const CThostFtdcExchangeTradeField& a) {return encoding_cast(a.BusinessUnit);}, [](CThostFtdcExchangeTradeField& a, char c[]) {strcpy(a.BusinessUnit, c);})
		.def_readwrite("SequenceNo", &CThostFtdcExchangeTradeField::SequenceNo)
		.def_readwrite("TradeSource", &CThostFtdcExchangeTradeField::TradeSource)
		.def_property("ExchangeInstID", [](const CThostFtdcExchangeTradeField& a) {return encoding_cast(a.ExchangeInstID);}, [](CThostFtdcExchangeTradeField& a, char c[]) {strcpy(a.ExchangeInstID, c);})
		.def("to_dict", [](const CThostFtdcExchangeTradeField& a) {py::dict d; d["ExchangeID"] = encoding_cast(a.ExchangeID); d["TradeID"] = encoding_cast(a.TradeID); d["Direction"] = a.Direction; d["OrderSysID"] = encoding_cast(a.OrderSysID); d["ParticipantID"] = encoding_cast(a.ParticipantID); d["ClientID"] = encoding_cast(a.ClientID); d["TradingRole"] = a.TradingRole; d["reserve1"] = encoding_cast(a.reserve1); d["OffsetFlag"] = a.OffsetFlag; d["HedgeFlag"] = a.HedgeFlag; d["Price"] = a.Price; d["Volume"] = a.Volume; d["TradeDate"] = encoding_cast(a.TradeDate); d["TradeTime"] = encoding_cast(a.TradeTime); d["TradeType"] = a.TradeType; d["PriceSource"] = a.PriceSource; d["TraderID"] = encoding_cast(a.TraderID); d["OrderLocalID"] = encoding_cast(a.OrderLocalID); d["ClearingPartID"] = encoding_cast(a.ClearingPartID); d["BusinessUnit"] = encoding_cast(a.BusinessUnit); d["SequenceNo"] = a.SequenceNo; d["TradeSource"] = a.TradeSource; d["ExchangeInstID"] = encoding_cast(a.ExchangeInstID); return d;});

	py::class_<CThostFtdcTradeField>(m, "CThostFtdcTradeField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcTradeField& a) {return CThostFtdcTradeField(a);})
		.def_property("BrokerID", [](const CThostFtdcTradeField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcTradeField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcTradeField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcTradeField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_property("reserve1", [](const CThostFtdcTradeField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcTradeField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("OrderRef", [](const CThostFtdcTradeField& a) {return encoding_cast(a.OrderRef);}, [](CThostFtdcTradeField& a, char c[]) {strcpy(a.OrderRef, c);})
		.def_property("UserID", [](const CThostFtdcTradeField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcTradeField& a, char c[]) {strcpy(a.UserID, c);})
		.def_property("ExchangeID", [](const CThostFtdcTradeField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcTradeField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("TradeID", [](const CThostFtdcTradeField& a) {return encoding_cast(a.TradeID);}, [](CThostFtdcTradeField& a, char c[]) {strcpy(a.TradeID, c);})
		.def_readwrite("Direction", &CThostFtdcTradeField::Direction)
		.def_property("OrderSysID", [](const CThostFtdcTradeField& a) {return encoding_cast(a.OrderSysID);}, [](CThostFtdcTradeField& a, char c[]) {strcpy(a.OrderSysID, c);})
		.def_property("ParticipantID", [](const CThostFtdcTradeField& a) {return encoding_cast(a.ParticipantID);}, [](CThostFtdcTradeField& a, char c[]) {strcpy(a.ParticipantID, c);})
		.def_property("ClientID", [](const CThostFtdcTradeField& a) {return encoding_cast(a.ClientID);}, [](CThostFtdcTradeField& a, char c[]) {strcpy(a.ClientID, c);})
		.def_readwrite("TradingRole", &CThostFtdcTradeField::TradingRole)
		.def_property("reserve2", [](const CThostFtdcTradeField& a) {return encoding_cast(a.reserve2);}, [](CThostFtdcTradeField& a, char c[]) {strcpy(a.reserve2, c);})
		.def_readwrite("OffsetFlag", &CThostFtdcTradeField::OffsetFlag)
		.def_readwrite("HedgeFlag", &CThostFtdcTradeField::HedgeFlag)
		.def_readwrite("Price", &CThostFtdcTradeField::Price)
		.def_readwrite("Volume", &CThostFtdcTradeField::Volume)
		.def_property("TradeDate", [](const CThostFtdcTradeField& a) {return encoding_cast(a.TradeDate);}, [](CThostFtdcTradeField& a, char c[]) {strcpy(a.TradeDate, c);})
		.def_property("TradeTime", [](const CThostFtdcTradeField& a) {return encoding_cast(a.TradeTime);}, [](CThostFtdcTradeField& a, char c[]) {strcpy(a.TradeTime, c);})
		.def_readwrite("TradeType", &CThostFtdcTradeField::TradeType)
		.def_readwrite("PriceSource", &CThostFtdcTradeField::PriceSource)
		.def_property("TraderID", [](const CThostFtdcTradeField& a) {return encoding_cast(a.TraderID);}, [](CThostFtdcTradeField& a, char c[]) {strcpy(a.TraderID, c);})
		.def_property("OrderLocalID", [](const CThostFtdcTradeField& a) {return encoding_cast(a.OrderLocalID);}, [](CThostFtdcTradeField& a, char c[]) {strcpy(a.OrderLocalID, c);})
		.def_property("ClearingPartID", [](const CThostFtdcTradeField& a) {return encoding_cast(a.ClearingPartID);}, [](CThostFtdcTradeField& a, char c[]) {strcpy(a.ClearingPartID, c);})
		.def_property("BusinessUnit", [](const CThostFtdcTradeField& a) {return encoding_cast(a.BusinessUnit);}, [](CThostFtdcTradeField& a, char c[]) {strcpy(a.BusinessUnit, c);})
		.def_readwrite("SequenceNo", &CThostFtdcTradeField::SequenceNo)
		.def_property("TradingDay", [](const CThostFtdcTradeField& a) {return encoding_cast(a.TradingDay);}, [](CThostFtdcTradeField& a, char c[]) {strcpy(a.TradingDay, c);})
		.def_readwrite("SettlementID", &CThostFtdcTradeField::SettlementID)
		.def_readwrite("BrokerOrderSeq", &CThostFtdcTradeField::BrokerOrderSeq)
		.def_readwrite("TradeSource", &CThostFtdcTradeField::TradeSource)
		.def_property("InvestUnitID", [](const CThostFtdcTradeField& a) {return encoding_cast(a.InvestUnitID);}, [](CThostFtdcTradeField& a, char c[]) {strcpy(a.InvestUnitID, c);})
		.def_property("InstrumentID", [](const CThostFtdcTradeField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcTradeField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def_property("ExchangeInstID", [](const CThostFtdcTradeField& a) {return encoding_cast(a.ExchangeInstID);}, [](CThostFtdcTradeField& a, char c[]) {strcpy(a.ExchangeInstID, c);})
		.def("to_dict", [](const CThostFtdcTradeField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["reserve1"] = encoding_cast(a.reserve1); d["OrderRef"] = encoding_cast(a.OrderRef); d["UserID"] = encoding_cast(a.UserID); d["ExchangeID"] = encoding_cast(a.ExchangeID); d["TradeID"] = encoding_cast(a.TradeID); d["Direction"] = a.Direction; d["OrderSysID"] = encoding_cast(a.OrderSysID); d["ParticipantID"] = encoding_cast(a.ParticipantID); d["ClientID"] = encoding_cast(a.ClientID); d["TradingRole"] = a.TradingRole; d["reserve2"] = encoding_cast(a.reserve2); d["OffsetFlag"] = a.OffsetFlag; d["HedgeFlag"] = a.HedgeFlag; d["Price"] = a.Price; d["Volume"] = a.Volume; d["TradeDate"] = encoding_cast(a.TradeDate); d["TradeTime"] = encoding_cast(a.TradeTime); d["TradeType"] = a.TradeType; d["PriceSource"] = a.PriceSource; d["TraderID"] = encoding_cast(a.TraderID); d["OrderLocalID"] = encoding_cast(a.OrderLocalID); d["ClearingPartID"] = encoding_cast(a.ClearingPartID); d["BusinessUnit"] = encoding_cast(a.BusinessUnit); d["SequenceNo"] = a.SequenceNo; d["TradingDay"] = encoding_cast(a.TradingDay); d["SettlementID"] = a.SettlementID; d["BrokerOrderSeq"] = a.BrokerOrderSeq; d["TradeSource"] = a.TradeSource; d["InvestUnitID"] = encoding_cast(a.InvestUnitID); d["InstrumentID"] = encoding_cast(a.InstrumentID); d["ExchangeInstID"] = encoding_cast(a.ExchangeInstID); return d;});

	py::class_<CThostFtdcUserSessionField>(m, "CThostFtdcUserSessionField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcUserSessionField& a) {return CThostFtdcUserSessionField(a);})
		.def_readwrite("FrontID", &CThostFtdcUserSessionField::FrontID)
		.def_readwrite("SessionID", &CThostFtdcUserSessionField::SessionID)
		.def_property("BrokerID", [](const CThostFtdcUserSessionField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcUserSessionField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("UserID", [](const CThostFtdcUserSessionField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcUserSessionField& a, char c[]) {strcpy(a.UserID, c);})
		.def_property("LoginDate", [](const CThostFtdcUserSessionField& a) {return encoding_cast(a.LoginDate);}, [](CThostFtdcUserSessionField& a, char c[]) {strcpy(a.LoginDate, c);})
		.def_property("LoginTime", [](const CThostFtdcUserSessionField& a) {return encoding_cast(a.LoginTime);}, [](CThostFtdcUserSessionField& a, char c[]) {strcpy(a.LoginTime, c);})
		.def_property("reserve1", [](const CThostFtdcUserSessionField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcUserSessionField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("UserProductInfo", [](const CThostFtdcUserSessionField& a) {return encoding_cast(a.UserProductInfo);}, [](CThostFtdcUserSessionField& a, char c[]) {strcpy(a.UserProductInfo, c);})
		.def_property("InterfaceProductInfo", [](const CThostFtdcUserSessionField& a) {return encoding_cast(a.InterfaceProductInfo);}, [](CThostFtdcUserSessionField& a, char c[]) {strcpy(a.InterfaceProductInfo, c);})
		.def_property("ProtocolInfo", [](const CThostFtdcUserSessionField& a) {return encoding_cast(a.ProtocolInfo);}, [](CThostFtdcUserSessionField& a, char c[]) {strcpy(a.ProtocolInfo, c);})
		.def_property("MacAddress", [](const CThostFtdcUserSessionField& a) {return encoding_cast(a.MacAddress);}, [](CThostFtdcUserSessionField& a, char c[]) {strcpy(a.MacAddress, c);})
		.def_property("LoginRemark", [](const CThostFtdcUserSessionField& a) {return encoding_cast(a.LoginRemark);}, [](CThostFtdcUserSessionField& a, char c[]) {strcpy(a.LoginRemark, c);})
		.def_property("IPAddress", [](const CThostFtdcUserSessionField& a) {return encoding_cast(a.IPAddress);}, [](CThostFtdcUserSessionField& a, char c[]) {strcpy(a.IPAddress, c);})
		.def("to_dict", [](const CThostFtdcUserSessionField& a) {py::dict d; d["FrontID"] = a.FrontID; d["SessionID"] = a.SessionID; d["BrokerID"] = encoding_cast(a.BrokerID); d["UserID"] = encoding_cast(a.UserID); d["LoginDate"] = encoding_cast(a.LoginDate); d["LoginTime"] = encoding_cast(a.LoginTime); d["reserve1"] = encoding_cast(a.reserve1); d["UserProductInfo"] = encoding_cast(a.UserProductInfo); d["InterfaceProductInfo"] = encoding_cast(a.InterfaceProductInfo); d["ProtocolInfo"] = encoding_cast(a.ProtocolInfo); d["MacAddress"] = encoding_cast(a.MacAddress); d["LoginRemark"] = encoding_cast(a.LoginRemark); d["IPAddress"] = encoding_cast(a.IPAddress); return d;});

	py::class_<CThostFtdcQryMaxOrderVolumeField>(m, "CThostFtdcQryMaxOrderVolumeField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryMaxOrderVolumeField& a) {return CThostFtdcQryMaxOrderVolumeField(a);})
		.def_property("BrokerID", [](const CThostFtdcQryMaxOrderVolumeField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcQryMaxOrderVolumeField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcQryMaxOrderVolumeField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcQryMaxOrderVolumeField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_property("reserve1", [](const CThostFtdcQryMaxOrderVolumeField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcQryMaxOrderVolumeField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_readwrite("Direction", &CThostFtdcQryMaxOrderVolumeField::Direction)
		.def_readwrite("OffsetFlag", &CThostFtdcQryMaxOrderVolumeField::OffsetFlag)
		.def_readwrite("HedgeFlag", &CThostFtdcQryMaxOrderVolumeField::HedgeFlag)
		.def_readwrite("MaxVolume", &CThostFtdcQryMaxOrderVolumeField::MaxVolume)
		.def_property("ExchangeID", [](const CThostFtdcQryMaxOrderVolumeField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcQryMaxOrderVolumeField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("InvestUnitID", [](const CThostFtdcQryMaxOrderVolumeField& a) {return encoding_cast(a.InvestUnitID);}, [](CThostFtdcQryMaxOrderVolumeField& a, char c[]) {strcpy(a.InvestUnitID, c);})
		.def_property("InstrumentID", [](const CThostFtdcQryMaxOrderVolumeField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcQryMaxOrderVolumeField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def("to_dict", [](const CThostFtdcQryMaxOrderVolumeField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["reserve1"] = encoding_cast(a.reserve1); d["Direction"] = a.Direction; d["OffsetFlag"] = a.OffsetFlag; d["HedgeFlag"] = a.HedgeFlag; d["MaxVolume"] = a.MaxVolume; d["ExchangeID"] = encoding_cast(a.ExchangeID); d["InvestUnitID"] = encoding_cast(a.InvestUnitID); d["InstrumentID"] = encoding_cast(a.InstrumentID); return d;});

	py::class_<CThostFtdcSettlementInfoConfirmField>(m, "CThostFtdcSettlementInfoConfirmField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcSettlementInfoConfirmField& a) {return CThostFtdcSettlementInfoConfirmField(a);})
		.def_property("BrokerID", [](const CThostFtdcSettlementInfoConfirmField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcSettlementInfoConfirmField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcSettlementInfoConfirmField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcSettlementInfoConfirmField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_property("ConfirmDate", [](const CThostFtdcSettlementInfoConfirmField& a) {return encoding_cast(a.ConfirmDate);}, [](CThostFtdcSettlementInfoConfirmField& a, char c[]) {strcpy(a.ConfirmDate, c);})
		.def_property("ConfirmTime", [](const CThostFtdcSettlementInfoConfirmField& a) {return encoding_cast(a.ConfirmTime);}, [](CThostFtdcSettlementInfoConfirmField& a, char c[]) {strcpy(a.ConfirmTime, c);})
		.def_readwrite("SettlementID", &CThostFtdcSettlementInfoConfirmField::SettlementID)
		.def_property("AccountID", [](const CThostFtdcSettlementInfoConfirmField& a) {return encoding_cast(a.AccountID);}, [](CThostFtdcSettlementInfoConfirmField& a, char c[]) {strcpy(a.AccountID, c);})
		.def_property("CurrencyID", [](const CThostFtdcSettlementInfoConfirmField& a) {return encoding_cast(a.CurrencyID);}, [](CThostFtdcSettlementInfoConfirmField& a, char c[]) {strcpy(a.CurrencyID, c);})
		.def("to_dict", [](const CThostFtdcSettlementInfoConfirmField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["ConfirmDate"] = encoding_cast(a.ConfirmDate); d["ConfirmTime"] = encoding_cast(a.ConfirmTime); d["SettlementID"] = a.SettlementID; d["AccountID"] = encoding_cast(a.AccountID); d["CurrencyID"] = encoding_cast(a.CurrencyID); return d;});

	py::class_<CThostFtdcSyncDepositField>(m, "CThostFtdcSyncDepositField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcSyncDepositField& a) {return CThostFtdcSyncDepositField(a);})
		.def_property("DepositSeqNo", [](const CThostFtdcSyncDepositField& a) {return encoding_cast(a.DepositSeqNo);}, [](CThostFtdcSyncDepositField& a, char c[]) {strcpy(a.DepositSeqNo, c);})
		.def_property("BrokerID", [](const CThostFtdcSyncDepositField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcSyncDepositField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcSyncDepositField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcSyncDepositField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_readwrite("Deposit", &CThostFtdcSyncDepositField::Deposit)
		.def_readwrite("IsForce", &CThostFtdcSyncDepositField::IsForce)
		.def_property("CurrencyID", [](const CThostFtdcSyncDepositField& a) {return encoding_cast(a.CurrencyID);}, [](CThostFtdcSyncDepositField& a, char c[]) {strcpy(a.CurrencyID, c);})
		.def("to_dict", [](const CThostFtdcSyncDepositField& a) {py::dict d; d["DepositSeqNo"] = encoding_cast(a.DepositSeqNo); d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["Deposit"] = a.Deposit; d["IsForce"] = a.IsForce; d["CurrencyID"] = encoding_cast(a.CurrencyID); return d;});

	py::class_<CThostFtdcSyncFundMortgageField>(m, "CThostFtdcSyncFundMortgageField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcSyncFundMortgageField& a) {return CThostFtdcSyncFundMortgageField(a);})
		.def_property("MortgageSeqNo", [](const CThostFtdcSyncFundMortgageField& a) {return encoding_cast(a.MortgageSeqNo);}, [](CThostFtdcSyncFundMortgageField& a, char c[]) {strcpy(a.MortgageSeqNo, c);})
		.def_property("BrokerID", [](const CThostFtdcSyncFundMortgageField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcSyncFundMortgageField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcSyncFundMortgageField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcSyncFundMortgageField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_property("FromCurrencyID", [](const CThostFtdcSyncFundMortgageField& a) {return encoding_cast(a.FromCurrencyID);}, [](CThostFtdcSyncFundMortgageField& a, char c[]) {strcpy(a.FromCurrencyID, c);})
		.def_readwrite("MortgageAmount", &CThostFtdcSyncFundMortgageField::MortgageAmount)
		.def_property("ToCurrencyID", [](const CThostFtdcSyncFundMortgageField& a) {return encoding_cast(a.ToCurrencyID);}, [](CThostFtdcSyncFundMortgageField& a, char c[]) {strcpy(a.ToCurrencyID, c);})
		.def("to_dict", [](const CThostFtdcSyncFundMortgageField& a) {py::dict d; d["MortgageSeqNo"] = encoding_cast(a.MortgageSeqNo); d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["FromCurrencyID"] = encoding_cast(a.FromCurrencyID); d["MortgageAmount"] = a.MortgageAmount; d["ToCurrencyID"] = encoding_cast(a.ToCurrencyID); return d;});

	py::class_<CThostFtdcBrokerSyncField>(m, "CThostFtdcBrokerSyncField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcBrokerSyncField& a) {return CThostFtdcBrokerSyncField(a);})
		.def_property("BrokerID", [](const CThostFtdcBrokerSyncField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcBrokerSyncField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def("to_dict", [](const CThostFtdcBrokerSyncField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); return d;});

	py::class_<CThostFtdcSyncingInvestorField>(m, "CThostFtdcSyncingInvestorField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcSyncingInvestorField& a) {return CThostFtdcSyncingInvestorField(a);})
		.def_property("InvestorID", [](const CThostFtdcSyncingInvestorField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcSyncingInvestorField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_property("BrokerID", [](const CThostFtdcSyncingInvestorField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcSyncingInvestorField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorGroupID", [](const CThostFtdcSyncingInvestorField& a) {return encoding_cast(a.InvestorGroupID);}, [](CThostFtdcSyncingInvestorField& a, char c[]) {strcpy(a.InvestorGroupID, c);})
		.def_property("InvestorName", [](const CThostFtdcSyncingInvestorField& a) {return encoding_cast(a.InvestorName);}, [](CThostFtdcSyncingInvestorField& a, char c[]) {strcpy(a.InvestorName, c);})
		.def_readwrite("IdentifiedCardType", &CThostFtdcSyncingInvestorField::IdentifiedCardType)
		.def_property("IdentifiedCardNo", [](const CThostFtdcSyncingInvestorField& a) {return encoding_cast(a.IdentifiedCardNo);}, [](CThostFtdcSyncingInvestorField& a, char c[]) {strcpy(a.IdentifiedCardNo, c);})
		.def_readwrite("IsActive", &CThostFtdcSyncingInvestorField::IsActive)
		.def_property("Telephone", [](const CThostFtdcSyncingInvestorField& a) {return encoding_cast(a.Telephone);}, [](CThostFtdcSyncingInvestorField& a, char c[]) {strcpy(a.Telephone, c);})
		.def_property("Address", [](const CThostFtdcSyncingInvestorField& a) {return encoding_cast(a.Address);}, [](CThostFtdcSyncingInvestorField& a, char c[]) {strcpy(a.Address, c);})
		.def_property("OpenDate", [](const CThostFtdcSyncingInvestorField& a) {return encoding_cast(a.OpenDate);}, [](CThostFtdcSyncingInvestorField& a, char c[]) {strcpy(a.OpenDate, c);})
		.def_property("Mobile", [](const CThostFtdcSyncingInvestorField& a) {return encoding_cast(a.Mobile);}, [](CThostFtdcSyncingInvestorField& a, char c[]) {strcpy(a.Mobile, c);})
		.def_property("CommModelID", [](const CThostFtdcSyncingInvestorField& a) {return encoding_cast(a.CommModelID);}, [](CThostFtdcSyncingInvestorField& a, char c[]) {strcpy(a.CommModelID, c);})
		.def_property("MarginModelID", [](const CThostFtdcSyncingInvestorField& a) {return encoding_cast(a.MarginModelID);}, [](CThostFtdcSyncingInvestorField& a, char c[]) {strcpy(a.MarginModelID, c);})
		.def("to_dict", [](const CThostFtdcSyncingInvestorField& a) {py::dict d; d["InvestorID"] = encoding_cast(a.InvestorID); d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorGroupID"] = encoding_cast(a.InvestorGroupID); d["InvestorName"] = encoding_cast(a.InvestorName); d["IdentifiedCardType"] = a.IdentifiedCardType; d["IdentifiedCardNo"] = encoding_cast(a.IdentifiedCardNo); d["IsActive"] = a.IsActive; d["Telephone"] = encoding_cast(a.Telephone); d["Address"] = encoding_cast(a.Address); d["OpenDate"] = encoding_cast(a.OpenDate); d["Mobile"] = encoding_cast(a.Mobile); d["CommModelID"] = encoding_cast(a.CommModelID); d["MarginModelID"] = encoding_cast(a.MarginModelID); return d;});

	py::class_<CThostFtdcSyncingTradingCodeField>(m, "CThostFtdcSyncingTradingCodeField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcSyncingTradingCodeField& a) {return CThostFtdcSyncingTradingCodeField(a);})
		.def_property("InvestorID", [](const CThostFtdcSyncingTradingCodeField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcSyncingTradingCodeField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_property("BrokerID", [](const CThostFtdcSyncingTradingCodeField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcSyncingTradingCodeField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("ExchangeID", [](const CThostFtdcSyncingTradingCodeField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcSyncingTradingCodeField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("ClientID", [](const CThostFtdcSyncingTradingCodeField& a) {return encoding_cast(a.ClientID);}, [](CThostFtdcSyncingTradingCodeField& a, char c[]) {strcpy(a.ClientID, c);})
		.def_readwrite("IsActive", &CThostFtdcSyncingTradingCodeField::IsActive)
		.def_readwrite("ClientIDType", &CThostFtdcSyncingTradingCodeField::ClientIDType)
		.def("to_dict", [](const CThostFtdcSyncingTradingCodeField& a) {py::dict d; d["InvestorID"] = encoding_cast(a.InvestorID); d["BrokerID"] = encoding_cast(a.BrokerID); d["ExchangeID"] = encoding_cast(a.ExchangeID); d["ClientID"] = encoding_cast(a.ClientID); d["IsActive"] = a.IsActive; d["ClientIDType"] = a.ClientIDType; return d;});

	py::class_<CThostFtdcSyncingInvestorGroupField>(m, "CThostFtdcSyncingInvestorGroupField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcSyncingInvestorGroupField& a) {return CThostFtdcSyncingInvestorGroupField(a);})
		.def_property("BrokerID", [](const CThostFtdcSyncingInvestorGroupField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcSyncingInvestorGroupField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorGroupID", [](const CThostFtdcSyncingInvestorGroupField& a) {return encoding_cast(a.InvestorGroupID);}, [](CThostFtdcSyncingInvestorGroupField& a, char c[]) {strcpy(a.InvestorGroupID, c);})
		.def_property("InvestorGroupName", [](const CThostFtdcSyncingInvestorGroupField& a) {return encoding_cast(a.InvestorGroupName);}, [](CThostFtdcSyncingInvestorGroupField& a, char c[]) {strcpy(a.InvestorGroupName, c);})
		.def("to_dict", [](const CThostFtdcSyncingInvestorGroupField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorGroupID"] = encoding_cast(a.InvestorGroupID); d["InvestorGroupName"] = encoding_cast(a.InvestorGroupName); return d;});

	py::class_<CThostFtdcSyncingTradingAccountField>(m, "CThostFtdcSyncingTradingAccountField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcSyncingTradingAccountField& a) {return CThostFtdcSyncingTradingAccountField(a);})
		.def_property("BrokerID", [](const CThostFtdcSyncingTradingAccountField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcSyncingTradingAccountField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("AccountID", [](const CThostFtdcSyncingTradingAccountField& a) {return encoding_cast(a.AccountID);}, [](CThostFtdcSyncingTradingAccountField& a, char c[]) {strcpy(a.AccountID, c);})
		.def_readwrite("PreMortgage", &CThostFtdcSyncingTradingAccountField::PreMortgage)
		.def_readwrite("PreCredit", &CThostFtdcSyncingTradingAccountField::PreCredit)
		.def_readwrite("PreDeposit", &CThostFtdcSyncingTradingAccountField::PreDeposit)
		.def_readwrite("PreBalance", &CThostFtdcSyncingTradingAccountField::PreBalance)
		.def_readwrite("PreMargin", &CThostFtdcSyncingTradingAccountField::PreMargin)
		.def_readwrite("InterestBase", &CThostFtdcSyncingTradingAccountField::InterestBase)
		.def_readwrite("Interest", &CThostFtdcSyncingTradingAccountField::Interest)
		.def_readwrite("Deposit", &CThostFtdcSyncingTradingAccountField::Deposit)
		.def_readwrite("Withdraw", &CThostFtdcSyncingTradingAccountField::Withdraw)
		.def_readwrite("FrozenMargin", &CThostFtdcSyncingTradingAccountField::FrozenMargin)
		.def_readwrite("FrozenCash", &CThostFtdcSyncingTradingAccountField::FrozenCash)
		.def_readwrite("FrozenCommission", &CThostFtdcSyncingTradingAccountField::FrozenCommission)
		.def_readwrite("CurrMargin", &CThostFtdcSyncingTradingAccountField::CurrMargin)
		.def_readwrite("CashIn", &CThostFtdcSyncingTradingAccountField::CashIn)
		.def_readwrite("Commission", &CThostFtdcSyncingTradingAccountField::Commission)
		.def_readwrite("CloseProfit", &CThostFtdcSyncingTradingAccountField::CloseProfit)
		.def_readwrite("PositionProfit", &CThostFtdcSyncingTradingAccountField::PositionProfit)
		.def_readwrite("Balance", &CThostFtdcSyncingTradingAccountField::Balance)
		.def_readwrite("Available", &CThostFtdcSyncingTradingAccountField::Available)
		.def_readwrite("WithdrawQuota", &CThostFtdcSyncingTradingAccountField::WithdrawQuota)
		.def_readwrite("Reserve", &CThostFtdcSyncingTradingAccountField::Reserve)
		.def_property("TradingDay", [](const CThostFtdcSyncingTradingAccountField& a) {return encoding_cast(a.TradingDay);}, [](CThostFtdcSyncingTradingAccountField& a, char c[]) {strcpy(a.TradingDay, c);})
		.def_readwrite("SettlementID", &CThostFtdcSyncingTradingAccountField::SettlementID)
		.def_readwrite("Credit", &CThostFtdcSyncingTradingAccountField::Credit)
		.def_readwrite("Mortgage", &CThostFtdcSyncingTradingAccountField::Mortgage)
		.def_readwrite("ExchangeMargin", &CThostFtdcSyncingTradingAccountField::ExchangeMargin)
		.def_readwrite("DeliveryMargin", &CThostFtdcSyncingTradingAccountField::DeliveryMargin)
		.def_readwrite("ExchangeDeliveryMargin", &CThostFtdcSyncingTradingAccountField::ExchangeDeliveryMargin)
		.def_readwrite("ReserveBalance", &CThostFtdcSyncingTradingAccountField::ReserveBalance)
		.def_property("CurrencyID", [](const CThostFtdcSyncingTradingAccountField& a) {return encoding_cast(a.CurrencyID);}, [](CThostFtdcSyncingTradingAccountField& a, char c[]) {strcpy(a.CurrencyID, c);})
		.def_readwrite("PreFundMortgageIn", &CThostFtdcSyncingTradingAccountField::PreFundMortgageIn)
		.def_readwrite("PreFundMortgageOut", &CThostFtdcSyncingTradingAccountField::PreFundMortgageOut)
		.def_readwrite("FundMortgageIn", &CThostFtdcSyncingTradingAccountField::FundMortgageIn)
		.def_readwrite("FundMortgageOut", &CThostFtdcSyncingTradingAccountField::FundMortgageOut)
		.def_readwrite("FundMortgageAvailable", &CThostFtdcSyncingTradingAccountField::FundMortgageAvailable)
		.def_readwrite("MortgageableFund", &CThostFtdcSyncingTradingAccountField::MortgageableFund)
		.def_readwrite("SpecProductMargin", &CThostFtdcSyncingTradingAccountField::SpecProductMargin)
		.def_readwrite("SpecProductFrozenMargin", &CThostFtdcSyncingTradingAccountField::SpecProductFrozenMargin)
		.def_readwrite("SpecProductCommission", &CThostFtdcSyncingTradingAccountField::SpecProductCommission)
		.def_readwrite("SpecProductFrozenCommission", &CThostFtdcSyncingTradingAccountField::SpecProductFrozenCommission)
		.def_readwrite("SpecProductPositionProfit", &CThostFtdcSyncingTradingAccountField::SpecProductPositionProfit)
		.def_readwrite("SpecProductCloseProfit", &CThostFtdcSyncingTradingAccountField::SpecProductCloseProfit)
		.def_readwrite("SpecProductPositionProfitByAlg", &CThostFtdcSyncingTradingAccountField::SpecProductPositionProfitByAlg)
		.def_readwrite("SpecProductExchangeMargin", &CThostFtdcSyncingTradingAccountField::SpecProductExchangeMargin)
		.def_readwrite("FrozenSwap", &CThostFtdcSyncingTradingAccountField::FrozenSwap)
		.def_readwrite("RemainSwap", &CThostFtdcSyncingTradingAccountField::RemainSwap)
		.def("to_dict", [](const CThostFtdcSyncingTradingAccountField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["AccountID"] = encoding_cast(a.AccountID); d["PreMortgage"] = a.PreMortgage; d["PreCredit"] = a.PreCredit; d["PreDeposit"] = a.PreDeposit; d["PreBalance"] = a.PreBalance; d["PreMargin"] = a.PreMargin; d["InterestBase"] = a.InterestBase; d["Interest"] = a.Interest; d["Deposit"] = a.Deposit; d["Withdraw"] = a.Withdraw; d["FrozenMargin"] = a.FrozenMargin; d["FrozenCash"] = a.FrozenCash; d["FrozenCommission"] = a.FrozenCommission; d["CurrMargin"] = a.CurrMargin; d["CashIn"] = a.CashIn; d["Commission"] = a.Commission; d["CloseProfit"] = a.CloseProfit; d["PositionProfit"] = a.PositionProfit; d["Balance"] = a.Balance; d["Available"] = a.Available; d["WithdrawQuota"] = a.WithdrawQuota; d["Reserve"] = a.Reserve; d["TradingDay"] = encoding_cast(a.TradingDay); d["SettlementID"] = a.SettlementID; d["Credit"] = a.Credit; d["Mortgage"] = a.Mortgage; d["ExchangeMargin"] = a.ExchangeMargin; d["DeliveryMargin"] = a.DeliveryMargin; d["ExchangeDeliveryMargin"] = a.ExchangeDeliveryMargin; d["ReserveBalance"] = a.ReserveBalance; d["CurrencyID"] = encoding_cast(a.CurrencyID); d["PreFundMortgageIn"] = a.PreFundMortgageIn; d["PreFundMortgageOut"] = a.PreFundMortgageOut; d["FundMortgageIn"] = a.FundMortgageIn; d["FundMortgageOut"] = a.FundMortgageOut; d["FundMortgageAvailable"] = a.FundMortgageAvailable; d["MortgageableFund"] = a.MortgageableFund; d["SpecProductMargin"] = a.SpecProductMargin; d["SpecProductFrozenMargin"] = a.SpecProductFrozenMargin; d["SpecProductCommission"] = a.SpecProductCommission; d["SpecProductFrozenCommission"] = a.SpecProductFrozenCommission; d["SpecProductPositionProfit"] = a.SpecProductPositionProfit; d["SpecProductCloseProfit"] = a.SpecProductCloseProfit; d["SpecProductPositionProfitByAlg"] = a.SpecProductPositionProfitByAlg; d["SpecProductExchangeMargin"] = a.SpecProductExchangeMargin; d["FrozenSwap"] = a.FrozenSwap; d["RemainSwap"] = a.RemainSwap; return d;});

	py::class_<CThostFtdcSyncingInvestorPositionField>(m, "CThostFtdcSyncingInvestorPositionField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcSyncingInvestorPositionField& a) {return CThostFtdcSyncingInvestorPositionField(a);})
		.def_property("reserve1", [](const CThostFtdcSyncingInvestorPositionField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcSyncingInvestorPositionField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("BrokerID", [](const CThostFtdcSyncingInvestorPositionField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcSyncingInvestorPositionField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcSyncingInvestorPositionField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcSyncingInvestorPositionField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_readwrite("PosiDirection", &CThostFtdcSyncingInvestorPositionField::PosiDirection)
		.def_readwrite("HedgeFlag", &CThostFtdcSyncingInvestorPositionField::HedgeFlag)
		.def_readwrite("PositionDate", &CThostFtdcSyncingInvestorPositionField::PositionDate)
		.def_readwrite("YdPosition", &CThostFtdcSyncingInvestorPositionField::YdPosition)
		.def_readwrite("Position", &CThostFtdcSyncingInvestorPositionField::Position)
		.def_readwrite("LongFrozen", &CThostFtdcSyncingInvestorPositionField::LongFrozen)
		.def_readwrite("ShortFrozen", &CThostFtdcSyncingInvestorPositionField::ShortFrozen)
		.def_readwrite("LongFrozenAmount", &CThostFtdcSyncingInvestorPositionField::LongFrozenAmount)
		.def_readwrite("ShortFrozenAmount", &CThostFtdcSyncingInvestorPositionField::ShortFrozenAmount)
		.def_readwrite("OpenVolume", &CThostFtdcSyncingInvestorPositionField::OpenVolume)
		.def_readwrite("CloseVolume", &CThostFtdcSyncingInvestorPositionField::CloseVolume)
		.def_readwrite("OpenAmount", &CThostFtdcSyncingInvestorPositionField::OpenAmount)
		.def_readwrite("CloseAmount", &CThostFtdcSyncingInvestorPositionField::CloseAmount)
		.def_readwrite("PositionCost", &CThostFtdcSyncingInvestorPositionField::PositionCost)
		.def_readwrite("PreMargin", &CThostFtdcSyncingInvestorPositionField::PreMargin)
		.def_readwrite("UseMargin", &CThostFtdcSyncingInvestorPositionField::UseMargin)
		.def_readwrite("FrozenMargin", &CThostFtdcSyncingInvestorPositionField::FrozenMargin)
		.def_readwrite("FrozenCash", &CThostFtdcSyncingInvestorPositionField::FrozenCash)
		.def_readwrite("FrozenCommission", &CThostFtdcSyncingInvestorPositionField::FrozenCommission)
		.def_readwrite("CashIn", &CThostFtdcSyncingInvestorPositionField::CashIn)
		.def_readwrite("Commission", &CThostFtdcSyncingInvestorPositionField::Commission)
		.def_readwrite("CloseProfit", &CThostFtdcSyncingInvestorPositionField::CloseProfit)
		.def_readwrite("PositionProfit", &CThostFtdcSyncingInvestorPositionField::PositionProfit)
		.def_readwrite("PreSettlementPrice", &CThostFtdcSyncingInvestorPositionField::PreSettlementPrice)
		.def_readwrite("SettlementPrice", &CThostFtdcSyncingInvestorPositionField::SettlementPrice)
		.def_property("TradingDay", [](const CThostFtdcSyncingInvestorPositionField& a) {return encoding_cast(a.TradingDay);}, [](CThostFtdcSyncingInvestorPositionField& a, char c[]) {strcpy(a.TradingDay, c);})
		.def_readwrite("SettlementID", &CThostFtdcSyncingInvestorPositionField::SettlementID)
		.def_readwrite("OpenCost", &CThostFtdcSyncingInvestorPositionField::OpenCost)
		.def_readwrite("ExchangeMargin", &CThostFtdcSyncingInvestorPositionField::ExchangeMargin)
		.def_readwrite("CombPosition", &CThostFtdcSyncingInvestorPositionField::CombPosition)
		.def_readwrite("CombLongFrozen", &CThostFtdcSyncingInvestorPositionField::CombLongFrozen)
		.def_readwrite("CombShortFrozen", &CThostFtdcSyncingInvestorPositionField::CombShortFrozen)
		.def_readwrite("CloseProfitByDate", &CThostFtdcSyncingInvestorPositionField::CloseProfitByDate)
		.def_readwrite("CloseProfitByTrade", &CThostFtdcSyncingInvestorPositionField::CloseProfitByTrade)
		.def_readwrite("TodayPosition", &CThostFtdcSyncingInvestorPositionField::TodayPosition)
		.def_readwrite("MarginRateByMoney", &CThostFtdcSyncingInvestorPositionField::MarginRateByMoney)
		.def_readwrite("MarginRateByVolume", &CThostFtdcSyncingInvestorPositionField::MarginRateByVolume)
		.def_readwrite("StrikeFrozen", &CThostFtdcSyncingInvestorPositionField::StrikeFrozen)
		.def_readwrite("StrikeFrozenAmount", &CThostFtdcSyncingInvestorPositionField::StrikeFrozenAmount)
		.def_readwrite("AbandonFrozen", &CThostFtdcSyncingInvestorPositionField::AbandonFrozen)
		.def_property("ExchangeID", [](const CThostFtdcSyncingInvestorPositionField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcSyncingInvestorPositionField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_readwrite("YdStrikeFrozen", &CThostFtdcSyncingInvestorPositionField::YdStrikeFrozen)
		.def_property("InvestUnitID", [](const CThostFtdcSyncingInvestorPositionField& a) {return encoding_cast(a.InvestUnitID);}, [](CThostFtdcSyncingInvestorPositionField& a, char c[]) {strcpy(a.InvestUnitID, c);})
		.def_readwrite("PositionCostOffset", &CThostFtdcSyncingInvestorPositionField::PositionCostOffset)
		.def_readwrite("TasPosition", &CThostFtdcSyncingInvestorPositionField::TasPosition)
		.def_readwrite("TasPositionCost", &CThostFtdcSyncingInvestorPositionField::TasPositionCost)
		.def_property("InstrumentID", [](const CThostFtdcSyncingInvestorPositionField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcSyncingInvestorPositionField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def("to_dict", [](const CThostFtdcSyncingInvestorPositionField& a) {py::dict d; d["reserve1"] = encoding_cast(a.reserve1); d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["PosiDirection"] = a.PosiDirection; d["HedgeFlag"] = a.HedgeFlag; d["PositionDate"] = a.PositionDate; d["YdPosition"] = a.YdPosition; d["Position"] = a.Position; d["LongFrozen"] = a.LongFrozen; d["ShortFrozen"] = a.ShortFrozen; d["LongFrozenAmount"] = a.LongFrozenAmount; d["ShortFrozenAmount"] = a.ShortFrozenAmount; d["OpenVolume"] = a.OpenVolume; d["CloseVolume"] = a.CloseVolume; d["OpenAmount"] = a.OpenAmount; d["CloseAmount"] = a.CloseAmount; d["PositionCost"] = a.PositionCost; d["PreMargin"] = a.PreMargin; d["UseMargin"] = a.UseMargin; d["FrozenMargin"] = a.FrozenMargin; d["FrozenCash"] = a.FrozenCash; d["FrozenCommission"] = a.FrozenCommission; d["CashIn"] = a.CashIn; d["Commission"] = a.Commission; d["CloseProfit"] = a.CloseProfit; d["PositionProfit"] = a.PositionProfit; d["PreSettlementPrice"] = a.PreSettlementPrice; d["SettlementPrice"] = a.SettlementPrice; d["TradingDay"] = encoding_cast(a.TradingDay); d["SettlementID"] = a.SettlementID; d["OpenCost"] = a.OpenCost; d["ExchangeMargin"] = a.ExchangeMargin; d["CombPosition"] = a.CombPosition; d["CombLongFrozen"] = a.CombLongFrozen; d["CombShortFrozen"] = a.CombShortFrozen; d["CloseProfitByDate"] = a.CloseProfitByDate; d["CloseProfitByTrade"] = a.CloseProfitByTrade; d["TodayPosition"] = a.TodayPosition; d["MarginRateByMoney"] = a.MarginRateByMoney; d["MarginRateByVolume"] = a.MarginRateByVolume; d["StrikeFrozen"] = a.StrikeFrozen; d["StrikeFrozenAmount"] = a.StrikeFrozenAmount; d["AbandonFrozen"] = a.AbandonFrozen; d["ExchangeID"] = encoding_cast(a.ExchangeID); d["YdStrikeFrozen"] = a.YdStrikeFrozen; d["InvestUnitID"] = encoding_cast(a.InvestUnitID); d["PositionCostOffset"] = a.PositionCostOffset; d["TasPosition"] = a.TasPosition; d["TasPositionCost"] = a.TasPositionCost; d["InstrumentID"] = encoding_cast(a.InstrumentID); return d;});

	py::class_<CThostFtdcSyncingInstrumentMarginRateField>(m, "CThostFtdcSyncingInstrumentMarginRateField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcSyncingInstrumentMarginRateField& a) {return CThostFtdcSyncingInstrumentMarginRateField(a);})
		.def_property("reserve1", [](const CThostFtdcSyncingInstrumentMarginRateField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcSyncingInstrumentMarginRateField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_readwrite("InvestorRange", &CThostFtdcSyncingInstrumentMarginRateField::InvestorRange)
		.def_property("BrokerID", [](const CThostFtdcSyncingInstrumentMarginRateField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcSyncingInstrumentMarginRateField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcSyncingInstrumentMarginRateField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcSyncingInstrumentMarginRateField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_readwrite("HedgeFlag", &CThostFtdcSyncingInstrumentMarginRateField::HedgeFlag)
		.def_readwrite("LongMarginRatioByMoney", &CThostFtdcSyncingInstrumentMarginRateField::LongMarginRatioByMoney)
		.def_readwrite("LongMarginRatioByVolume", &CThostFtdcSyncingInstrumentMarginRateField::LongMarginRatioByVolume)
		.def_readwrite("ShortMarginRatioByMoney", &CThostFtdcSyncingInstrumentMarginRateField::ShortMarginRatioByMoney)
		.def_readwrite("ShortMarginRatioByVolume", &CThostFtdcSyncingInstrumentMarginRateField::ShortMarginRatioByVolume)
		.def_readwrite("IsRelative", &CThostFtdcSyncingInstrumentMarginRateField::IsRelative)
		.def_property("InstrumentID", [](const CThostFtdcSyncingInstrumentMarginRateField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcSyncingInstrumentMarginRateField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def("to_dict", [](const CThostFtdcSyncingInstrumentMarginRateField& a) {py::dict d; d["reserve1"] = encoding_cast(a.reserve1); d["InvestorRange"] = a.InvestorRange; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["HedgeFlag"] = a.HedgeFlag; d["LongMarginRatioByMoney"] = a.LongMarginRatioByMoney; d["LongMarginRatioByVolume"] = a.LongMarginRatioByVolume; d["ShortMarginRatioByMoney"] = a.ShortMarginRatioByMoney; d["ShortMarginRatioByVolume"] = a.ShortMarginRatioByVolume; d["IsRelative"] = a.IsRelative; d["InstrumentID"] = encoding_cast(a.InstrumentID); return d;});

	py::class_<CThostFtdcSyncingInstrumentCommissionRateField>(m, "CThostFtdcSyncingInstrumentCommissionRateField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcSyncingInstrumentCommissionRateField& a) {return CThostFtdcSyncingInstrumentCommissionRateField(a);})
		.def_property("reserve1", [](const CThostFtdcSyncingInstrumentCommissionRateField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcSyncingInstrumentCommissionRateField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_readwrite("InvestorRange", &CThostFtdcSyncingInstrumentCommissionRateField::InvestorRange)
		.def_property("BrokerID", [](const CThostFtdcSyncingInstrumentCommissionRateField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcSyncingInstrumentCommissionRateField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcSyncingInstrumentCommissionRateField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcSyncingInstrumentCommissionRateField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_readwrite("OpenRatioByMoney", &CThostFtdcSyncingInstrumentCommissionRateField::OpenRatioByMoney)
		.def_readwrite("OpenRatioByVolume", &CThostFtdcSyncingInstrumentCommissionRateField::OpenRatioByVolume)
		.def_readwrite("CloseRatioByMoney", &CThostFtdcSyncingInstrumentCommissionRateField::CloseRatioByMoney)
		.def_readwrite("CloseRatioByVolume", &CThostFtdcSyncingInstrumentCommissionRateField::CloseRatioByVolume)
		.def_readwrite("CloseTodayRatioByMoney", &CThostFtdcSyncingInstrumentCommissionRateField::CloseTodayRatioByMoney)
		.def_readwrite("CloseTodayRatioByVolume", &CThostFtdcSyncingInstrumentCommissionRateField::CloseTodayRatioByVolume)
		.def_property("InstrumentID", [](const CThostFtdcSyncingInstrumentCommissionRateField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcSyncingInstrumentCommissionRateField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def("to_dict", [](const CThostFtdcSyncingInstrumentCommissionRateField& a) {py::dict d; d["reserve1"] = encoding_cast(a.reserve1); d["InvestorRange"] = a.InvestorRange; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["OpenRatioByMoney"] = a.OpenRatioByMoney; d["OpenRatioByVolume"] = a.OpenRatioByVolume; d["CloseRatioByMoney"] = a.CloseRatioByMoney; d["CloseRatioByVolume"] = a.CloseRatioByVolume; d["CloseTodayRatioByMoney"] = a.CloseTodayRatioByMoney; d["CloseTodayRatioByVolume"] = a.CloseTodayRatioByVolume; d["InstrumentID"] = encoding_cast(a.InstrumentID); return d;});

	py::class_<CThostFtdcSyncingInstrumentTradingRightField>(m, "CThostFtdcSyncingInstrumentTradingRightField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcSyncingInstrumentTradingRightField& a) {return CThostFtdcSyncingInstrumentTradingRightField(a);})
		.def_property("reserve1", [](const CThostFtdcSyncingInstrumentTradingRightField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcSyncingInstrumentTradingRightField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_readwrite("InvestorRange", &CThostFtdcSyncingInstrumentTradingRightField::InvestorRange)
		.def_property("BrokerID", [](const CThostFtdcSyncingInstrumentTradingRightField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcSyncingInstrumentTradingRightField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcSyncingInstrumentTradingRightField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcSyncingInstrumentTradingRightField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_readwrite("TradingRight", &CThostFtdcSyncingInstrumentTradingRightField::TradingRight)
		.def_property("InstrumentID", [](const CThostFtdcSyncingInstrumentTradingRightField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcSyncingInstrumentTradingRightField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def("to_dict", [](const CThostFtdcSyncingInstrumentTradingRightField& a) {py::dict d; d["reserve1"] = encoding_cast(a.reserve1); d["InvestorRange"] = a.InvestorRange; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["TradingRight"] = a.TradingRight; d["InstrumentID"] = encoding_cast(a.InstrumentID); return d;});

	py::class_<CThostFtdcQryOrderField>(m, "CThostFtdcQryOrderField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryOrderField& a) {return CThostFtdcQryOrderField(a);})
		.def_property("BrokerID", [](const CThostFtdcQryOrderField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcQryOrderField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcQryOrderField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcQryOrderField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_property("reserve1", [](const CThostFtdcQryOrderField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcQryOrderField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("ExchangeID", [](const CThostFtdcQryOrderField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcQryOrderField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("OrderSysID", [](const CThostFtdcQryOrderField& a) {return encoding_cast(a.OrderSysID);}, [](CThostFtdcQryOrderField& a, char c[]) {strcpy(a.OrderSysID, c);})
		.def_property("InsertTimeStart", [](const CThostFtdcQryOrderField& a) {return encoding_cast(a.InsertTimeStart);}, [](CThostFtdcQryOrderField& a, char c[]) {strcpy(a.InsertTimeStart, c);})
		.def_property("InsertTimeEnd", [](const CThostFtdcQryOrderField& a) {return encoding_cast(a.InsertTimeEnd);}, [](CThostFtdcQryOrderField& a, char c[]) {strcpy(a.InsertTimeEnd, c);})
		.def_property("InvestUnitID", [](const CThostFtdcQryOrderField& a) {return encoding_cast(a.InvestUnitID);}, [](CThostFtdcQryOrderField& a, char c[]) {strcpy(a.InvestUnitID, c);})
		.def_property("InstrumentID", [](const CThostFtdcQryOrderField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcQryOrderField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def("to_dict", [](const CThostFtdcQryOrderField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["reserve1"] = encoding_cast(a.reserve1); d["ExchangeID"] = encoding_cast(a.ExchangeID); d["OrderSysID"] = encoding_cast(a.OrderSysID); d["InsertTimeStart"] = encoding_cast(a.InsertTimeStart); d["InsertTimeEnd"] = encoding_cast(a.InsertTimeEnd); d["InvestUnitID"] = encoding_cast(a.InvestUnitID); d["InstrumentID"] = encoding_cast(a.InstrumentID); return d;});

	py::class_<CThostFtdcQryTradeField>(m, "CThostFtdcQryTradeField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryTradeField& a) {return CThostFtdcQryTradeField(a);})
		.def_property("BrokerID", [](const CThostFtdcQryTradeField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcQryTradeField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcQryTradeField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcQryTradeField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_property("reserve1", [](const CThostFtdcQryTradeField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcQryTradeField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("ExchangeID", [](const CThostFtdcQryTradeField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcQryTradeField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("TradeID", [](const CThostFtdcQryTradeField& a) {return encoding_cast(a.TradeID);}, [](CThostFtdcQryTradeField& a, char c[]) {strcpy(a.TradeID, c);})
		.def_property("TradeTimeStart", [](const CThostFtdcQryTradeField& a) {return encoding_cast(a.TradeTimeStart);}, [](CThostFtdcQryTradeField& a, char c[]) {strcpy(a.TradeTimeStart, c);})
		.def_property("TradeTimeEnd", [](const CThostFtdcQryTradeField& a) {return encoding_cast(a.TradeTimeEnd);}, [](CThostFtdcQryTradeField& a, char c[]) {strcpy(a.TradeTimeEnd, c);})
		.def_property("InvestUnitID", [](const CThostFtdcQryTradeField& a) {return encoding_cast(a.InvestUnitID);}, [](CThostFtdcQryTradeField& a, char c[]) {strcpy(a.InvestUnitID, c);})
		.def_property("InstrumentID", [](const CThostFtdcQryTradeField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcQryTradeField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def("to_dict", [](const CThostFtdcQryTradeField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["reserve1"] = encoding_cast(a.reserve1); d["ExchangeID"] = encoding_cast(a.ExchangeID); d["TradeID"] = encoding_cast(a.TradeID); d["TradeTimeStart"] = encoding_cast(a.TradeTimeStart); d["TradeTimeEnd"] = encoding_cast(a.TradeTimeEnd); d["InvestUnitID"] = encoding_cast(a.InvestUnitID); d["InstrumentID"] = encoding_cast(a.InstrumentID); return d;});

	py::class_<CThostFtdcQryInvestorPositionField>(m, "CThostFtdcQryInvestorPositionField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryInvestorPositionField& a) {return CThostFtdcQryInvestorPositionField(a);})
		.def_property("BrokerID", [](const CThostFtdcQryInvestorPositionField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcQryInvestorPositionField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcQryInvestorPositionField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcQryInvestorPositionField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_property("reserve1", [](const CThostFtdcQryInvestorPositionField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcQryInvestorPositionField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("ExchangeID", [](const CThostFtdcQryInvestorPositionField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcQryInvestorPositionField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("InvestUnitID", [](const CThostFtdcQryInvestorPositionField& a) {return encoding_cast(a.InvestUnitID);}, [](CThostFtdcQryInvestorPositionField& a, char c[]) {strcpy(a.InvestUnitID, c);})
		.def_property("InstrumentID", [](const CThostFtdcQryInvestorPositionField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcQryInvestorPositionField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def("to_dict", [](const CThostFtdcQryInvestorPositionField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["reserve1"] = encoding_cast(a.reserve1); d["ExchangeID"] = encoding_cast(a.ExchangeID); d["InvestUnitID"] = encoding_cast(a.InvestUnitID); d["InstrumentID"] = encoding_cast(a.InstrumentID); return d;});

	py::class_<CThostFtdcQryTradingAccountField>(m, "CThostFtdcQryTradingAccountField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryTradingAccountField& a) {return CThostFtdcQryTradingAccountField(a);})
		.def_property("BrokerID", [](const CThostFtdcQryTradingAccountField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcQryTradingAccountField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcQryTradingAccountField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcQryTradingAccountField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_property("CurrencyID", [](const CThostFtdcQryTradingAccountField& a) {return encoding_cast(a.CurrencyID);}, [](CThostFtdcQryTradingAccountField& a, char c[]) {strcpy(a.CurrencyID, c);})
		.def_readwrite("BizType", &CThostFtdcQryTradingAccountField::BizType)
		.def_property("AccountID", [](const CThostFtdcQryTradingAccountField& a) {return encoding_cast(a.AccountID);}, [](CThostFtdcQryTradingAccountField& a, char c[]) {strcpy(a.AccountID, c);})
		.def("to_dict", [](const CThostFtdcQryTradingAccountField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["CurrencyID"] = encoding_cast(a.CurrencyID); d["BizType"] = a.BizType; d["AccountID"] = encoding_cast(a.AccountID); return d;});

	py::class_<CThostFtdcQryInvestorField>(m, "CThostFtdcQryInvestorField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryInvestorField& a) {return CThostFtdcQryInvestorField(a);})
		.def_property("BrokerID", [](const CThostFtdcQryInvestorField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcQryInvestorField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcQryInvestorField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcQryInvestorField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def("to_dict", [](const CThostFtdcQryInvestorField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); return d;});

	py::class_<CThostFtdcQryTradingCodeField>(m, "CThostFtdcQryTradingCodeField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryTradingCodeField& a) {return CThostFtdcQryTradingCodeField(a);})
		.def_property("BrokerID", [](const CThostFtdcQryTradingCodeField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcQryTradingCodeField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcQryTradingCodeField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcQryTradingCodeField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_property("ExchangeID", [](const CThostFtdcQryTradingCodeField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcQryTradingCodeField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("ClientID", [](const CThostFtdcQryTradingCodeField& a) {return encoding_cast(a.ClientID);}, [](CThostFtdcQryTradingCodeField& a, char c[]) {strcpy(a.ClientID, c);})
		.def_readwrite("ClientIDType", &CThostFtdcQryTradingCodeField::ClientIDType)
		.def_property("InvestUnitID", [](const CThostFtdcQryTradingCodeField& a) {return encoding_cast(a.InvestUnitID);}, [](CThostFtdcQryTradingCodeField& a, char c[]) {strcpy(a.InvestUnitID, c);})
		.def("to_dict", [](const CThostFtdcQryTradingCodeField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["ExchangeID"] = encoding_cast(a.ExchangeID); d["ClientID"] = encoding_cast(a.ClientID); d["ClientIDType"] = a.ClientIDType; d["InvestUnitID"] = encoding_cast(a.InvestUnitID); return d;});

	py::class_<CThostFtdcQryInvestorGroupField>(m, "CThostFtdcQryInvestorGroupField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryInvestorGroupField& a) {return CThostFtdcQryInvestorGroupField(a);})
		.def_property("BrokerID", [](const CThostFtdcQryInvestorGroupField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcQryInvestorGroupField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def("to_dict", [](const CThostFtdcQryInvestorGroupField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); return d;});

	py::class_<CThostFtdcQryInstrumentMarginRateField>(m, "CThostFtdcQryInstrumentMarginRateField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryInstrumentMarginRateField& a) {return CThostFtdcQryInstrumentMarginRateField(a);})
		.def_property("BrokerID", [](const CThostFtdcQryInstrumentMarginRateField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcQryInstrumentMarginRateField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcQryInstrumentMarginRateField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcQryInstrumentMarginRateField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_property("reserve1", [](const CThostFtdcQryInstrumentMarginRateField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcQryInstrumentMarginRateField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_readwrite("HedgeFlag", &CThostFtdcQryInstrumentMarginRateField::HedgeFlag)
		.def_property("ExchangeID", [](const CThostFtdcQryInstrumentMarginRateField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcQryInstrumentMarginRateField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("InvestUnitID", [](const CThostFtdcQryInstrumentMarginRateField& a) {return encoding_cast(a.InvestUnitID);}, [](CThostFtdcQryInstrumentMarginRateField& a, char c[]) {strcpy(a.InvestUnitID, c);})
		.def_property("InstrumentID", [](const CThostFtdcQryInstrumentMarginRateField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcQryInstrumentMarginRateField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def("to_dict", [](const CThostFtdcQryInstrumentMarginRateField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["reserve1"] = encoding_cast(a.reserve1); d["HedgeFlag"] = a.HedgeFlag; d["ExchangeID"] = encoding_cast(a.ExchangeID); d["InvestUnitID"] = encoding_cast(a.InvestUnitID); d["InstrumentID"] = encoding_cast(a.InstrumentID); return d;});

	py::class_<CThostFtdcQryInstrumentCommissionRateField>(m, "CThostFtdcQryInstrumentCommissionRateField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryInstrumentCommissionRateField& a) {return CThostFtdcQryInstrumentCommissionRateField(a);})
		.def_property("BrokerID", [](const CThostFtdcQryInstrumentCommissionRateField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcQryInstrumentCommissionRateField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcQryInstrumentCommissionRateField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcQryInstrumentCommissionRateField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_property("reserve1", [](const CThostFtdcQryInstrumentCommissionRateField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcQryInstrumentCommissionRateField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("ExchangeID", [](const CThostFtdcQryInstrumentCommissionRateField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcQryInstrumentCommissionRateField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("InvestUnitID", [](const CThostFtdcQryInstrumentCommissionRateField& a) {return encoding_cast(a.InvestUnitID);}, [](CThostFtdcQryInstrumentCommissionRateField& a, char c[]) {strcpy(a.InvestUnitID, c);})
		.def_property("InstrumentID", [](const CThostFtdcQryInstrumentCommissionRateField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcQryInstrumentCommissionRateField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def("to_dict", [](const CThostFtdcQryInstrumentCommissionRateField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["reserve1"] = encoding_cast(a.reserve1); d["ExchangeID"] = encoding_cast(a.ExchangeID); d["InvestUnitID"] = encoding_cast(a.InvestUnitID); d["InstrumentID"] = encoding_cast(a.InstrumentID); return d;});

	py::class_<CThostFtdcQryInstrumentTradingRightField>(m, "CThostFtdcQryInstrumentTradingRightField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryInstrumentTradingRightField& a) {return CThostFtdcQryInstrumentTradingRightField(a);})
		.def_property("BrokerID", [](const CThostFtdcQryInstrumentTradingRightField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcQryInstrumentTradingRightField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcQryInstrumentTradingRightField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcQryInstrumentTradingRightField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_property("reserve1", [](const CThostFtdcQryInstrumentTradingRightField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcQryInstrumentTradingRightField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("InstrumentID", [](const CThostFtdcQryInstrumentTradingRightField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcQryInstrumentTradingRightField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def("to_dict", [](const CThostFtdcQryInstrumentTradingRightField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["reserve1"] = encoding_cast(a.reserve1); d["InstrumentID"] = encoding_cast(a.InstrumentID); return d;});

	py::class_<CThostFtdcQryBrokerField>(m, "CThostFtdcQryBrokerField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryBrokerField& a) {return CThostFtdcQryBrokerField(a);})
		.def_property("BrokerID", [](const CThostFtdcQryBrokerField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcQryBrokerField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def("to_dict", [](const CThostFtdcQryBrokerField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); return d;});

	py::class_<CThostFtdcQryTraderField>(m, "CThostFtdcQryTraderField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryTraderField& a) {return CThostFtdcQryTraderField(a);})
		.def_property("ExchangeID", [](const CThostFtdcQryTraderField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcQryTraderField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("ParticipantID", [](const CThostFtdcQryTraderField& a) {return encoding_cast(a.ParticipantID);}, [](CThostFtdcQryTraderField& a, char c[]) {strcpy(a.ParticipantID, c);})
		.def_property("TraderID", [](const CThostFtdcQryTraderField& a) {return encoding_cast(a.TraderID);}, [](CThostFtdcQryTraderField& a, char c[]) {strcpy(a.TraderID, c);})
		.def("to_dict", [](const CThostFtdcQryTraderField& a) {py::dict d; d["ExchangeID"] = encoding_cast(a.ExchangeID); d["ParticipantID"] = encoding_cast(a.ParticipantID); d["TraderID"] = encoding_cast(a.TraderID); return d;});

	py::class_<CThostFtdcQrySuperUserFunctionField>(m, "CThostFtdcQrySuperUserFunctionField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQrySuperUserFunctionField& a) {return CThostFtdcQrySuperUserFunctionField(a);})
		.def_property("UserID", [](const CThostFtdcQrySuperUserFunctionField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcQrySuperUserFunctionField& a, char c[]) {strcpy(a.UserID, c);})
		.def("to_dict", [](const CThostFtdcQrySuperUserFunctionField& a) {py::dict d; d["UserID"] = encoding_cast(a.UserID); return d;});

	py::class_<CThostFtdcQryUserSessionField>(m, "CThostFtdcQryUserSessionField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryUserSessionField& a) {return CThostFtdcQryUserSessionField(a);})
		.def_readwrite("FrontID", &CThostFtdcQryUserSessionField::FrontID)
		.def_readwrite("SessionID", &CThostFtdcQryUserSessionField::SessionID)
		.def_property("BrokerID", [](const CThostFtdcQryUserSessionField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcQryUserSessionField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("UserID", [](const CThostFtdcQryUserSessionField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcQryUserSessionField& a, char c[]) {strcpy(a.UserID, c);})
		.def("to_dict", [](const CThostFtdcQryUserSessionField& a) {py::dict d; d["FrontID"] = a.FrontID; d["SessionID"] = a.SessionID; d["BrokerID"] = encoding_cast(a.BrokerID); d["UserID"] = encoding_cast(a.UserID); return d;});

	py::class_<CThostFtdcQryPartBrokerField>(m, "CThostFtdcQryPartBrokerField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryPartBrokerField& a) {return CThostFtdcQryPartBrokerField(a);})
		.def_property("ExchangeID", [](const CThostFtdcQryPartBrokerField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcQryPartBrokerField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("BrokerID", [](const CThostFtdcQryPartBrokerField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcQryPartBrokerField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("ParticipantID", [](const CThostFtdcQryPartBrokerField& a) {return encoding_cast(a.ParticipantID);}, [](CThostFtdcQryPartBrokerField& a, char c[]) {strcpy(a.ParticipantID, c);})
		.def("to_dict", [](const CThostFtdcQryPartBrokerField& a) {py::dict d; d["ExchangeID"] = encoding_cast(a.ExchangeID); d["BrokerID"] = encoding_cast(a.BrokerID); d["ParticipantID"] = encoding_cast(a.ParticipantID); return d;});

	py::class_<CThostFtdcQryFrontStatusField>(m, "CThostFtdcQryFrontStatusField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryFrontStatusField& a) {return CThostFtdcQryFrontStatusField(a);})
		.def_readwrite("FrontID", &CThostFtdcQryFrontStatusField::FrontID)
		.def("to_dict", [](const CThostFtdcQryFrontStatusField& a) {py::dict d; d["FrontID"] = a.FrontID; return d;});

	py::class_<CThostFtdcQryExchangeOrderField>(m, "CThostFtdcQryExchangeOrderField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryExchangeOrderField& a) {return CThostFtdcQryExchangeOrderField(a);})
		.def_property("ParticipantID", [](const CThostFtdcQryExchangeOrderField& a) {return encoding_cast(a.ParticipantID);}, [](CThostFtdcQryExchangeOrderField& a, char c[]) {strcpy(a.ParticipantID, c);})
		.def_property("ClientID", [](const CThostFtdcQryExchangeOrderField& a) {return encoding_cast(a.ClientID);}, [](CThostFtdcQryExchangeOrderField& a, char c[]) {strcpy(a.ClientID, c);})
		.def_property("reserve1", [](const CThostFtdcQryExchangeOrderField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcQryExchangeOrderField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("ExchangeID", [](const CThostFtdcQryExchangeOrderField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcQryExchangeOrderField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("TraderID", [](const CThostFtdcQryExchangeOrderField& a) {return encoding_cast(a.TraderID);}, [](CThostFtdcQryExchangeOrderField& a, char c[]) {strcpy(a.TraderID, c);})
		.def_property("ExchangeInstID", [](const CThostFtdcQryExchangeOrderField& a) {return encoding_cast(a.ExchangeInstID);}, [](CThostFtdcQryExchangeOrderField& a, char c[]) {strcpy(a.ExchangeInstID, c);})
		.def("to_dict", [](const CThostFtdcQryExchangeOrderField& a) {py::dict d; d["ParticipantID"] = encoding_cast(a.ParticipantID); d["ClientID"] = encoding_cast(a.ClientID); d["reserve1"] = encoding_cast(a.reserve1); d["ExchangeID"] = encoding_cast(a.ExchangeID); d["TraderID"] = encoding_cast(a.TraderID); d["ExchangeInstID"] = encoding_cast(a.ExchangeInstID); return d;});

	py::class_<CThostFtdcQryOrderActionField>(m, "CThostFtdcQryOrderActionField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryOrderActionField& a) {return CThostFtdcQryOrderActionField(a);})
		.def_property("BrokerID", [](const CThostFtdcQryOrderActionField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcQryOrderActionField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcQryOrderActionField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcQryOrderActionField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_property("ExchangeID", [](const CThostFtdcQryOrderActionField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcQryOrderActionField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def("to_dict", [](const CThostFtdcQryOrderActionField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["ExchangeID"] = encoding_cast(a.ExchangeID); return d;});

	py::class_<CThostFtdcQryExchangeOrderActionField>(m, "CThostFtdcQryExchangeOrderActionField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryExchangeOrderActionField& a) {return CThostFtdcQryExchangeOrderActionField(a);})
		.def_property("ParticipantID", [](const CThostFtdcQryExchangeOrderActionField& a) {return encoding_cast(a.ParticipantID);}, [](CThostFtdcQryExchangeOrderActionField& a, char c[]) {strcpy(a.ParticipantID, c);})
		.def_property("ClientID", [](const CThostFtdcQryExchangeOrderActionField& a) {return encoding_cast(a.ClientID);}, [](CThostFtdcQryExchangeOrderActionField& a, char c[]) {strcpy(a.ClientID, c);})
		.def_property("ExchangeID", [](const CThostFtdcQryExchangeOrderActionField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcQryExchangeOrderActionField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("TraderID", [](const CThostFtdcQryExchangeOrderActionField& a) {return encoding_cast(a.TraderID);}, [](CThostFtdcQryExchangeOrderActionField& a, char c[]) {strcpy(a.TraderID, c);})
		.def("to_dict", [](const CThostFtdcQryExchangeOrderActionField& a) {py::dict d; d["ParticipantID"] = encoding_cast(a.ParticipantID); d["ClientID"] = encoding_cast(a.ClientID); d["ExchangeID"] = encoding_cast(a.ExchangeID); d["TraderID"] = encoding_cast(a.TraderID); return d;});

	py::class_<CThostFtdcQrySuperUserField>(m, "CThostFtdcQrySuperUserField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQrySuperUserField& a) {return CThostFtdcQrySuperUserField(a);})
		.def_property("UserID", [](const CThostFtdcQrySuperUserField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcQrySuperUserField& a, char c[]) {strcpy(a.UserID, c);})
		.def("to_dict", [](const CThostFtdcQrySuperUserField& a) {py::dict d; d["UserID"] = encoding_cast(a.UserID); return d;});

	py::class_<CThostFtdcQryExchangeField>(m, "CThostFtdcQryExchangeField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryExchangeField& a) {return CThostFtdcQryExchangeField(a);})
		.def_property("ExchangeID", [](const CThostFtdcQryExchangeField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcQryExchangeField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def("to_dict", [](const CThostFtdcQryExchangeField& a) {py::dict d; d["ExchangeID"] = encoding_cast(a.ExchangeID); return d;});

	py::class_<CThostFtdcQryProductField>(m, "CThostFtdcQryProductField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryProductField& a) {return CThostFtdcQryProductField(a);})
		.def_property("reserve1", [](const CThostFtdcQryProductField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcQryProductField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_readwrite("ProductClass", &CThostFtdcQryProductField::ProductClass)
		.def_property("ExchangeID", [](const CThostFtdcQryProductField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcQryProductField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("ProductID", [](const CThostFtdcQryProductField& a) {return encoding_cast(a.ProductID);}, [](CThostFtdcQryProductField& a, char c[]) {strcpy(a.ProductID, c);})
		.def("to_dict", [](const CThostFtdcQryProductField& a) {py::dict d; d["reserve1"] = encoding_cast(a.reserve1); d["ProductClass"] = a.ProductClass; d["ExchangeID"] = encoding_cast(a.ExchangeID); d["ProductID"] = encoding_cast(a.ProductID); return d;});

	py::class_<CThostFtdcQryInstrumentField>(m, "CThostFtdcQryInstrumentField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryInstrumentField& a) {return CThostFtdcQryInstrumentField(a);})
		.def_property("reserve1", [](const CThostFtdcQryInstrumentField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcQryInstrumentField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("ExchangeID", [](const CThostFtdcQryInstrumentField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcQryInstrumentField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("reserve2", [](const CThostFtdcQryInstrumentField& a) {return encoding_cast(a.reserve2);}, [](CThostFtdcQryInstrumentField& a, char c[]) {strcpy(a.reserve2, c);})
		.def_property("reserve3", [](const CThostFtdcQryInstrumentField& a) {return encoding_cast(a.reserve3);}, [](CThostFtdcQryInstrumentField& a, char c[]) {strcpy(a.reserve3, c);})
		.def_property("InstrumentID", [](const CThostFtdcQryInstrumentField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcQryInstrumentField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def_property("ExchangeInstID", [](const CThostFtdcQryInstrumentField& a) {return encoding_cast(a.ExchangeInstID);}, [](CThostFtdcQryInstrumentField& a, char c[]) {strcpy(a.ExchangeInstID, c);})
		.def_property("ProductID", [](const CThostFtdcQryInstrumentField& a) {return encoding_cast(a.ProductID);}, [](CThostFtdcQryInstrumentField& a, char c[]) {strcpy(a.ProductID, c);})
		.def("to_dict", [](const CThostFtdcQryInstrumentField& a) {py::dict d; d["reserve1"] = encoding_cast(a.reserve1); d["ExchangeID"] = encoding_cast(a.ExchangeID); d["reserve2"] = encoding_cast(a.reserve2); d["reserve3"] = encoding_cast(a.reserve3); d["InstrumentID"] = encoding_cast(a.InstrumentID); d["ExchangeInstID"] = encoding_cast(a.ExchangeInstID); d["ProductID"] = encoding_cast(a.ProductID); return d;});

	py::class_<CThostFtdcQryDepthMarketDataField>(m, "CThostFtdcQryDepthMarketDataField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryDepthMarketDataField& a) {return CThostFtdcQryDepthMarketDataField(a);})
		.def_property("reserve1", [](const CThostFtdcQryDepthMarketDataField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcQryDepthMarketDataField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("ExchangeID", [](const CThostFtdcQryDepthMarketDataField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcQryDepthMarketDataField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("InstrumentID", [](const CThostFtdcQryDepthMarketDataField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcQryDepthMarketDataField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def("to_dict", [](const CThostFtdcQryDepthMarketDataField& a) {py::dict d; d["reserve1"] = encoding_cast(a.reserve1); d["ExchangeID"] = encoding_cast(a.ExchangeID); d["InstrumentID"] = encoding_cast(a.InstrumentID); return d;});

	py::class_<CThostFtdcQryBrokerUserField>(m, "CThostFtdcQryBrokerUserField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryBrokerUserField& a) {return CThostFtdcQryBrokerUserField(a);})
		.def_property("BrokerID", [](const CThostFtdcQryBrokerUserField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcQryBrokerUserField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("UserID", [](const CThostFtdcQryBrokerUserField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcQryBrokerUserField& a, char c[]) {strcpy(a.UserID, c);})
		.def("to_dict", [](const CThostFtdcQryBrokerUserField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["UserID"] = encoding_cast(a.UserID); return d;});

	py::class_<CThostFtdcQryBrokerUserFunctionField>(m, "CThostFtdcQryBrokerUserFunctionField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryBrokerUserFunctionField& a) {return CThostFtdcQryBrokerUserFunctionField(a);})
		.def_property("BrokerID", [](const CThostFtdcQryBrokerUserFunctionField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcQryBrokerUserFunctionField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("UserID", [](const CThostFtdcQryBrokerUserFunctionField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcQryBrokerUserFunctionField& a, char c[]) {strcpy(a.UserID, c);})
		.def("to_dict", [](const CThostFtdcQryBrokerUserFunctionField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["UserID"] = encoding_cast(a.UserID); return d;});

	py::class_<CThostFtdcQryTraderOfferField>(m, "CThostFtdcQryTraderOfferField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryTraderOfferField& a) {return CThostFtdcQryTraderOfferField(a);})
		.def_property("ExchangeID", [](const CThostFtdcQryTraderOfferField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcQryTraderOfferField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("ParticipantID", [](const CThostFtdcQryTraderOfferField& a) {return encoding_cast(a.ParticipantID);}, [](CThostFtdcQryTraderOfferField& a, char c[]) {strcpy(a.ParticipantID, c);})
		.def_property("TraderID", [](const CThostFtdcQryTraderOfferField& a) {return encoding_cast(a.TraderID);}, [](CThostFtdcQryTraderOfferField& a, char c[]) {strcpy(a.TraderID, c);})
		.def("to_dict", [](const CThostFtdcQryTraderOfferField& a) {py::dict d; d["ExchangeID"] = encoding_cast(a.ExchangeID); d["ParticipantID"] = encoding_cast(a.ParticipantID); d["TraderID"] = encoding_cast(a.TraderID); return d;});

	py::class_<CThostFtdcQrySyncDepositField>(m, "CThostFtdcQrySyncDepositField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQrySyncDepositField& a) {return CThostFtdcQrySyncDepositField(a);})
		.def_property("BrokerID", [](const CThostFtdcQrySyncDepositField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcQrySyncDepositField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("DepositSeqNo", [](const CThostFtdcQrySyncDepositField& a) {return encoding_cast(a.DepositSeqNo);}, [](CThostFtdcQrySyncDepositField& a, char c[]) {strcpy(a.DepositSeqNo, c);})
		.def("to_dict", [](const CThostFtdcQrySyncDepositField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["DepositSeqNo"] = encoding_cast(a.DepositSeqNo); return d;});

	py::class_<CThostFtdcQrySettlementInfoField>(m, "CThostFtdcQrySettlementInfoField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQrySettlementInfoField& a) {return CThostFtdcQrySettlementInfoField(a);})
		.def_property("BrokerID", [](const CThostFtdcQrySettlementInfoField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcQrySettlementInfoField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcQrySettlementInfoField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcQrySettlementInfoField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_property("TradingDay", [](const CThostFtdcQrySettlementInfoField& a) {return encoding_cast(a.TradingDay);}, [](CThostFtdcQrySettlementInfoField& a, char c[]) {strcpy(a.TradingDay, c);})
		.def_property("AccountID", [](const CThostFtdcQrySettlementInfoField& a) {return encoding_cast(a.AccountID);}, [](CThostFtdcQrySettlementInfoField& a, char c[]) {strcpy(a.AccountID, c);})
		.def_property("CurrencyID", [](const CThostFtdcQrySettlementInfoField& a) {return encoding_cast(a.CurrencyID);}, [](CThostFtdcQrySettlementInfoField& a, char c[]) {strcpy(a.CurrencyID, c);})
		.def("to_dict", [](const CThostFtdcQrySettlementInfoField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["TradingDay"] = encoding_cast(a.TradingDay); d["AccountID"] = encoding_cast(a.AccountID); d["CurrencyID"] = encoding_cast(a.CurrencyID); return d;});

	py::class_<CThostFtdcQryExchangeMarginRateField>(m, "CThostFtdcQryExchangeMarginRateField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryExchangeMarginRateField& a) {return CThostFtdcQryExchangeMarginRateField(a);})
		.def_property("BrokerID", [](const CThostFtdcQryExchangeMarginRateField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcQryExchangeMarginRateField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("reserve1", [](const CThostFtdcQryExchangeMarginRateField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcQryExchangeMarginRateField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_readwrite("HedgeFlag", &CThostFtdcQryExchangeMarginRateField::HedgeFlag)
		.def_property("ExchangeID", [](const CThostFtdcQryExchangeMarginRateField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcQryExchangeMarginRateField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("InstrumentID", [](const CThostFtdcQryExchangeMarginRateField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcQryExchangeMarginRateField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def("to_dict", [](const CThostFtdcQryExchangeMarginRateField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["reserve1"] = encoding_cast(a.reserve1); d["HedgeFlag"] = a.HedgeFlag; d["ExchangeID"] = encoding_cast(a.ExchangeID); d["InstrumentID"] = encoding_cast(a.InstrumentID); return d;});

	py::class_<CThostFtdcQryExchangeMarginRateAdjustField>(m, "CThostFtdcQryExchangeMarginRateAdjustField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryExchangeMarginRateAdjustField& a) {return CThostFtdcQryExchangeMarginRateAdjustField(a);})
		.def_property("BrokerID", [](const CThostFtdcQryExchangeMarginRateAdjustField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcQryExchangeMarginRateAdjustField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("reserve1", [](const CThostFtdcQryExchangeMarginRateAdjustField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcQryExchangeMarginRateAdjustField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_readwrite("HedgeFlag", &CThostFtdcQryExchangeMarginRateAdjustField::HedgeFlag)
		.def_property("InstrumentID", [](const CThostFtdcQryExchangeMarginRateAdjustField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcQryExchangeMarginRateAdjustField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def("to_dict", [](const CThostFtdcQryExchangeMarginRateAdjustField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["reserve1"] = encoding_cast(a.reserve1); d["HedgeFlag"] = a.HedgeFlag; d["InstrumentID"] = encoding_cast(a.InstrumentID); return d;});

	py::class_<CThostFtdcQryExchangeRateField>(m, "CThostFtdcQryExchangeRateField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryExchangeRateField& a) {return CThostFtdcQryExchangeRateField(a);})
		.def_property("BrokerID", [](const CThostFtdcQryExchangeRateField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcQryExchangeRateField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("FromCurrencyID", [](const CThostFtdcQryExchangeRateField& a) {return encoding_cast(a.FromCurrencyID);}, [](CThostFtdcQryExchangeRateField& a, char c[]) {strcpy(a.FromCurrencyID, c);})
		.def_property("ToCurrencyID", [](const CThostFtdcQryExchangeRateField& a) {return encoding_cast(a.ToCurrencyID);}, [](CThostFtdcQryExchangeRateField& a, char c[]) {strcpy(a.ToCurrencyID, c);})
		.def("to_dict", [](const CThostFtdcQryExchangeRateField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["FromCurrencyID"] = encoding_cast(a.FromCurrencyID); d["ToCurrencyID"] = encoding_cast(a.ToCurrencyID); return d;});

	py::class_<CThostFtdcQrySyncFundMortgageField>(m, "CThostFtdcQrySyncFundMortgageField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQrySyncFundMortgageField& a) {return CThostFtdcQrySyncFundMortgageField(a);})
		.def_property("BrokerID", [](const CThostFtdcQrySyncFundMortgageField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcQrySyncFundMortgageField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("MortgageSeqNo", [](const CThostFtdcQrySyncFundMortgageField& a) {return encoding_cast(a.MortgageSeqNo);}, [](CThostFtdcQrySyncFundMortgageField& a, char c[]) {strcpy(a.MortgageSeqNo, c);})
		.def("to_dict", [](const CThostFtdcQrySyncFundMortgageField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["MortgageSeqNo"] = encoding_cast(a.MortgageSeqNo); return d;});

	py::class_<CThostFtdcQryHisOrderField>(m, "CThostFtdcQryHisOrderField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryHisOrderField& a) {return CThostFtdcQryHisOrderField(a);})
		.def_property("BrokerID", [](const CThostFtdcQryHisOrderField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcQryHisOrderField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcQryHisOrderField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcQryHisOrderField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_property("reserve1", [](const CThostFtdcQryHisOrderField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcQryHisOrderField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("ExchangeID", [](const CThostFtdcQryHisOrderField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcQryHisOrderField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("OrderSysID", [](const CThostFtdcQryHisOrderField& a) {return encoding_cast(a.OrderSysID);}, [](CThostFtdcQryHisOrderField& a, char c[]) {strcpy(a.OrderSysID, c);})
		.def_property("InsertTimeStart", [](const CThostFtdcQryHisOrderField& a) {return encoding_cast(a.InsertTimeStart);}, [](CThostFtdcQryHisOrderField& a, char c[]) {strcpy(a.InsertTimeStart, c);})
		.def_property("InsertTimeEnd", [](const CThostFtdcQryHisOrderField& a) {return encoding_cast(a.InsertTimeEnd);}, [](CThostFtdcQryHisOrderField& a, char c[]) {strcpy(a.InsertTimeEnd, c);})
		.def_property("TradingDay", [](const CThostFtdcQryHisOrderField& a) {return encoding_cast(a.TradingDay);}, [](CThostFtdcQryHisOrderField& a, char c[]) {strcpy(a.TradingDay, c);})
		.def_readwrite("SettlementID", &CThostFtdcQryHisOrderField::SettlementID)
		.def_property("InstrumentID", [](const CThostFtdcQryHisOrderField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcQryHisOrderField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def("to_dict", [](const CThostFtdcQryHisOrderField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["reserve1"] = encoding_cast(a.reserve1); d["ExchangeID"] = encoding_cast(a.ExchangeID); d["OrderSysID"] = encoding_cast(a.OrderSysID); d["InsertTimeStart"] = encoding_cast(a.InsertTimeStart); d["InsertTimeEnd"] = encoding_cast(a.InsertTimeEnd); d["TradingDay"] = encoding_cast(a.TradingDay); d["SettlementID"] = a.SettlementID; d["InstrumentID"] = encoding_cast(a.InstrumentID); return d;});

	py::class_<CThostFtdcOptionInstrMiniMarginField>(m, "CThostFtdcOptionInstrMiniMarginField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcOptionInstrMiniMarginField& a) {return CThostFtdcOptionInstrMiniMarginField(a);})
		.def_property("reserve1", [](const CThostFtdcOptionInstrMiniMarginField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcOptionInstrMiniMarginField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_readwrite("InvestorRange", &CThostFtdcOptionInstrMiniMarginField::InvestorRange)
		.def_property("BrokerID", [](const CThostFtdcOptionInstrMiniMarginField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcOptionInstrMiniMarginField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcOptionInstrMiniMarginField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcOptionInstrMiniMarginField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_readwrite("MinMargin", &CThostFtdcOptionInstrMiniMarginField::MinMargin)
		.def_readwrite("ValueMethod", &CThostFtdcOptionInstrMiniMarginField::ValueMethod)
		.def_readwrite("IsRelative", &CThostFtdcOptionInstrMiniMarginField::IsRelative)
		.def_property("InstrumentID", [](const CThostFtdcOptionInstrMiniMarginField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcOptionInstrMiniMarginField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def("to_dict", [](const CThostFtdcOptionInstrMiniMarginField& a) {py::dict d; d["reserve1"] = encoding_cast(a.reserve1); d["InvestorRange"] = a.InvestorRange; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["MinMargin"] = a.MinMargin; d["ValueMethod"] = a.ValueMethod; d["IsRelative"] = a.IsRelative; d["InstrumentID"] = encoding_cast(a.InstrumentID); return d;});

	py::class_<CThostFtdcOptionInstrMarginAdjustField>(m, "CThostFtdcOptionInstrMarginAdjustField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcOptionInstrMarginAdjustField& a) {return CThostFtdcOptionInstrMarginAdjustField(a);})
		.def_property("reserve1", [](const CThostFtdcOptionInstrMarginAdjustField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcOptionInstrMarginAdjustField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_readwrite("InvestorRange", &CThostFtdcOptionInstrMarginAdjustField::InvestorRange)
		.def_property("BrokerID", [](const CThostFtdcOptionInstrMarginAdjustField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcOptionInstrMarginAdjustField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcOptionInstrMarginAdjustField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcOptionInstrMarginAdjustField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_readwrite("SShortMarginRatioByMoney", &CThostFtdcOptionInstrMarginAdjustField::SShortMarginRatioByMoney)
		.def_readwrite("SShortMarginRatioByVolume", &CThostFtdcOptionInstrMarginAdjustField::SShortMarginRatioByVolume)
		.def_readwrite("HShortMarginRatioByMoney", &CThostFtdcOptionInstrMarginAdjustField::HShortMarginRatioByMoney)
		.def_readwrite("HShortMarginRatioByVolume", &CThostFtdcOptionInstrMarginAdjustField::HShortMarginRatioByVolume)
		.def_readwrite("AShortMarginRatioByMoney", &CThostFtdcOptionInstrMarginAdjustField::AShortMarginRatioByMoney)
		.def_readwrite("AShortMarginRatioByVolume", &CThostFtdcOptionInstrMarginAdjustField::AShortMarginRatioByVolume)
		.def_readwrite("IsRelative", &CThostFtdcOptionInstrMarginAdjustField::IsRelative)
		.def_readwrite("MShortMarginRatioByMoney", &CThostFtdcOptionInstrMarginAdjustField::MShortMarginRatioByMoney)
		.def_readwrite("MShortMarginRatioByVolume", &CThostFtdcOptionInstrMarginAdjustField::MShortMarginRatioByVolume)
		.def_property("InstrumentID", [](const CThostFtdcOptionInstrMarginAdjustField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcOptionInstrMarginAdjustField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def("to_dict", [](const CThostFtdcOptionInstrMarginAdjustField& a) {py::dict d; d["reserve1"] = encoding_cast(a.reserve1); d["InvestorRange"] = a.InvestorRange; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["SShortMarginRatioByMoney"] = a.SShortMarginRatioByMoney; d["SShortMarginRatioByVolume"] = a.SShortMarginRatioByVolume; d["HShortMarginRatioByMoney"] = a.HShortMarginRatioByMoney; d["HShortMarginRatioByVolume"] = a.HShortMarginRatioByVolume; d["AShortMarginRatioByMoney"] = a.AShortMarginRatioByMoney; d["AShortMarginRatioByVolume"] = a.AShortMarginRatioByVolume; d["IsRelative"] = a.IsRelative; d["MShortMarginRatioByMoney"] = a.MShortMarginRatioByMoney; d["MShortMarginRatioByVolume"] = a.MShortMarginRatioByVolume; d["InstrumentID"] = encoding_cast(a.InstrumentID); return d;});

	py::class_<CThostFtdcOptionInstrCommRateField>(m, "CThostFtdcOptionInstrCommRateField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcOptionInstrCommRateField& a) {return CThostFtdcOptionInstrCommRateField(a);})
		.def_property("reserve1", [](const CThostFtdcOptionInstrCommRateField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcOptionInstrCommRateField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_readwrite("InvestorRange", &CThostFtdcOptionInstrCommRateField::InvestorRange)
		.def_property("BrokerID", [](const CThostFtdcOptionInstrCommRateField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcOptionInstrCommRateField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcOptionInstrCommRateField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcOptionInstrCommRateField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_readwrite("OpenRatioByMoney", &CThostFtdcOptionInstrCommRateField::OpenRatioByMoney)
		.def_readwrite("OpenRatioByVolume", &CThostFtdcOptionInstrCommRateField::OpenRatioByVolume)
		.def_readwrite("CloseRatioByMoney", &CThostFtdcOptionInstrCommRateField::CloseRatioByMoney)
		.def_readwrite("CloseRatioByVolume", &CThostFtdcOptionInstrCommRateField::CloseRatioByVolume)
		.def_readwrite("CloseTodayRatioByMoney", &CThostFtdcOptionInstrCommRateField::CloseTodayRatioByMoney)
		.def_readwrite("CloseTodayRatioByVolume", &CThostFtdcOptionInstrCommRateField::CloseTodayRatioByVolume)
		.def_readwrite("StrikeRatioByMoney", &CThostFtdcOptionInstrCommRateField::StrikeRatioByMoney)
		.def_readwrite("StrikeRatioByVolume", &CThostFtdcOptionInstrCommRateField::StrikeRatioByVolume)
		.def_property("ExchangeID", [](const CThostFtdcOptionInstrCommRateField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcOptionInstrCommRateField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("InvestUnitID", [](const CThostFtdcOptionInstrCommRateField& a) {return encoding_cast(a.InvestUnitID);}, [](CThostFtdcOptionInstrCommRateField& a, char c[]) {strcpy(a.InvestUnitID, c);})
		.def_property("InstrumentID", [](const CThostFtdcOptionInstrCommRateField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcOptionInstrCommRateField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def("to_dict", [](const CThostFtdcOptionInstrCommRateField& a) {py::dict d; d["reserve1"] = encoding_cast(a.reserve1); d["InvestorRange"] = a.InvestorRange; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["OpenRatioByMoney"] = a.OpenRatioByMoney; d["OpenRatioByVolume"] = a.OpenRatioByVolume; d["CloseRatioByMoney"] = a.CloseRatioByMoney; d["CloseRatioByVolume"] = a.CloseRatioByVolume; d["CloseTodayRatioByMoney"] = a.CloseTodayRatioByMoney; d["CloseTodayRatioByVolume"] = a.CloseTodayRatioByVolume; d["StrikeRatioByMoney"] = a.StrikeRatioByMoney; d["StrikeRatioByVolume"] = a.StrikeRatioByVolume; d["ExchangeID"] = encoding_cast(a.ExchangeID); d["InvestUnitID"] = encoding_cast(a.InvestUnitID); d["InstrumentID"] = encoding_cast(a.InstrumentID); return d;});

	py::class_<CThostFtdcOptionInstrTradeCostField>(m, "CThostFtdcOptionInstrTradeCostField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcOptionInstrTradeCostField& a) {return CThostFtdcOptionInstrTradeCostField(a);})
		.def_property("BrokerID", [](const CThostFtdcOptionInstrTradeCostField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcOptionInstrTradeCostField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcOptionInstrTradeCostField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcOptionInstrTradeCostField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_property("reserve1", [](const CThostFtdcOptionInstrTradeCostField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcOptionInstrTradeCostField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_readwrite("HedgeFlag", &CThostFtdcOptionInstrTradeCostField::HedgeFlag)
		.def_readwrite("FixedMargin", &CThostFtdcOptionInstrTradeCostField::FixedMargin)
		.def_readwrite("MiniMargin", &CThostFtdcOptionInstrTradeCostField::MiniMargin)
		.def_readwrite("Royalty", &CThostFtdcOptionInstrTradeCostField::Royalty)
		.def_readwrite("ExchFixedMargin", &CThostFtdcOptionInstrTradeCostField::ExchFixedMargin)
		.def_readwrite("ExchMiniMargin", &CThostFtdcOptionInstrTradeCostField::ExchMiniMargin)
		.def_property("ExchangeID", [](const CThostFtdcOptionInstrTradeCostField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcOptionInstrTradeCostField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("InvestUnitID", [](const CThostFtdcOptionInstrTradeCostField& a) {return encoding_cast(a.InvestUnitID);}, [](CThostFtdcOptionInstrTradeCostField& a, char c[]) {strcpy(a.InvestUnitID, c);})
		.def_property("InstrumentID", [](const CThostFtdcOptionInstrTradeCostField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcOptionInstrTradeCostField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def("to_dict", [](const CThostFtdcOptionInstrTradeCostField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["reserve1"] = encoding_cast(a.reserve1); d["HedgeFlag"] = a.HedgeFlag; d["FixedMargin"] = a.FixedMargin; d["MiniMargin"] = a.MiniMargin; d["Royalty"] = a.Royalty; d["ExchFixedMargin"] = a.ExchFixedMargin; d["ExchMiniMargin"] = a.ExchMiniMargin; d["ExchangeID"] = encoding_cast(a.ExchangeID); d["InvestUnitID"] = encoding_cast(a.InvestUnitID); d["InstrumentID"] = encoding_cast(a.InstrumentID); return d;});

	py::class_<CThostFtdcQryOptionInstrTradeCostField>(m, "CThostFtdcQryOptionInstrTradeCostField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryOptionInstrTradeCostField& a) {return CThostFtdcQryOptionInstrTradeCostField(a);})
		.def_property("BrokerID", [](const CThostFtdcQryOptionInstrTradeCostField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcQryOptionInstrTradeCostField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcQryOptionInstrTradeCostField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcQryOptionInstrTradeCostField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_property("reserve1", [](const CThostFtdcQryOptionInstrTradeCostField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcQryOptionInstrTradeCostField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_readwrite("HedgeFlag", &CThostFtdcQryOptionInstrTradeCostField::HedgeFlag)
		.def_readwrite("InputPrice", &CThostFtdcQryOptionInstrTradeCostField::InputPrice)
		.def_readwrite("UnderlyingPrice", &CThostFtdcQryOptionInstrTradeCostField::UnderlyingPrice)
		.def_property("ExchangeID", [](const CThostFtdcQryOptionInstrTradeCostField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcQryOptionInstrTradeCostField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("InvestUnitID", [](const CThostFtdcQryOptionInstrTradeCostField& a) {return encoding_cast(a.InvestUnitID);}, [](CThostFtdcQryOptionInstrTradeCostField& a, char c[]) {strcpy(a.InvestUnitID, c);})
		.def_property("InstrumentID", [](const CThostFtdcQryOptionInstrTradeCostField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcQryOptionInstrTradeCostField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def("to_dict", [](const CThostFtdcQryOptionInstrTradeCostField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["reserve1"] = encoding_cast(a.reserve1); d["HedgeFlag"] = a.HedgeFlag; d["InputPrice"] = a.InputPrice; d["UnderlyingPrice"] = a.UnderlyingPrice; d["ExchangeID"] = encoding_cast(a.ExchangeID); d["InvestUnitID"] = encoding_cast(a.InvestUnitID); d["InstrumentID"] = encoding_cast(a.InstrumentID); return d;});

	py::class_<CThostFtdcQryOptionInstrCommRateField>(m, "CThostFtdcQryOptionInstrCommRateField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryOptionInstrCommRateField& a) {return CThostFtdcQryOptionInstrCommRateField(a);})
		.def_property("BrokerID", [](const CThostFtdcQryOptionInstrCommRateField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcQryOptionInstrCommRateField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcQryOptionInstrCommRateField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcQryOptionInstrCommRateField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_property("reserve1", [](const CThostFtdcQryOptionInstrCommRateField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcQryOptionInstrCommRateField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("ExchangeID", [](const CThostFtdcQryOptionInstrCommRateField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcQryOptionInstrCommRateField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("InvestUnitID", [](const CThostFtdcQryOptionInstrCommRateField& a) {return encoding_cast(a.InvestUnitID);}, [](CThostFtdcQryOptionInstrCommRateField& a, char c[]) {strcpy(a.InvestUnitID, c);})
		.def_property("InstrumentID", [](const CThostFtdcQryOptionInstrCommRateField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcQryOptionInstrCommRateField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def("to_dict", [](const CThostFtdcQryOptionInstrCommRateField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["reserve1"] = encoding_cast(a.reserve1); d["ExchangeID"] = encoding_cast(a.ExchangeID); d["InvestUnitID"] = encoding_cast(a.InvestUnitID); d["InstrumentID"] = encoding_cast(a.InstrumentID); return d;});

	py::class_<CThostFtdcIndexPriceField>(m, "CThostFtdcIndexPriceField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcIndexPriceField& a) {return CThostFtdcIndexPriceField(a);})
		.def_property("BrokerID", [](const CThostFtdcIndexPriceField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcIndexPriceField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("reserve1", [](const CThostFtdcIndexPriceField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcIndexPriceField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_readwrite("ClosePrice", &CThostFtdcIndexPriceField::ClosePrice)
		.def_property("InstrumentID", [](const CThostFtdcIndexPriceField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcIndexPriceField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def("to_dict", [](const CThostFtdcIndexPriceField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["reserve1"] = encoding_cast(a.reserve1); d["ClosePrice"] = a.ClosePrice; d["InstrumentID"] = encoding_cast(a.InstrumentID); return d;});

	py::class_<CThostFtdcInputExecOrderField>(m, "CThostFtdcInputExecOrderField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcInputExecOrderField& a) {return CThostFtdcInputExecOrderField(a);})
		.def_property("BrokerID", [](const CThostFtdcInputExecOrderField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcInputExecOrderField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcInputExecOrderField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcInputExecOrderField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_property("reserve1", [](const CThostFtdcInputExecOrderField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcInputExecOrderField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("ExecOrderRef", [](const CThostFtdcInputExecOrderField& a) {return encoding_cast(a.ExecOrderRef);}, [](CThostFtdcInputExecOrderField& a, char c[]) {strcpy(a.ExecOrderRef, c);})
		.def_property("UserID", [](const CThostFtdcInputExecOrderField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcInputExecOrderField& a, char c[]) {strcpy(a.UserID, c);})
		.def_readwrite("Volume", &CThostFtdcInputExecOrderField::Volume)
		.def_readwrite("RequestID", &CThostFtdcInputExecOrderField::RequestID)
		.def_property("BusinessUnit", [](const CThostFtdcInputExecOrderField& a) {return encoding_cast(a.BusinessUnit);}, [](CThostFtdcInputExecOrderField& a, char c[]) {strcpy(a.BusinessUnit, c);})
		.def_readwrite("OffsetFlag", &CThostFtdcInputExecOrderField::OffsetFlag)
		.def_readwrite("HedgeFlag", &CThostFtdcInputExecOrderField::HedgeFlag)
		.def_readwrite("ActionType", &CThostFtdcInputExecOrderField::ActionType)
		.def_readwrite("PosiDirection", &CThostFtdcInputExecOrderField::PosiDirection)
		.def_readwrite("ReservePositionFlag", &CThostFtdcInputExecOrderField::ReservePositionFlag)
		.def_readwrite("CloseFlag", &CThostFtdcInputExecOrderField::CloseFlag)
		.def_property("ExchangeID", [](const CThostFtdcInputExecOrderField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcInputExecOrderField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("InvestUnitID", [](const CThostFtdcInputExecOrderField& a) {return encoding_cast(a.InvestUnitID);}, [](CThostFtdcInputExecOrderField& a, char c[]) {strcpy(a.InvestUnitID, c);})
		.def_property("AccountID", [](const CThostFtdcInputExecOrderField& a) {return encoding_cast(a.AccountID);}, [](CThostFtdcInputExecOrderField& a, char c[]) {strcpy(a.AccountID, c);})
		.def_property("CurrencyID", [](const CThostFtdcInputExecOrderField& a) {return encoding_cast(a.CurrencyID);}, [](CThostFtdcInputExecOrderField& a, char c[]) {strcpy(a.CurrencyID, c);})
		.def_property("ClientID", [](const CThostFtdcInputExecOrderField& a) {return encoding_cast(a.ClientID);}, [](CThostFtdcInputExecOrderField& a, char c[]) {strcpy(a.ClientID, c);})
		.def_property("reserve2", [](const CThostFtdcInputExecOrderField& a) {return encoding_cast(a.reserve2);}, [](CThostFtdcInputExecOrderField& a, char c[]) {strcpy(a.reserve2, c);})
		.def_property("MacAddress", [](const CThostFtdcInputExecOrderField& a) {return encoding_cast(a.MacAddress);}, [](CThostFtdcInputExecOrderField& a, char c[]) {strcpy(a.MacAddress, c);})
		.def_property("InstrumentID", [](const CThostFtdcInputExecOrderField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcInputExecOrderField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def_property("IPAddress", [](const CThostFtdcInputExecOrderField& a) {return encoding_cast(a.IPAddress);}, [](CThostFtdcInputExecOrderField& a, char c[]) {strcpy(a.IPAddress, c);})
		.def("to_dict", [](const CThostFtdcInputExecOrderField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["reserve1"] = encoding_cast(a.reserve1); d["ExecOrderRef"] = encoding_cast(a.ExecOrderRef); d["UserID"] = encoding_cast(a.UserID); d["Volume"] = a.Volume; d["RequestID"] = a.RequestID; d["BusinessUnit"] = encoding_cast(a.BusinessUnit); d["OffsetFlag"] = a.OffsetFlag; d["HedgeFlag"] = a.HedgeFlag; d["ActionType"] = a.ActionType; d["PosiDirection"] = a.PosiDirection; d["ReservePositionFlag"] = a.ReservePositionFlag; d["CloseFlag"] = a.CloseFlag; d["ExchangeID"] = encoding_cast(a.ExchangeID); d["InvestUnitID"] = encoding_cast(a.InvestUnitID); d["AccountID"] = encoding_cast(a.AccountID); d["CurrencyID"] = encoding_cast(a.CurrencyID); d["ClientID"] = encoding_cast(a.ClientID); d["reserve2"] = encoding_cast(a.reserve2); d["MacAddress"] = encoding_cast(a.MacAddress); d["InstrumentID"] = encoding_cast(a.InstrumentID); d["IPAddress"] = encoding_cast(a.IPAddress); return d;});

	py::class_<CThostFtdcInputExecOrderActionField>(m, "CThostFtdcInputExecOrderActionField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcInputExecOrderActionField& a) {return CThostFtdcInputExecOrderActionField(a);})
		.def_property("BrokerID", [](const CThostFtdcInputExecOrderActionField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcInputExecOrderActionField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcInputExecOrderActionField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcInputExecOrderActionField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_readwrite("ExecOrderActionRef", &CThostFtdcInputExecOrderActionField::ExecOrderActionRef)
		.def_property("ExecOrderRef", [](const CThostFtdcInputExecOrderActionField& a) {return encoding_cast(a.ExecOrderRef);}, [](CThostFtdcInputExecOrderActionField& a, char c[]) {strcpy(a.ExecOrderRef, c);})
		.def_readwrite("RequestID", &CThostFtdcInputExecOrderActionField::RequestID)
		.def_readwrite("FrontID", &CThostFtdcInputExecOrderActionField::FrontID)
		.def_readwrite("SessionID", &CThostFtdcInputExecOrderActionField::SessionID)
		.def_property("ExchangeID", [](const CThostFtdcInputExecOrderActionField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcInputExecOrderActionField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("ExecOrderSysID", [](const CThostFtdcInputExecOrderActionField& a) {return encoding_cast(a.ExecOrderSysID);}, [](CThostFtdcInputExecOrderActionField& a, char c[]) {strcpy(a.ExecOrderSysID, c);})
		.def_readwrite("ActionFlag", &CThostFtdcInputExecOrderActionField::ActionFlag)
		.def_property("UserID", [](const CThostFtdcInputExecOrderActionField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcInputExecOrderActionField& a, char c[]) {strcpy(a.UserID, c);})
		.def_property("reserve1", [](const CThostFtdcInputExecOrderActionField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcInputExecOrderActionField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("InvestUnitID", [](const CThostFtdcInputExecOrderActionField& a) {return encoding_cast(a.InvestUnitID);}, [](CThostFtdcInputExecOrderActionField& a, char c[]) {strcpy(a.InvestUnitID, c);})
		.def_property("reserve2", [](const CThostFtdcInputExecOrderActionField& a) {return encoding_cast(a.reserve2);}, [](CThostFtdcInputExecOrderActionField& a, char c[]) {strcpy(a.reserve2, c);})
		.def_property("MacAddress", [](const CThostFtdcInputExecOrderActionField& a) {return encoding_cast(a.MacAddress);}, [](CThostFtdcInputExecOrderActionField& a, char c[]) {strcpy(a.MacAddress, c);})
		.def_property("InstrumentID", [](const CThostFtdcInputExecOrderActionField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcInputExecOrderActionField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def_property("IPAddress", [](const CThostFtdcInputExecOrderActionField& a) {return encoding_cast(a.IPAddress);}, [](CThostFtdcInputExecOrderActionField& a, char c[]) {strcpy(a.IPAddress, c);})
		.def("to_dict", [](const CThostFtdcInputExecOrderActionField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["ExecOrderActionRef"] = a.ExecOrderActionRef; d["ExecOrderRef"] = encoding_cast(a.ExecOrderRef); d["RequestID"] = a.RequestID; d["FrontID"] = a.FrontID; d["SessionID"] = a.SessionID; d["ExchangeID"] = encoding_cast(a.ExchangeID); d["ExecOrderSysID"] = encoding_cast(a.ExecOrderSysID); d["ActionFlag"] = a.ActionFlag; d["UserID"] = encoding_cast(a.UserID); d["reserve1"] = encoding_cast(a.reserve1); d["InvestUnitID"] = encoding_cast(a.InvestUnitID); d["reserve2"] = encoding_cast(a.reserve2); d["MacAddress"] = encoding_cast(a.MacAddress); d["InstrumentID"] = encoding_cast(a.InstrumentID); d["IPAddress"] = encoding_cast(a.IPAddress); return d;});

	py::class_<CThostFtdcExecOrderField>(m, "CThostFtdcExecOrderField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcExecOrderField& a) {return CThostFtdcExecOrderField(a);})
		.def_property("BrokerID", [](const CThostFtdcExecOrderField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcExecOrderField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcExecOrderField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcExecOrderField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_property("reserve1", [](const CThostFtdcExecOrderField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcExecOrderField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("ExecOrderRef", [](const CThostFtdcExecOrderField& a) {return encoding_cast(a.ExecOrderRef);}, [](CThostFtdcExecOrderField& a, char c[]) {strcpy(a.ExecOrderRef, c);})
		.def_property("UserID", [](const CThostFtdcExecOrderField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcExecOrderField& a, char c[]) {strcpy(a.UserID, c);})
		.def_readwrite("Volume", &CThostFtdcExecOrderField::Volume)
		.def_readwrite("RequestID", &CThostFtdcExecOrderField::RequestID)
		.def_property("BusinessUnit", [](const CThostFtdcExecOrderField& a) {return encoding_cast(a.BusinessUnit);}, [](CThostFtdcExecOrderField& a, char c[]) {strcpy(a.BusinessUnit, c);})
		.def_readwrite("OffsetFlag", &CThostFtdcExecOrderField::OffsetFlag)
		.def_readwrite("HedgeFlag", &CThostFtdcExecOrderField::HedgeFlag)
		.def_readwrite("ActionType", &CThostFtdcExecOrderField::ActionType)
		.def_readwrite("PosiDirection", &CThostFtdcExecOrderField::PosiDirection)
		.def_readwrite("ReservePositionFlag", &CThostFtdcExecOrderField::ReservePositionFlag)
		.def_readwrite("CloseFlag", &CThostFtdcExecOrderField::CloseFlag)
		.def_property("ExecOrderLocalID", [](const CThostFtdcExecOrderField& a) {return encoding_cast(a.ExecOrderLocalID);}, [](CThostFtdcExecOrderField& a, char c[]) {strcpy(a.ExecOrderLocalID, c);})
		.def_property("ExchangeID", [](const CThostFtdcExecOrderField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcExecOrderField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("ParticipantID", [](const CThostFtdcExecOrderField& a) {return encoding_cast(a.ParticipantID);}, [](CThostFtdcExecOrderField& a, char c[]) {strcpy(a.ParticipantID, c);})
		.def_property("ClientID", [](const CThostFtdcExecOrderField& a) {return encoding_cast(a.ClientID);}, [](CThostFtdcExecOrderField& a, char c[]) {strcpy(a.ClientID, c);})
		.def_property("reserve2", [](const CThostFtdcExecOrderField& a) {return encoding_cast(a.reserve2);}, [](CThostFtdcExecOrderField& a, char c[]) {strcpy(a.reserve2, c);})
		.def_property("TraderID", [](const CThostFtdcExecOrderField& a) {return encoding_cast(a.TraderID);}, [](CThostFtdcExecOrderField& a, char c[]) {strcpy(a.TraderID, c);})
		.def_readwrite("InstallID", &CThostFtdcExecOrderField::InstallID)
		.def_readwrite("OrderSubmitStatus", &CThostFtdcExecOrderField::OrderSubmitStatus)
		.def_readwrite("NotifySequence", &CThostFtdcExecOrderField::NotifySequence)
		.def_property("TradingDay", [](const CThostFtdcExecOrderField& a) {return encoding_cast(a.TradingDay);}, [](CThostFtdcExecOrderField& a, char c[]) {strcpy(a.TradingDay, c);})
		.def_readwrite("SettlementID", &CThostFtdcExecOrderField::SettlementID)
		.def_property("ExecOrderSysID", [](const CThostFtdcExecOrderField& a) {return encoding_cast(a.ExecOrderSysID);}, [](CThostFtdcExecOrderField& a, char c[]) {strcpy(a.ExecOrderSysID, c);})
		.def_property("InsertDate", [](const CThostFtdcExecOrderField& a) {return encoding_cast(a.InsertDate);}, [](CThostFtdcExecOrderField& a, char c[]) {strcpy(a.InsertDate, c);})
		.def_property("InsertTime", [](const CThostFtdcExecOrderField& a) {return encoding_cast(a.InsertTime);}, [](CThostFtdcExecOrderField& a, char c[]) {strcpy(a.InsertTime, c);})
		.def_property("CancelTime", [](const CThostFtdcExecOrderField& a) {return encoding_cast(a.CancelTime);}, [](CThostFtdcExecOrderField& a, char c[]) {strcpy(a.CancelTime, c);})
		.def_readwrite("ExecResult", &CThostFtdcExecOrderField::ExecResult)
		.def_property("ClearingPartID", [](const CThostFtdcExecOrderField& a) {return encoding_cast(a.ClearingPartID);}, [](CThostFtdcExecOrderField& a, char c[]) {strcpy(a.ClearingPartID, c);})
		.def_readwrite("SequenceNo", &CThostFtdcExecOrderField::SequenceNo)
		.def_readwrite("FrontID", &CThostFtdcExecOrderField::FrontID)
		.def_readwrite("SessionID", &CThostFtdcExecOrderField::SessionID)
		.def_property("UserProductInfo", [](const CThostFtdcExecOrderField& a) {return encoding_cast(a.UserProductInfo);}, [](CThostFtdcExecOrderField& a, char c[]) {strcpy(a.UserProductInfo, c);})
		.def_property("StatusMsg", [](const CThostFtdcExecOrderField& a) {return encoding_cast(a.StatusMsg);}, [](CThostFtdcExecOrderField& a, char c[]) {strcpy(a.StatusMsg, c);})
		.def_property("ActiveUserID", [](const CThostFtdcExecOrderField& a) {return encoding_cast(a.ActiveUserID);}, [](CThostFtdcExecOrderField& a, char c[]) {strcpy(a.ActiveUserID, c);})
		.def_readwrite("BrokerExecOrderSeq", &CThostFtdcExecOrderField::BrokerExecOrderSeq)
		.def_property("BranchID", [](const CThostFtdcExecOrderField& a) {return encoding_cast(a.BranchID);}, [](CThostFtdcExecOrderField& a, char c[]) {strcpy(a.BranchID, c);})
		.def_property("InvestUnitID", [](const CThostFtdcExecOrderField& a) {return encoding_cast(a.InvestUnitID);}, [](CThostFtdcExecOrderField& a, char c[]) {strcpy(a.InvestUnitID, c);})
		.def_property("AccountID", [](const CThostFtdcExecOrderField& a) {return encoding_cast(a.AccountID);}, [](CThostFtdcExecOrderField& a, char c[]) {strcpy(a.AccountID, c);})
		.def_property("CurrencyID", [](const CThostFtdcExecOrderField& a) {return encoding_cast(a.CurrencyID);}, [](CThostFtdcExecOrderField& a, char c[]) {strcpy(a.CurrencyID, c);})
		.def_property("reserve3", [](const CThostFtdcExecOrderField& a) {return encoding_cast(a.reserve3);}, [](CThostFtdcExecOrderField& a, char c[]) {strcpy(a.reserve3, c);})
		.def_property("MacAddress", [](const CThostFtdcExecOrderField& a) {return encoding_cast(a.MacAddress);}, [](CThostFtdcExecOrderField& a, char c[]) {strcpy(a.MacAddress, c);})
		.def_property("InstrumentID", [](const CThostFtdcExecOrderField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcExecOrderField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def_property("ExchangeInstID", [](const CThostFtdcExecOrderField& a) {return encoding_cast(a.ExchangeInstID);}, [](CThostFtdcExecOrderField& a, char c[]) {strcpy(a.ExchangeInstID, c);})
		.def_property("IPAddress", [](const CThostFtdcExecOrderField& a) {return encoding_cast(a.IPAddress);}, [](CThostFtdcExecOrderField& a, char c[]) {strcpy(a.IPAddress, c);})
		.def("to_dict", [](const CThostFtdcExecOrderField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["reserve1"] = encoding_cast(a.reserve1); d["ExecOrderRef"] = encoding_cast(a.ExecOrderRef); d["UserID"] = encoding_cast(a.UserID); d["Volume"] = a.Volume; d["RequestID"] = a.RequestID; d["BusinessUnit"] = encoding_cast(a.BusinessUnit); d["OffsetFlag"] = a.OffsetFlag; d["HedgeFlag"] = a.HedgeFlag; d["ActionType"] = a.ActionType; d["PosiDirection"] = a.PosiDirection; d["ReservePositionFlag"] = a.ReservePositionFlag; d["CloseFlag"] = a.CloseFlag; d["ExecOrderLocalID"] = encoding_cast(a.ExecOrderLocalID); d["ExchangeID"] = encoding_cast(a.ExchangeID); d["ParticipantID"] = encoding_cast(a.ParticipantID); d["ClientID"] = encoding_cast(a.ClientID); d["reserve2"] = encoding_cast(a.reserve2); d["TraderID"] = encoding_cast(a.TraderID); d["InstallID"] = a.InstallID; d["OrderSubmitStatus"] = a.OrderSubmitStatus; d["NotifySequence"] = a.NotifySequence; d["TradingDay"] = encoding_cast(a.TradingDay); d["SettlementID"] = a.SettlementID; d["ExecOrderSysID"] = encoding_cast(a.ExecOrderSysID); d["InsertDate"] = encoding_cast(a.InsertDate); d["InsertTime"] = encoding_cast(a.InsertTime); d["CancelTime"] = encoding_cast(a.CancelTime); d["ExecResult"] = a.ExecResult; d["ClearingPartID"] = encoding_cast(a.ClearingPartID); d["SequenceNo"] = a.SequenceNo; d["FrontID"] = a.FrontID; d["SessionID"] = a.SessionID; d["UserProductInfo"] = encoding_cast(a.UserProductInfo); d["StatusMsg"] = encoding_cast(a.StatusMsg); d["ActiveUserID"] = encoding_cast(a.ActiveUserID); d["BrokerExecOrderSeq"] = a.BrokerExecOrderSeq; d["BranchID"] = encoding_cast(a.BranchID); d["InvestUnitID"] = encoding_cast(a.InvestUnitID); d["AccountID"] = encoding_cast(a.AccountID); d["CurrencyID"] = encoding_cast(a.CurrencyID); d["reserve3"] = encoding_cast(a.reserve3); d["MacAddress"] = encoding_cast(a.MacAddress); d["InstrumentID"] = encoding_cast(a.InstrumentID); d["ExchangeInstID"] = encoding_cast(a.ExchangeInstID); d["IPAddress"] = encoding_cast(a.IPAddress); return d;});

	py::class_<CThostFtdcExecOrderActionField>(m, "CThostFtdcExecOrderActionField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcExecOrderActionField& a) {return CThostFtdcExecOrderActionField(a);})
		.def_property("BrokerID", [](const CThostFtdcExecOrderActionField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcExecOrderActionField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcExecOrderActionField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcExecOrderActionField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_readwrite("ExecOrderActionRef", &CThostFtdcExecOrderActionField::ExecOrderActionRef)
		.def_property("ExecOrderRef", [](const CThostFtdcExecOrderActionField& a) {return encoding_cast(a.ExecOrderRef);}, [](CThostFtdcExecOrderActionField& a, char c[]) {strcpy(a.ExecOrderRef, c);})
		.def_readwrite("RequestID", &CThostFtdcExecOrderActionField::RequestID)
		.def_readwrite("FrontID", &CThostFtdcExecOrderActionField::FrontID)
		.def_readwrite("SessionID", &CThostFtdcExecOrderActionField::SessionID)
		.def_property("ExchangeID", [](const CThostFtdcExecOrderActionField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcExecOrderActionField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("ExecOrderSysID", [](const CThostFtdcExecOrderActionField& a) {return encoding_cast(a.ExecOrderSysID);}, [](CThostFtdcExecOrderActionField& a, char c[]) {strcpy(a.ExecOrderSysID, c);})
		.def_readwrite("ActionFlag", &CThostFtdcExecOrderActionField::ActionFlag)
		.def_property("ActionDate", [](const CThostFtdcExecOrderActionField& a) {return encoding_cast(a.ActionDate);}, [](CThostFtdcExecOrderActionField& a, char c[]) {strcpy(a.ActionDate, c);})
		.def_property("ActionTime", [](const CThostFtdcExecOrderActionField& a) {return encoding_cast(a.ActionTime);}, [](CThostFtdcExecOrderActionField& a, char c[]) {strcpy(a.ActionTime, c);})
		.def_property("TraderID", [](const CThostFtdcExecOrderActionField& a) {return encoding_cast(a.TraderID);}, [](CThostFtdcExecOrderActionField& a, char c[]) {strcpy(a.TraderID, c);})
		.def_readwrite("InstallID", &CThostFtdcExecOrderActionField::InstallID)
		.def_property("ExecOrderLocalID", [](const CThostFtdcExecOrderActionField& a) {return encoding_cast(a.ExecOrderLocalID);}, [](CThostFtdcExecOrderActionField& a, char c[]) {strcpy(a.ExecOrderLocalID, c);})
		.def_property("ActionLocalID", [](const CThostFtdcExecOrderActionField& a) {return encoding_cast(a.ActionLocalID);}, [](CThostFtdcExecOrderActionField& a, char c[]) {strcpy(a.ActionLocalID, c);})
		.def_property("ParticipantID", [](const CThostFtdcExecOrderActionField& a) {return encoding_cast(a.ParticipantID);}, [](CThostFtdcExecOrderActionField& a, char c[]) {strcpy(a.ParticipantID, c);})
		.def_property("ClientID", [](const CThostFtdcExecOrderActionField& a) {return encoding_cast(a.ClientID);}, [](CThostFtdcExecOrderActionField& a, char c[]) {strcpy(a.ClientID, c);})
		.def_property("BusinessUnit", [](const CThostFtdcExecOrderActionField& a) {return encoding_cast(a.BusinessUnit);}, [](CThostFtdcExecOrderActionField& a, char c[]) {strcpy(a.BusinessUnit, c);})
		.def_readwrite("OrderActionStatus", &CThostFtdcExecOrderActionField::OrderActionStatus)
		.def_property("UserID", [](const CThostFtdcExecOrderActionField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcExecOrderActionField& a, char c[]) {strcpy(a.UserID, c);})
		.def_readwrite("ActionType", &CThostFtdcExecOrderActionField::ActionType)
		.def_property("StatusMsg", [](const CThostFtdcExecOrderActionField& a) {return encoding_cast(a.StatusMsg);}, [](CThostFtdcExecOrderActionField& a, char c[]) {strcpy(a.StatusMsg, c);})
		.def_property("reserve1", [](const CThostFtdcExecOrderActionField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcExecOrderActionField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("BranchID", [](const CThostFtdcExecOrderActionField& a) {return encoding_cast(a.BranchID);}, [](CThostFtdcExecOrderActionField& a, char c[]) {strcpy(a.BranchID, c);})
		.def_property("InvestUnitID", [](const CThostFtdcExecOrderActionField& a) {return encoding_cast(a.InvestUnitID);}, [](CThostFtdcExecOrderActionField& a, char c[]) {strcpy(a.InvestUnitID, c);})
		.def_property("reserve2", [](const CThostFtdcExecOrderActionField& a) {return encoding_cast(a.reserve2);}, [](CThostFtdcExecOrderActionField& a, char c[]) {strcpy(a.reserve2, c);})
		.def_property("MacAddress", [](const CThostFtdcExecOrderActionField& a) {return encoding_cast(a.MacAddress);}, [](CThostFtdcExecOrderActionField& a, char c[]) {strcpy(a.MacAddress, c);})
		.def_property("InstrumentID", [](const CThostFtdcExecOrderActionField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcExecOrderActionField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def_property("IPAddress", [](const CThostFtdcExecOrderActionField& a) {return encoding_cast(a.IPAddress);}, [](CThostFtdcExecOrderActionField& a, char c[]) {strcpy(a.IPAddress, c);})
		.def("to_dict", [](const CThostFtdcExecOrderActionField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["ExecOrderActionRef"] = a.ExecOrderActionRef; d["ExecOrderRef"] = encoding_cast(a.ExecOrderRef); d["RequestID"] = a.RequestID; d["FrontID"] = a.FrontID; d["SessionID"] = a.SessionID; d["ExchangeID"] = encoding_cast(a.ExchangeID); d["ExecOrderSysID"] = encoding_cast(a.ExecOrderSysID); d["ActionFlag"] = a.ActionFlag; d["ActionDate"] = encoding_cast(a.ActionDate); d["ActionTime"] = encoding_cast(a.ActionTime); d["TraderID"] = encoding_cast(a.TraderID); d["InstallID"] = a.InstallID; d["ExecOrderLocalID"] = encoding_cast(a.ExecOrderLocalID); d["ActionLocalID"] = encoding_cast(a.ActionLocalID); d["ParticipantID"] = encoding_cast(a.ParticipantID); d["ClientID"] = encoding_cast(a.ClientID); d["BusinessUnit"] = encoding_cast(a.BusinessUnit); d["OrderActionStatus"] = a.OrderActionStatus; d["UserID"] = encoding_cast(a.UserID); d["ActionType"] = a.ActionType; d["StatusMsg"] = encoding_cast(a.StatusMsg); d["reserve1"] = encoding_cast(a.reserve1); d["BranchID"] = encoding_cast(a.BranchID); d["InvestUnitID"] = encoding_cast(a.InvestUnitID); d["reserve2"] = encoding_cast(a.reserve2); d["MacAddress"] = encoding_cast(a.MacAddress); d["InstrumentID"] = encoding_cast(a.InstrumentID); d["IPAddress"] = encoding_cast(a.IPAddress); return d;});

	py::class_<CThostFtdcQryExecOrderField>(m, "CThostFtdcQryExecOrderField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryExecOrderField& a) {return CThostFtdcQryExecOrderField(a);})
		.def_property("BrokerID", [](const CThostFtdcQryExecOrderField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcQryExecOrderField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcQryExecOrderField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcQryExecOrderField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_property("reserve1", [](const CThostFtdcQryExecOrderField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcQryExecOrderField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("ExchangeID", [](const CThostFtdcQryExecOrderField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcQryExecOrderField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("ExecOrderSysID", [](const CThostFtdcQryExecOrderField& a) {return encoding_cast(a.ExecOrderSysID);}, [](CThostFtdcQryExecOrderField& a, char c[]) {strcpy(a.ExecOrderSysID, c);})
		.def_property("InsertTimeStart", [](const CThostFtdcQryExecOrderField& a) {return encoding_cast(a.InsertTimeStart);}, [](CThostFtdcQryExecOrderField& a, char c[]) {strcpy(a.InsertTimeStart, c);})
		.def_property("InsertTimeEnd", [](const CThostFtdcQryExecOrderField& a) {return encoding_cast(a.InsertTimeEnd);}, [](CThostFtdcQryExecOrderField& a, char c[]) {strcpy(a.InsertTimeEnd, c);})
		.def_property("InstrumentID", [](const CThostFtdcQryExecOrderField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcQryExecOrderField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def("to_dict", [](const CThostFtdcQryExecOrderField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["reserve1"] = encoding_cast(a.reserve1); d["ExchangeID"] = encoding_cast(a.ExchangeID); d["ExecOrderSysID"] = encoding_cast(a.ExecOrderSysID); d["InsertTimeStart"] = encoding_cast(a.InsertTimeStart); d["InsertTimeEnd"] = encoding_cast(a.InsertTimeEnd); d["InstrumentID"] = encoding_cast(a.InstrumentID); return d;});

	py::class_<CThostFtdcExchangeExecOrderField>(m, "CThostFtdcExchangeExecOrderField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcExchangeExecOrderField& a) {return CThostFtdcExchangeExecOrderField(a);})
		.def_readwrite("Volume", &CThostFtdcExchangeExecOrderField::Volume)
		.def_readwrite("RequestID", &CThostFtdcExchangeExecOrderField::RequestID)
		.def_property("BusinessUnit", [](const CThostFtdcExchangeExecOrderField& a) {return encoding_cast(a.BusinessUnit);}, [](CThostFtdcExchangeExecOrderField& a, char c[]) {strcpy(a.BusinessUnit, c);})
		.def_readwrite("OffsetFlag", &CThostFtdcExchangeExecOrderField::OffsetFlag)
		.def_readwrite("HedgeFlag", &CThostFtdcExchangeExecOrderField::HedgeFlag)
		.def_readwrite("ActionType", &CThostFtdcExchangeExecOrderField::ActionType)
		.def_readwrite("PosiDirection", &CThostFtdcExchangeExecOrderField::PosiDirection)
		.def_readwrite("ReservePositionFlag", &CThostFtdcExchangeExecOrderField::ReservePositionFlag)
		.def_readwrite("CloseFlag", &CThostFtdcExchangeExecOrderField::CloseFlag)
		.def_property("ExecOrderLocalID", [](const CThostFtdcExchangeExecOrderField& a) {return encoding_cast(a.ExecOrderLocalID);}, [](CThostFtdcExchangeExecOrderField& a, char c[]) {strcpy(a.ExecOrderLocalID, c);})
		.def_property("ExchangeID", [](const CThostFtdcExchangeExecOrderField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcExchangeExecOrderField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("ParticipantID", [](const CThostFtdcExchangeExecOrderField& a) {return encoding_cast(a.ParticipantID);}, [](CThostFtdcExchangeExecOrderField& a, char c[]) {strcpy(a.ParticipantID, c);})
		.def_property("ClientID", [](const CThostFtdcExchangeExecOrderField& a) {return encoding_cast(a.ClientID);}, [](CThostFtdcExchangeExecOrderField& a, char c[]) {strcpy(a.ClientID, c);})
		.def_property("reserve1", [](const CThostFtdcExchangeExecOrderField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcExchangeExecOrderField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("TraderID", [](const CThostFtdcExchangeExecOrderField& a) {return encoding_cast(a.TraderID);}, [](CThostFtdcExchangeExecOrderField& a, char c[]) {strcpy(a.TraderID, c);})
		.def_readwrite("InstallID", &CThostFtdcExchangeExecOrderField::InstallID)
		.def_readwrite("OrderSubmitStatus", &CThostFtdcExchangeExecOrderField::OrderSubmitStatus)
		.def_readwrite("NotifySequence", &CThostFtdcExchangeExecOrderField::NotifySequence)
		.def_property("TradingDay", [](const CThostFtdcExchangeExecOrderField& a) {return encoding_cast(a.TradingDay);}, [](CThostFtdcExchangeExecOrderField& a, char c[]) {strcpy(a.TradingDay, c);})
		.def_readwrite("SettlementID", &CThostFtdcExchangeExecOrderField::SettlementID)
		.def_property("ExecOrderSysID", [](const CThostFtdcExchangeExecOrderField& a) {return encoding_cast(a.ExecOrderSysID);}, [](CThostFtdcExchangeExecOrderField& a, char c[]) {strcpy(a.ExecOrderSysID, c);})
		.def_property("InsertDate", [](const CThostFtdcExchangeExecOrderField& a) {return encoding_cast(a.InsertDate);}, [](CThostFtdcExchangeExecOrderField& a, char c[]) {strcpy(a.InsertDate, c);})
		.def_property("InsertTime", [](const CThostFtdcExchangeExecOrderField& a) {return encoding_cast(a.InsertTime);}, [](CThostFtdcExchangeExecOrderField& a, char c[]) {strcpy(a.InsertTime, c);})
		.def_property("CancelTime", [](const CThostFtdcExchangeExecOrderField& a) {return encoding_cast(a.CancelTime);}, [](CThostFtdcExchangeExecOrderField& a, char c[]) {strcpy(a.CancelTime, c);})
		.def_readwrite("ExecResult", &CThostFtdcExchangeExecOrderField::ExecResult)
		.def_property("ClearingPartID", [](const CThostFtdcExchangeExecOrderField& a) {return encoding_cast(a.ClearingPartID);}, [](CThostFtdcExchangeExecOrderField& a, char c[]) {strcpy(a.ClearingPartID, c);})
		.def_readwrite("SequenceNo", &CThostFtdcExchangeExecOrderField::SequenceNo)
		.def_property("BranchID", [](const CThostFtdcExchangeExecOrderField& a) {return encoding_cast(a.BranchID);}, [](CThostFtdcExchangeExecOrderField& a, char c[]) {strcpy(a.BranchID, c);})
		.def_property("reserve2", [](const CThostFtdcExchangeExecOrderField& a) {return encoding_cast(a.reserve2);}, [](CThostFtdcExchangeExecOrderField& a, char c[]) {strcpy(a.reserve2, c);})
		.def_property("MacAddress", [](const CThostFtdcExchangeExecOrderField& a) {return encoding_cast(a.MacAddress);}, [](CThostFtdcExchangeExecOrderField& a, char c[]) {strcpy(a.MacAddress, c);})
		.def_property("ExchangeInstID", [](const CThostFtdcExchangeExecOrderField& a) {return encoding_cast(a.ExchangeInstID);}, [](CThostFtdcExchangeExecOrderField& a, char c[]) {strcpy(a.ExchangeInstID, c);})
		.def_property("IPAddress", [](const CThostFtdcExchangeExecOrderField& a) {return encoding_cast(a.IPAddress);}, [](CThostFtdcExchangeExecOrderField& a, char c[]) {strcpy(a.IPAddress, c);})
		.def("to_dict", [](const CThostFtdcExchangeExecOrderField& a) {py::dict d; d["Volume"] = a.Volume; d["RequestID"] = a.RequestID; d["BusinessUnit"] = encoding_cast(a.BusinessUnit); d["OffsetFlag"] = a.OffsetFlag; d["HedgeFlag"] = a.HedgeFlag; d["ActionType"] = a.ActionType; d["PosiDirection"] = a.PosiDirection; d["ReservePositionFlag"] = a.ReservePositionFlag; d["CloseFlag"] = a.CloseFlag; d["ExecOrderLocalID"] = encoding_cast(a.ExecOrderLocalID); d["ExchangeID"] = encoding_cast(a.ExchangeID); d["ParticipantID"] = encoding_cast(a.ParticipantID); d["ClientID"] = encoding_cast(a.ClientID); d["reserve1"] = encoding_cast(a.reserve1); d["TraderID"] = encoding_cast(a.TraderID); d["InstallID"] = a.InstallID; d["OrderSubmitStatus"] = a.OrderSubmitStatus; d["NotifySequence"] = a.NotifySequence; d["TradingDay"] = encoding_cast(a.TradingDay); d["SettlementID"] = a.SettlementID; d["ExecOrderSysID"] = encoding_cast(a.ExecOrderSysID); d["InsertDate"] = encoding_cast(a.InsertDate); d["InsertTime"] = encoding_cast(a.InsertTime); d["CancelTime"] = encoding_cast(a.CancelTime); d["ExecResult"] = a.ExecResult; d["ClearingPartID"] = encoding_cast(a.ClearingPartID); d["SequenceNo"] = a.SequenceNo; d["BranchID"] = encoding_cast(a.BranchID); d["reserve2"] = encoding_cast(a.reserve2); d["MacAddress"] = encoding_cast(a.MacAddress); d["ExchangeInstID"] = encoding_cast(a.ExchangeInstID); d["IPAddress"] = encoding_cast(a.IPAddress); return d;});

	py::class_<CThostFtdcQryExchangeExecOrderField>(m, "CThostFtdcQryExchangeExecOrderField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryExchangeExecOrderField& a) {return CThostFtdcQryExchangeExecOrderField(a);})
		.def_property("ParticipantID", [](const CThostFtdcQryExchangeExecOrderField& a) {return encoding_cast(a.ParticipantID);}, [](CThostFtdcQryExchangeExecOrderField& a, char c[]) {strcpy(a.ParticipantID, c);})
		.def_property("ClientID", [](const CThostFtdcQryExchangeExecOrderField& a) {return encoding_cast(a.ClientID);}, [](CThostFtdcQryExchangeExecOrderField& a, char c[]) {strcpy(a.ClientID, c);})
		.def_property("reserve1", [](const CThostFtdcQryExchangeExecOrderField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcQryExchangeExecOrderField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("ExchangeID", [](const CThostFtdcQryExchangeExecOrderField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcQryExchangeExecOrderField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("TraderID", [](const CThostFtdcQryExchangeExecOrderField& a) {return encoding_cast(a.TraderID);}, [](CThostFtdcQryExchangeExecOrderField& a, char c[]) {strcpy(a.TraderID, c);})
		.def_property("ExchangeInstID", [](const CThostFtdcQryExchangeExecOrderField& a) {return encoding_cast(a.ExchangeInstID);}, [](CThostFtdcQryExchangeExecOrderField& a, char c[]) {strcpy(a.ExchangeInstID, c);})
		.def("to_dict", [](const CThostFtdcQryExchangeExecOrderField& a) {py::dict d; d["ParticipantID"] = encoding_cast(a.ParticipantID); d["ClientID"] = encoding_cast(a.ClientID); d["reserve1"] = encoding_cast(a.reserve1); d["ExchangeID"] = encoding_cast(a.ExchangeID); d["TraderID"] = encoding_cast(a.TraderID); d["ExchangeInstID"] = encoding_cast(a.ExchangeInstID); return d;});

	py::class_<CThostFtdcQryExecOrderActionField>(m, "CThostFtdcQryExecOrderActionField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryExecOrderActionField& a) {return CThostFtdcQryExecOrderActionField(a);})
		.def_property("BrokerID", [](const CThostFtdcQryExecOrderActionField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcQryExecOrderActionField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcQryExecOrderActionField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcQryExecOrderActionField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_property("ExchangeID", [](const CThostFtdcQryExecOrderActionField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcQryExecOrderActionField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def("to_dict", [](const CThostFtdcQryExecOrderActionField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["ExchangeID"] = encoding_cast(a.ExchangeID); return d;});

	py::class_<CThostFtdcExchangeExecOrderActionField>(m, "CThostFtdcExchangeExecOrderActionField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcExchangeExecOrderActionField& a) {return CThostFtdcExchangeExecOrderActionField(a);})
		.def_property("ExchangeID", [](const CThostFtdcExchangeExecOrderActionField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcExchangeExecOrderActionField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("ExecOrderSysID", [](const CThostFtdcExchangeExecOrderActionField& a) {return encoding_cast(a.ExecOrderSysID);}, [](CThostFtdcExchangeExecOrderActionField& a, char c[]) {strcpy(a.ExecOrderSysID, c);})
		.def_readwrite("ActionFlag", &CThostFtdcExchangeExecOrderActionField::ActionFlag)
		.def_property("ActionDate", [](const CThostFtdcExchangeExecOrderActionField& a) {return encoding_cast(a.ActionDate);}, [](CThostFtdcExchangeExecOrderActionField& a, char c[]) {strcpy(a.ActionDate, c);})
		.def_property("ActionTime", [](const CThostFtdcExchangeExecOrderActionField& a) {return encoding_cast(a.ActionTime);}, [](CThostFtdcExchangeExecOrderActionField& a, char c[]) {strcpy(a.ActionTime, c);})
		.def_property("TraderID", [](const CThostFtdcExchangeExecOrderActionField& a) {return encoding_cast(a.TraderID);}, [](CThostFtdcExchangeExecOrderActionField& a, char c[]) {strcpy(a.TraderID, c);})
		.def_readwrite("InstallID", &CThostFtdcExchangeExecOrderActionField::InstallID)
		.def_property("ExecOrderLocalID", [](const CThostFtdcExchangeExecOrderActionField& a) {return encoding_cast(a.ExecOrderLocalID);}, [](CThostFtdcExchangeExecOrderActionField& a, char c[]) {strcpy(a.ExecOrderLocalID, c);})
		.def_property("ActionLocalID", [](const CThostFtdcExchangeExecOrderActionField& a) {return encoding_cast(a.ActionLocalID);}, [](CThostFtdcExchangeExecOrderActionField& a, char c[]) {strcpy(a.ActionLocalID, c);})
		.def_property("ParticipantID", [](const CThostFtdcExchangeExecOrderActionField& a) {return encoding_cast(a.ParticipantID);}, [](CThostFtdcExchangeExecOrderActionField& a, char c[]) {strcpy(a.ParticipantID, c);})
		.def_property("ClientID", [](const CThostFtdcExchangeExecOrderActionField& a) {return encoding_cast(a.ClientID);}, [](CThostFtdcExchangeExecOrderActionField& a, char c[]) {strcpy(a.ClientID, c);})
		.def_property("BusinessUnit", [](const CThostFtdcExchangeExecOrderActionField& a) {return encoding_cast(a.BusinessUnit);}, [](CThostFtdcExchangeExecOrderActionField& a, char c[]) {strcpy(a.BusinessUnit, c);})
		.def_readwrite("OrderActionStatus", &CThostFtdcExchangeExecOrderActionField::OrderActionStatus)
		.def_property("UserID", [](const CThostFtdcExchangeExecOrderActionField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcExchangeExecOrderActionField& a, char c[]) {strcpy(a.UserID, c);})
		.def_readwrite("ActionType", &CThostFtdcExchangeExecOrderActionField::ActionType)
		.def_property("BranchID", [](const CThostFtdcExchangeExecOrderActionField& a) {return encoding_cast(a.BranchID);}, [](CThostFtdcExchangeExecOrderActionField& a, char c[]) {strcpy(a.BranchID, c);})
		.def_property("reserve1", [](const CThostFtdcExchangeExecOrderActionField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcExchangeExecOrderActionField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("MacAddress", [](const CThostFtdcExchangeExecOrderActionField& a) {return encoding_cast(a.MacAddress);}, [](CThostFtdcExchangeExecOrderActionField& a, char c[]) {strcpy(a.MacAddress, c);})
		.def_property("reserve2", [](const CThostFtdcExchangeExecOrderActionField& a) {return encoding_cast(a.reserve2);}, [](CThostFtdcExchangeExecOrderActionField& a, char c[]) {strcpy(a.reserve2, c);})
		.def_readwrite("Volume", &CThostFtdcExchangeExecOrderActionField::Volume)
		.def_property("IPAddress", [](const CThostFtdcExchangeExecOrderActionField& a) {return encoding_cast(a.IPAddress);}, [](CThostFtdcExchangeExecOrderActionField& a, char c[]) {strcpy(a.IPAddress, c);})
		.def_property("ExchangeInstID", [](const CThostFtdcExchangeExecOrderActionField& a) {return encoding_cast(a.ExchangeInstID);}, [](CThostFtdcExchangeExecOrderActionField& a, char c[]) {strcpy(a.ExchangeInstID, c);})
		.def("to_dict", [](const CThostFtdcExchangeExecOrderActionField& a) {py::dict d; d["ExchangeID"] = encoding_cast(a.ExchangeID); d["ExecOrderSysID"] = encoding_cast(a.ExecOrderSysID); d["ActionFlag"] = a.ActionFlag; d["ActionDate"] = encoding_cast(a.ActionDate); d["ActionTime"] = encoding_cast(a.ActionTime); d["TraderID"] = encoding_cast(a.TraderID); d["InstallID"] = a.InstallID; d["ExecOrderLocalID"] = encoding_cast(a.ExecOrderLocalID); d["ActionLocalID"] = encoding_cast(a.ActionLocalID); d["ParticipantID"] = encoding_cast(a.ParticipantID); d["ClientID"] = encoding_cast(a.ClientID); d["BusinessUnit"] = encoding_cast(a.BusinessUnit); d["OrderActionStatus"] = a.OrderActionStatus; d["UserID"] = encoding_cast(a.UserID); d["ActionType"] = a.ActionType; d["BranchID"] = encoding_cast(a.BranchID); d["reserve1"] = encoding_cast(a.reserve1); d["MacAddress"] = encoding_cast(a.MacAddress); d["reserve2"] = encoding_cast(a.reserve2); d["Volume"] = a.Volume; d["IPAddress"] = encoding_cast(a.IPAddress); d["ExchangeInstID"] = encoding_cast(a.ExchangeInstID); return d;});

	py::class_<CThostFtdcQryExchangeExecOrderActionField>(m, "CThostFtdcQryExchangeExecOrderActionField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryExchangeExecOrderActionField& a) {return CThostFtdcQryExchangeExecOrderActionField(a);})
		.def_property("ParticipantID", [](const CThostFtdcQryExchangeExecOrderActionField& a) {return encoding_cast(a.ParticipantID);}, [](CThostFtdcQryExchangeExecOrderActionField& a, char c[]) {strcpy(a.ParticipantID, c);})
		.def_property("ClientID", [](const CThostFtdcQryExchangeExecOrderActionField& a) {return encoding_cast(a.ClientID);}, [](CThostFtdcQryExchangeExecOrderActionField& a, char c[]) {strcpy(a.ClientID, c);})
		.def_property("ExchangeID", [](const CThostFtdcQryExchangeExecOrderActionField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcQryExchangeExecOrderActionField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("TraderID", [](const CThostFtdcQryExchangeExecOrderActionField& a) {return encoding_cast(a.TraderID);}, [](CThostFtdcQryExchangeExecOrderActionField& a, char c[]) {strcpy(a.TraderID, c);})
		.def("to_dict", [](const CThostFtdcQryExchangeExecOrderActionField& a) {py::dict d; d["ParticipantID"] = encoding_cast(a.ParticipantID); d["ClientID"] = encoding_cast(a.ClientID); d["ExchangeID"] = encoding_cast(a.ExchangeID); d["TraderID"] = encoding_cast(a.TraderID); return d;});

	py::class_<CThostFtdcErrExecOrderField>(m, "CThostFtdcErrExecOrderField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcErrExecOrderField& a) {return CThostFtdcErrExecOrderField(a);})
		.def_property("BrokerID", [](const CThostFtdcErrExecOrderField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcErrExecOrderField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcErrExecOrderField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcErrExecOrderField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_property("reserve1", [](const CThostFtdcErrExecOrderField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcErrExecOrderField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("ExecOrderRef", [](const CThostFtdcErrExecOrderField& a) {return encoding_cast(a.ExecOrderRef);}, [](CThostFtdcErrExecOrderField& a, char c[]) {strcpy(a.ExecOrderRef, c);})
		.def_property("UserID", [](const CThostFtdcErrExecOrderField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcErrExecOrderField& a, char c[]) {strcpy(a.UserID, c);})
		.def_readwrite("Volume", &CThostFtdcErrExecOrderField::Volume)
		.def_readwrite("RequestID", &CThostFtdcErrExecOrderField::RequestID)
		.def_property("BusinessUnit", [](const CThostFtdcErrExecOrderField& a) {return encoding_cast(a.BusinessUnit);}, [](CThostFtdcErrExecOrderField& a, char c[]) {strcpy(a.BusinessUnit, c);})
		.def_readwrite("OffsetFlag", &CThostFtdcErrExecOrderField::OffsetFlag)
		.def_readwrite("HedgeFlag", &CThostFtdcErrExecOrderField::HedgeFlag)
		.def_readwrite("ActionType", &CThostFtdcErrExecOrderField::ActionType)
		.def_readwrite("PosiDirection", &CThostFtdcErrExecOrderField::PosiDirection)
		.def_readwrite("ReservePositionFlag", &CThostFtdcErrExecOrderField::ReservePositionFlag)
		.def_readwrite("CloseFlag", &CThostFtdcErrExecOrderField::CloseFlag)
		.def_property("ExchangeID", [](const CThostFtdcErrExecOrderField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcErrExecOrderField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("InvestUnitID", [](const CThostFtdcErrExecOrderField& a) {return encoding_cast(a.InvestUnitID);}, [](CThostFtdcErrExecOrderField& a, char c[]) {strcpy(a.InvestUnitID, c);})
		.def_property("AccountID", [](const CThostFtdcErrExecOrderField& a) {return encoding_cast(a.AccountID);}, [](CThostFtdcErrExecOrderField& a, char c[]) {strcpy(a.AccountID, c);})
		.def_property("CurrencyID", [](const CThostFtdcErrExecOrderField& a) {return encoding_cast(a.CurrencyID);}, [](CThostFtdcErrExecOrderField& a, char c[]) {strcpy(a.CurrencyID, c);})
		.def_property("ClientID", [](const CThostFtdcErrExecOrderField& a) {return encoding_cast(a.ClientID);}, [](CThostFtdcErrExecOrderField& a, char c[]) {strcpy(a.ClientID, c);})
		.def_property("reserve2", [](const CThostFtdcErrExecOrderField& a) {return encoding_cast(a.reserve2);}, [](CThostFtdcErrExecOrderField& a, char c[]) {strcpy(a.reserve2, c);})
		.def_property("MacAddress", [](const CThostFtdcErrExecOrderField& a) {return encoding_cast(a.MacAddress);}, [](CThostFtdcErrExecOrderField& a, char c[]) {strcpy(a.MacAddress, c);})
		.def_readwrite("ErrorID", &CThostFtdcErrExecOrderField::ErrorID)
		.def_property("ErrorMsg", [](const CThostFtdcErrExecOrderField& a) {return encoding_cast(a.ErrorMsg);}, [](CThostFtdcErrExecOrderField& a, char c[]) {strcpy(a.ErrorMsg, c);})
		.def_property("InstrumentID", [](const CThostFtdcErrExecOrderField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcErrExecOrderField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def_property("IPAddress", [](const CThostFtdcErrExecOrderField& a) {return encoding_cast(a.IPAddress);}, [](CThostFtdcErrExecOrderField& a, char c[]) {strcpy(a.IPAddress, c);})
		.def("to_dict", [](const CThostFtdcErrExecOrderField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["reserve1"] = encoding_cast(a.reserve1); d["ExecOrderRef"] = encoding_cast(a.ExecOrderRef); d["UserID"] = encoding_cast(a.UserID); d["Volume"] = a.Volume; d["RequestID"] = a.RequestID; d["BusinessUnit"] = encoding_cast(a.BusinessUnit); d["OffsetFlag"] = a.OffsetFlag; d["HedgeFlag"] = a.HedgeFlag; d["ActionType"] = a.ActionType; d["PosiDirection"] = a.PosiDirection; d["ReservePositionFlag"] = a.ReservePositionFlag; d["CloseFlag"] = a.CloseFlag; d["ExchangeID"] = encoding_cast(a.ExchangeID); d["InvestUnitID"] = encoding_cast(a.InvestUnitID); d["AccountID"] = encoding_cast(a.AccountID); d["CurrencyID"] = encoding_cast(a.CurrencyID); d["ClientID"] = encoding_cast(a.ClientID); d["reserve2"] = encoding_cast(a.reserve2); d["MacAddress"] = encoding_cast(a.MacAddress); d["ErrorID"] = a.ErrorID; d["ErrorMsg"] = encoding_cast(a.ErrorMsg); d["InstrumentID"] = encoding_cast(a.InstrumentID); d["IPAddress"] = encoding_cast(a.IPAddress); return d;});

	py::class_<CThostFtdcQryErrExecOrderField>(m, "CThostFtdcQryErrExecOrderField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryErrExecOrderField& a) {return CThostFtdcQryErrExecOrderField(a);})
		.def_property("BrokerID", [](const CThostFtdcQryErrExecOrderField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcQryErrExecOrderField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcQryErrExecOrderField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcQryErrExecOrderField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def("to_dict", [](const CThostFtdcQryErrExecOrderField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); return d;});

	py::class_<CThostFtdcErrExecOrderActionField>(m, "CThostFtdcErrExecOrderActionField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcErrExecOrderActionField& a) {return CThostFtdcErrExecOrderActionField(a);})
		.def_property("BrokerID", [](const CThostFtdcErrExecOrderActionField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcErrExecOrderActionField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcErrExecOrderActionField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcErrExecOrderActionField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_readwrite("ExecOrderActionRef", &CThostFtdcErrExecOrderActionField::ExecOrderActionRef)
		.def_property("ExecOrderRef", [](const CThostFtdcErrExecOrderActionField& a) {return encoding_cast(a.ExecOrderRef);}, [](CThostFtdcErrExecOrderActionField& a, char c[]) {strcpy(a.ExecOrderRef, c);})
		.def_readwrite("RequestID", &CThostFtdcErrExecOrderActionField::RequestID)
		.def_readwrite("FrontID", &CThostFtdcErrExecOrderActionField::FrontID)
		.def_readwrite("SessionID", &CThostFtdcErrExecOrderActionField::SessionID)
		.def_property("ExchangeID", [](const CThostFtdcErrExecOrderActionField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcErrExecOrderActionField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("ExecOrderSysID", [](const CThostFtdcErrExecOrderActionField& a) {return encoding_cast(a.ExecOrderSysID);}, [](CThostFtdcErrExecOrderActionField& a, char c[]) {strcpy(a.ExecOrderSysID, c);})
		.def_readwrite("ActionFlag", &CThostFtdcErrExecOrderActionField::ActionFlag)
		.def_property("UserID", [](const CThostFtdcErrExecOrderActionField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcErrExecOrderActionField& a, char c[]) {strcpy(a.UserID, c);})
		.def_property("reserve1", [](const CThostFtdcErrExecOrderActionField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcErrExecOrderActionField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("InvestUnitID", [](const CThostFtdcErrExecOrderActionField& a) {return encoding_cast(a.InvestUnitID);}, [](CThostFtdcErrExecOrderActionField& a, char c[]) {strcpy(a.InvestUnitID, c);})
		.def_property("reserve2", [](const CThostFtdcErrExecOrderActionField& a) {return encoding_cast(a.reserve2);}, [](CThostFtdcErrExecOrderActionField& a, char c[]) {strcpy(a.reserve2, c);})
		.def_property("MacAddress", [](const CThostFtdcErrExecOrderActionField& a) {return encoding_cast(a.MacAddress);}, [](CThostFtdcErrExecOrderActionField& a, char c[]) {strcpy(a.MacAddress, c);})
		.def_readwrite("ErrorID", &CThostFtdcErrExecOrderActionField::ErrorID)
		.def_property("ErrorMsg", [](const CThostFtdcErrExecOrderActionField& a) {return encoding_cast(a.ErrorMsg);}, [](CThostFtdcErrExecOrderActionField& a, char c[]) {strcpy(a.ErrorMsg, c);})
		.def_property("InstrumentID", [](const CThostFtdcErrExecOrderActionField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcErrExecOrderActionField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def_property("IPAddress", [](const CThostFtdcErrExecOrderActionField& a) {return encoding_cast(a.IPAddress);}, [](CThostFtdcErrExecOrderActionField& a, char c[]) {strcpy(a.IPAddress, c);})
		.def("to_dict", [](const CThostFtdcErrExecOrderActionField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["ExecOrderActionRef"] = a.ExecOrderActionRef; d["ExecOrderRef"] = encoding_cast(a.ExecOrderRef); d["RequestID"] = a.RequestID; d["FrontID"] = a.FrontID; d["SessionID"] = a.SessionID; d["ExchangeID"] = encoding_cast(a.ExchangeID); d["ExecOrderSysID"] = encoding_cast(a.ExecOrderSysID); d["ActionFlag"] = a.ActionFlag; d["UserID"] = encoding_cast(a.UserID); d["reserve1"] = encoding_cast(a.reserve1); d["InvestUnitID"] = encoding_cast(a.InvestUnitID); d["reserve2"] = encoding_cast(a.reserve2); d["MacAddress"] = encoding_cast(a.MacAddress); d["ErrorID"] = a.ErrorID; d["ErrorMsg"] = encoding_cast(a.ErrorMsg); d["InstrumentID"] = encoding_cast(a.InstrumentID); d["IPAddress"] = encoding_cast(a.IPAddress); return d;});

	py::class_<CThostFtdcQryErrExecOrderActionField>(m, "CThostFtdcQryErrExecOrderActionField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryErrExecOrderActionField& a) {return CThostFtdcQryErrExecOrderActionField(a);})
		.def_property("BrokerID", [](const CThostFtdcQryErrExecOrderActionField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcQryErrExecOrderActionField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcQryErrExecOrderActionField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcQryErrExecOrderActionField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def("to_dict", [](const CThostFtdcQryErrExecOrderActionField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); return d;});

	py::class_<CThostFtdcOptionInstrTradingRightField>(m, "CThostFtdcOptionInstrTradingRightField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcOptionInstrTradingRightField& a) {return CThostFtdcOptionInstrTradingRightField(a);})
		.def_property("reserve1", [](const CThostFtdcOptionInstrTradingRightField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcOptionInstrTradingRightField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_readwrite("InvestorRange", &CThostFtdcOptionInstrTradingRightField::InvestorRange)
		.def_property("BrokerID", [](const CThostFtdcOptionInstrTradingRightField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcOptionInstrTradingRightField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcOptionInstrTradingRightField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcOptionInstrTradingRightField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_readwrite("Direction", &CThostFtdcOptionInstrTradingRightField::Direction)
		.def_readwrite("TradingRight", &CThostFtdcOptionInstrTradingRightField::TradingRight)
		.def_property("InstrumentID", [](const CThostFtdcOptionInstrTradingRightField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcOptionInstrTradingRightField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def("to_dict", [](const CThostFtdcOptionInstrTradingRightField& a) {py::dict d; d["reserve1"] = encoding_cast(a.reserve1); d["InvestorRange"] = a.InvestorRange; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["Direction"] = a.Direction; d["TradingRight"] = a.TradingRight; d["InstrumentID"] = encoding_cast(a.InstrumentID); return d;});

	py::class_<CThostFtdcQryOptionInstrTradingRightField>(m, "CThostFtdcQryOptionInstrTradingRightField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryOptionInstrTradingRightField& a) {return CThostFtdcQryOptionInstrTradingRightField(a);})
		.def_property("BrokerID", [](const CThostFtdcQryOptionInstrTradingRightField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcQryOptionInstrTradingRightField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcQryOptionInstrTradingRightField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcQryOptionInstrTradingRightField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_property("reserve1", [](const CThostFtdcQryOptionInstrTradingRightField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcQryOptionInstrTradingRightField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_readwrite("Direction", &CThostFtdcQryOptionInstrTradingRightField::Direction)
		.def_property("InstrumentID", [](const CThostFtdcQryOptionInstrTradingRightField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcQryOptionInstrTradingRightField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def("to_dict", [](const CThostFtdcQryOptionInstrTradingRightField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["reserve1"] = encoding_cast(a.reserve1); d["Direction"] = a.Direction; d["InstrumentID"] = encoding_cast(a.InstrumentID); return d;});

	py::class_<CThostFtdcInputForQuoteField>(m, "CThostFtdcInputForQuoteField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcInputForQuoteField& a) {return CThostFtdcInputForQuoteField(a);})
		.def_property("BrokerID", [](const CThostFtdcInputForQuoteField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcInputForQuoteField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcInputForQuoteField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcInputForQuoteField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_property("reserve1", [](const CThostFtdcInputForQuoteField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcInputForQuoteField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("ForQuoteRef", [](const CThostFtdcInputForQuoteField& a) {return encoding_cast(a.ForQuoteRef);}, [](CThostFtdcInputForQuoteField& a, char c[]) {strcpy(a.ForQuoteRef, c);})
		.def_property("UserID", [](const CThostFtdcInputForQuoteField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcInputForQuoteField& a, char c[]) {strcpy(a.UserID, c);})
		.def_property("ExchangeID", [](const CThostFtdcInputForQuoteField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcInputForQuoteField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("InvestUnitID", [](const CThostFtdcInputForQuoteField& a) {return encoding_cast(a.InvestUnitID);}, [](CThostFtdcInputForQuoteField& a, char c[]) {strcpy(a.InvestUnitID, c);})
		.def_property("reserve2", [](const CThostFtdcInputForQuoteField& a) {return encoding_cast(a.reserve2);}, [](CThostFtdcInputForQuoteField& a, char c[]) {strcpy(a.reserve2, c);})
		.def_property("MacAddress", [](const CThostFtdcInputForQuoteField& a) {return encoding_cast(a.MacAddress);}, [](CThostFtdcInputForQuoteField& a, char c[]) {strcpy(a.MacAddress, c);})
		.def_property("InstrumentID", [](const CThostFtdcInputForQuoteField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcInputForQuoteField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def_property("IPAddress", [](const CThostFtdcInputForQuoteField& a) {return encoding_cast(a.IPAddress);}, [](CThostFtdcInputForQuoteField& a, char c[]) {strcpy(a.IPAddress, c);})
		.def("to_dict", [](const CThostFtdcInputForQuoteField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["reserve1"] = encoding_cast(a.reserve1); d["ForQuoteRef"] = encoding_cast(a.ForQuoteRef); d["UserID"] = encoding_cast(a.UserID); d["ExchangeID"] = encoding_cast(a.ExchangeID); d["InvestUnitID"] = encoding_cast(a.InvestUnitID); d["reserve2"] = encoding_cast(a.reserve2); d["MacAddress"] = encoding_cast(a.MacAddress); d["InstrumentID"] = encoding_cast(a.InstrumentID); d["IPAddress"] = encoding_cast(a.IPAddress); return d;});

	py::class_<CThostFtdcForQuoteField>(m, "CThostFtdcForQuoteField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcForQuoteField& a) {return CThostFtdcForQuoteField(a);})
		.def_property("BrokerID", [](const CThostFtdcForQuoteField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcForQuoteField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcForQuoteField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcForQuoteField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_property("reserve1", [](const CThostFtdcForQuoteField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcForQuoteField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("ForQuoteRef", [](const CThostFtdcForQuoteField& a) {return encoding_cast(a.ForQuoteRef);}, [](CThostFtdcForQuoteField& a, char c[]) {strcpy(a.ForQuoteRef, c);})
		.def_property("UserID", [](const CThostFtdcForQuoteField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcForQuoteField& a, char c[]) {strcpy(a.UserID, c);})
		.def_property("ForQuoteLocalID", [](const CThostFtdcForQuoteField& a) {return encoding_cast(a.ForQuoteLocalID);}, [](CThostFtdcForQuoteField& a, char c[]) {strcpy(a.ForQuoteLocalID, c);})
		.def_property("ExchangeID", [](const CThostFtdcForQuoteField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcForQuoteField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("ParticipantID", [](const CThostFtdcForQuoteField& a) {return encoding_cast(a.ParticipantID);}, [](CThostFtdcForQuoteField& a, char c[]) {strcpy(a.ParticipantID, c);})
		.def_property("ClientID", [](const CThostFtdcForQuoteField& a) {return encoding_cast(a.ClientID);}, [](CThostFtdcForQuoteField& a, char c[]) {strcpy(a.ClientID, c);})
		.def_property("reserve2", [](const CThostFtdcForQuoteField& a) {return encoding_cast(a.reserve2);}, [](CThostFtdcForQuoteField& a, char c[]) {strcpy(a.reserve2, c);})
		.def_property("TraderID", [](const CThostFtdcForQuoteField& a) {return encoding_cast(a.TraderID);}, [](CThostFtdcForQuoteField& a, char c[]) {strcpy(a.TraderID, c);})
		.def_readwrite("InstallID", &CThostFtdcForQuoteField::InstallID)
		.def_property("InsertDate", [](const CThostFtdcForQuoteField& a) {return encoding_cast(a.InsertDate);}, [](CThostFtdcForQuoteField& a, char c[]) {strcpy(a.InsertDate, c);})
		.def_property("InsertTime", [](const CThostFtdcForQuoteField& a) {return encoding_cast(a.InsertTime);}, [](CThostFtdcForQuoteField& a, char c[]) {strcpy(a.InsertTime, c);})
		.def_readwrite("ForQuoteStatus", &CThostFtdcForQuoteField::ForQuoteStatus)
		.def_readwrite("FrontID", &CThostFtdcForQuoteField::FrontID)
		.def_readwrite("SessionID", &CThostFtdcForQuoteField::SessionID)
		.def_property("StatusMsg", [](const CThostFtdcForQuoteField& a) {return encoding_cast(a.StatusMsg);}, [](CThostFtdcForQuoteField& a, char c[]) {strcpy(a.StatusMsg, c);})
		.def_property("ActiveUserID", [](const CThostFtdcForQuoteField& a) {return encoding_cast(a.ActiveUserID);}, [](CThostFtdcForQuoteField& a, char c[]) {strcpy(a.ActiveUserID, c);})
		.def_readwrite("BrokerForQutoSeq", &CThostFtdcForQuoteField::BrokerForQutoSeq)
		.def_property("InvestUnitID", [](const CThostFtdcForQuoteField& a) {return encoding_cast(a.InvestUnitID);}, [](CThostFtdcForQuoteField& a, char c[]) {strcpy(a.InvestUnitID, c);})
		.def_property("reserve3", [](const CThostFtdcForQuoteField& a) {return encoding_cast(a.reserve3);}, [](CThostFtdcForQuoteField& a, char c[]) {strcpy(a.reserve3, c);})
		.def_property("MacAddress", [](const CThostFtdcForQuoteField& a) {return encoding_cast(a.MacAddress);}, [](CThostFtdcForQuoteField& a, char c[]) {strcpy(a.MacAddress, c);})
		.def_property("InstrumentID", [](const CThostFtdcForQuoteField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcForQuoteField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def_property("ExchangeInstID", [](const CThostFtdcForQuoteField& a) {return encoding_cast(a.ExchangeInstID);}, [](CThostFtdcForQuoteField& a, char c[]) {strcpy(a.ExchangeInstID, c);})
		.def_property("IPAddress", [](const CThostFtdcForQuoteField& a) {return encoding_cast(a.IPAddress);}, [](CThostFtdcForQuoteField& a, char c[]) {strcpy(a.IPAddress, c);})
		.def("to_dict", [](const CThostFtdcForQuoteField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["reserve1"] = encoding_cast(a.reserve1); d["ForQuoteRef"] = encoding_cast(a.ForQuoteRef); d["UserID"] = encoding_cast(a.UserID); d["ForQuoteLocalID"] = encoding_cast(a.ForQuoteLocalID); d["ExchangeID"] = encoding_cast(a.ExchangeID); d["ParticipantID"] = encoding_cast(a.ParticipantID); d["ClientID"] = encoding_cast(a.ClientID); d["reserve2"] = encoding_cast(a.reserve2); d["TraderID"] = encoding_cast(a.TraderID); d["InstallID"] = a.InstallID; d["InsertDate"] = encoding_cast(a.InsertDate); d["InsertTime"] = encoding_cast(a.InsertTime); d["ForQuoteStatus"] = a.ForQuoteStatus; d["FrontID"] = a.FrontID; d["SessionID"] = a.SessionID; d["StatusMsg"] = encoding_cast(a.StatusMsg); d["ActiveUserID"] = encoding_cast(a.ActiveUserID); d["BrokerForQutoSeq"] = a.BrokerForQutoSeq; d["InvestUnitID"] = encoding_cast(a.InvestUnitID); d["reserve3"] = encoding_cast(a.reserve3); d["MacAddress"] = encoding_cast(a.MacAddress); d["InstrumentID"] = encoding_cast(a.InstrumentID); d["ExchangeInstID"] = encoding_cast(a.ExchangeInstID); d["IPAddress"] = encoding_cast(a.IPAddress); return d;});

	py::class_<CThostFtdcQryForQuoteField>(m, "CThostFtdcQryForQuoteField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryForQuoteField& a) {return CThostFtdcQryForQuoteField(a);})
		.def_property("BrokerID", [](const CThostFtdcQryForQuoteField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcQryForQuoteField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcQryForQuoteField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcQryForQuoteField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_property("reserve1", [](const CThostFtdcQryForQuoteField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcQryForQuoteField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("ExchangeID", [](const CThostFtdcQryForQuoteField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcQryForQuoteField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("InsertTimeStart", [](const CThostFtdcQryForQuoteField& a) {return encoding_cast(a.InsertTimeStart);}, [](CThostFtdcQryForQuoteField& a, char c[]) {strcpy(a.InsertTimeStart, c);})
		.def_property("InsertTimeEnd", [](const CThostFtdcQryForQuoteField& a) {return encoding_cast(a.InsertTimeEnd);}, [](CThostFtdcQryForQuoteField& a, char c[]) {strcpy(a.InsertTimeEnd, c);})
		.def_property("InvestUnitID", [](const CThostFtdcQryForQuoteField& a) {return encoding_cast(a.InvestUnitID);}, [](CThostFtdcQryForQuoteField& a, char c[]) {strcpy(a.InvestUnitID, c);})
		.def_property("InstrumentID", [](const CThostFtdcQryForQuoteField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcQryForQuoteField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def("to_dict", [](const CThostFtdcQryForQuoteField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["reserve1"] = encoding_cast(a.reserve1); d["ExchangeID"] = encoding_cast(a.ExchangeID); d["InsertTimeStart"] = encoding_cast(a.InsertTimeStart); d["InsertTimeEnd"] = encoding_cast(a.InsertTimeEnd); d["InvestUnitID"] = encoding_cast(a.InvestUnitID); d["InstrumentID"] = encoding_cast(a.InstrumentID); return d;});

	py::class_<CThostFtdcExchangeForQuoteField>(m, "CThostFtdcExchangeForQuoteField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcExchangeForQuoteField& a) {return CThostFtdcExchangeForQuoteField(a);})
		.def_property("ForQuoteLocalID", [](const CThostFtdcExchangeForQuoteField& a) {return encoding_cast(a.ForQuoteLocalID);}, [](CThostFtdcExchangeForQuoteField& a, char c[]) {strcpy(a.ForQuoteLocalID, c);})
		.def_property("ExchangeID", [](const CThostFtdcExchangeForQuoteField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcExchangeForQuoteField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("ParticipantID", [](const CThostFtdcExchangeForQuoteField& a) {return encoding_cast(a.ParticipantID);}, [](CThostFtdcExchangeForQuoteField& a, char c[]) {strcpy(a.ParticipantID, c);})
		.def_property("ClientID", [](const CThostFtdcExchangeForQuoteField& a) {return encoding_cast(a.ClientID);}, [](CThostFtdcExchangeForQuoteField& a, char c[]) {strcpy(a.ClientID, c);})
		.def_property("reserve1", [](const CThostFtdcExchangeForQuoteField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcExchangeForQuoteField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("TraderID", [](const CThostFtdcExchangeForQuoteField& a) {return encoding_cast(a.TraderID);}, [](CThostFtdcExchangeForQuoteField& a, char c[]) {strcpy(a.TraderID, c);})
		.def_readwrite("InstallID", &CThostFtdcExchangeForQuoteField::InstallID)
		.def_property("InsertDate", [](const CThostFtdcExchangeForQuoteField& a) {return encoding_cast(a.InsertDate);}, [](CThostFtdcExchangeForQuoteField& a, char c[]) {strcpy(a.InsertDate, c);})
		.def_property("InsertTime", [](const CThostFtdcExchangeForQuoteField& a) {return encoding_cast(a.InsertTime);}, [](CThostFtdcExchangeForQuoteField& a, char c[]) {strcpy(a.InsertTime, c);})
		.def_readwrite("ForQuoteStatus", &CThostFtdcExchangeForQuoteField::ForQuoteStatus)
		.def_property("reserve2", [](const CThostFtdcExchangeForQuoteField& a) {return encoding_cast(a.reserve2);}, [](CThostFtdcExchangeForQuoteField& a, char c[]) {strcpy(a.reserve2, c);})
		.def_property("MacAddress", [](const CThostFtdcExchangeForQuoteField& a) {return encoding_cast(a.MacAddress);}, [](CThostFtdcExchangeForQuoteField& a, char c[]) {strcpy(a.MacAddress, c);})
		.def_property("ExchangeInstID", [](const CThostFtdcExchangeForQuoteField& a) {return encoding_cast(a.ExchangeInstID);}, [](CThostFtdcExchangeForQuoteField& a, char c[]) {strcpy(a.ExchangeInstID, c);})
		.def_property("IPAddress", [](const CThostFtdcExchangeForQuoteField& a) {return encoding_cast(a.IPAddress);}, [](CThostFtdcExchangeForQuoteField& a, char c[]) {strcpy(a.IPAddress, c);})
		.def("to_dict", [](const CThostFtdcExchangeForQuoteField& a) {py::dict d; d["ForQuoteLocalID"] = encoding_cast(a.ForQuoteLocalID); d["ExchangeID"] = encoding_cast(a.ExchangeID); d["ParticipantID"] = encoding_cast(a.ParticipantID); d["ClientID"] = encoding_cast(a.ClientID); d["reserve1"] = encoding_cast(a.reserve1); d["TraderID"] = encoding_cast(a.TraderID); d["InstallID"] = a.InstallID; d["InsertDate"] = encoding_cast(a.InsertDate); d["InsertTime"] = encoding_cast(a.InsertTime); d["ForQuoteStatus"] = a.ForQuoteStatus; d["reserve2"] = encoding_cast(a.reserve2); d["MacAddress"] = encoding_cast(a.MacAddress); d["ExchangeInstID"] = encoding_cast(a.ExchangeInstID); d["IPAddress"] = encoding_cast(a.IPAddress); return d;});

	py::class_<CThostFtdcQryExchangeForQuoteField>(m, "CThostFtdcQryExchangeForQuoteField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryExchangeForQuoteField& a) {return CThostFtdcQryExchangeForQuoteField(a);})
		.def_property("ParticipantID", [](const CThostFtdcQryExchangeForQuoteField& a) {return encoding_cast(a.ParticipantID);}, [](CThostFtdcQryExchangeForQuoteField& a, char c[]) {strcpy(a.ParticipantID, c);})
		.def_property("ClientID", [](const CThostFtdcQryExchangeForQuoteField& a) {return encoding_cast(a.ClientID);}, [](CThostFtdcQryExchangeForQuoteField& a, char c[]) {strcpy(a.ClientID, c);})
		.def_property("reserve1", [](const CThostFtdcQryExchangeForQuoteField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcQryExchangeForQuoteField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("ExchangeID", [](const CThostFtdcQryExchangeForQuoteField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcQryExchangeForQuoteField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("TraderID", [](const CThostFtdcQryExchangeForQuoteField& a) {return encoding_cast(a.TraderID);}, [](CThostFtdcQryExchangeForQuoteField& a, char c[]) {strcpy(a.TraderID, c);})
		.def_property("ExchangeInstID", [](const CThostFtdcQryExchangeForQuoteField& a) {return encoding_cast(a.ExchangeInstID);}, [](CThostFtdcQryExchangeForQuoteField& a, char c[]) {strcpy(a.ExchangeInstID, c);})
		.def("to_dict", [](const CThostFtdcQryExchangeForQuoteField& a) {py::dict d; d["ParticipantID"] = encoding_cast(a.ParticipantID); d["ClientID"] = encoding_cast(a.ClientID); d["reserve1"] = encoding_cast(a.reserve1); d["ExchangeID"] = encoding_cast(a.ExchangeID); d["TraderID"] = encoding_cast(a.TraderID); d["ExchangeInstID"] = encoding_cast(a.ExchangeInstID); return d;});

	py::class_<CThostFtdcInputQuoteField>(m, "CThostFtdcInputQuoteField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcInputQuoteField& a) {return CThostFtdcInputQuoteField(a);})
		.def_property("BrokerID", [](const CThostFtdcInputQuoteField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcInputQuoteField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcInputQuoteField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcInputQuoteField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_property("reserve1", [](const CThostFtdcInputQuoteField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcInputQuoteField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("QuoteRef", [](const CThostFtdcInputQuoteField& a) {return encoding_cast(a.QuoteRef);}, [](CThostFtdcInputQuoteField& a, char c[]) {strcpy(a.QuoteRef, c);})
		.def_property("UserID", [](const CThostFtdcInputQuoteField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcInputQuoteField& a, char c[]) {strcpy(a.UserID, c);})
		.def_readwrite("AskPrice", &CThostFtdcInputQuoteField::AskPrice)
		.def_readwrite("BidPrice", &CThostFtdcInputQuoteField::BidPrice)
		.def_readwrite("AskVolume", &CThostFtdcInputQuoteField::AskVolume)
		.def_readwrite("BidVolume", &CThostFtdcInputQuoteField::BidVolume)
		.def_readwrite("RequestID", &CThostFtdcInputQuoteField::RequestID)
		.def_property("BusinessUnit", [](const CThostFtdcInputQuoteField& a) {return encoding_cast(a.BusinessUnit);}, [](CThostFtdcInputQuoteField& a, char c[]) {strcpy(a.BusinessUnit, c);})
		.def_readwrite("AskOffsetFlag", &CThostFtdcInputQuoteField::AskOffsetFlag)
		.def_readwrite("BidOffsetFlag", &CThostFtdcInputQuoteField::BidOffsetFlag)
		.def_readwrite("AskHedgeFlag", &CThostFtdcInputQuoteField::AskHedgeFlag)
		.def_readwrite("BidHedgeFlag", &CThostFtdcInputQuoteField::BidHedgeFlag)
		.def_property("AskOrderRef", [](const CThostFtdcInputQuoteField& a) {return encoding_cast(a.AskOrderRef);}, [](CThostFtdcInputQuoteField& a, char c[]) {strcpy(a.AskOrderRef, c);})
		.def_property("BidOrderRef", [](const CThostFtdcInputQuoteField& a) {return encoding_cast(a.BidOrderRef);}, [](CThostFtdcInputQuoteField& a, char c[]) {strcpy(a.BidOrderRef, c);})
		.def_property("ForQuoteSysID", [](const CThostFtdcInputQuoteField& a) {return encoding_cast(a.ForQuoteSysID);}, [](CThostFtdcInputQuoteField& a, char c[]) {strcpy(a.ForQuoteSysID, c);})
		.def_property("ExchangeID", [](const CThostFtdcInputQuoteField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcInputQuoteField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("InvestUnitID", [](const CThostFtdcInputQuoteField& a) {return encoding_cast(a.InvestUnitID);}, [](CThostFtdcInputQuoteField& a, char c[]) {strcpy(a.InvestUnitID, c);})
		.def_property("ClientID", [](const CThostFtdcInputQuoteField& a) {return encoding_cast(a.ClientID);}, [](CThostFtdcInputQuoteField& a, char c[]) {strcpy(a.ClientID, c);})
		.def_property("reserve2", [](const CThostFtdcInputQuoteField& a) {return encoding_cast(a.reserve2);}, [](CThostFtdcInputQuoteField& a, char c[]) {strcpy(a.reserve2, c);})
		.def_property("MacAddress", [](const CThostFtdcInputQuoteField& a) {return encoding_cast(a.MacAddress);}, [](CThostFtdcInputQuoteField& a, char c[]) {strcpy(a.MacAddress, c);})
		.def_property("InstrumentID", [](const CThostFtdcInputQuoteField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcInputQuoteField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def_property("IPAddress", [](const CThostFtdcInputQuoteField& a) {return encoding_cast(a.IPAddress);}, [](CThostFtdcInputQuoteField& a, char c[]) {strcpy(a.IPAddress, c);})
		.def("to_dict", [](const CThostFtdcInputQuoteField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["reserve1"] = encoding_cast(a.reserve1); d["QuoteRef"] = encoding_cast(a.QuoteRef); d["UserID"] = encoding_cast(a.UserID); d["AskPrice"] = a.AskPrice; d["BidPrice"] = a.BidPrice; d["AskVolume"] = a.AskVolume; d["BidVolume"] = a.BidVolume; d["RequestID"] = a.RequestID; d["BusinessUnit"] = encoding_cast(a.BusinessUnit); d["AskOffsetFlag"] = a.AskOffsetFlag; d["BidOffsetFlag"] = a.BidOffsetFlag; d["AskHedgeFlag"] = a.AskHedgeFlag; d["BidHedgeFlag"] = a.BidHedgeFlag; d["AskOrderRef"] = encoding_cast(a.AskOrderRef); d["BidOrderRef"] = encoding_cast(a.BidOrderRef); d["ForQuoteSysID"] = encoding_cast(a.ForQuoteSysID); d["ExchangeID"] = encoding_cast(a.ExchangeID); d["InvestUnitID"] = encoding_cast(a.InvestUnitID); d["ClientID"] = encoding_cast(a.ClientID); d["reserve2"] = encoding_cast(a.reserve2); d["MacAddress"] = encoding_cast(a.MacAddress); d["InstrumentID"] = encoding_cast(a.InstrumentID); d["IPAddress"] = encoding_cast(a.IPAddress); return d;});

	py::class_<CThostFtdcInputQuoteActionField>(m, "CThostFtdcInputQuoteActionField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcInputQuoteActionField& a) {return CThostFtdcInputQuoteActionField(a);})
		.def_property("BrokerID", [](const CThostFtdcInputQuoteActionField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcInputQuoteActionField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcInputQuoteActionField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcInputQuoteActionField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_readwrite("QuoteActionRef", &CThostFtdcInputQuoteActionField::QuoteActionRef)
		.def_property("QuoteRef", [](const CThostFtdcInputQuoteActionField& a) {return encoding_cast(a.QuoteRef);}, [](CThostFtdcInputQuoteActionField& a, char c[]) {strcpy(a.QuoteRef, c);})
		.def_readwrite("RequestID", &CThostFtdcInputQuoteActionField::RequestID)
		.def_readwrite("FrontID", &CThostFtdcInputQuoteActionField::FrontID)
		.def_readwrite("SessionID", &CThostFtdcInputQuoteActionField::SessionID)
		.def_property("ExchangeID", [](const CThostFtdcInputQuoteActionField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcInputQuoteActionField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("QuoteSysID", [](const CThostFtdcInputQuoteActionField& a) {return encoding_cast(a.QuoteSysID);}, [](CThostFtdcInputQuoteActionField& a, char c[]) {strcpy(a.QuoteSysID, c);})
		.def_readwrite("ActionFlag", &CThostFtdcInputQuoteActionField::ActionFlag)
		.def_property("UserID", [](const CThostFtdcInputQuoteActionField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcInputQuoteActionField& a, char c[]) {strcpy(a.UserID, c);})
		.def_property("reserve1", [](const CThostFtdcInputQuoteActionField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcInputQuoteActionField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("InvestUnitID", [](const CThostFtdcInputQuoteActionField& a) {return encoding_cast(a.InvestUnitID);}, [](CThostFtdcInputQuoteActionField& a, char c[]) {strcpy(a.InvestUnitID, c);})
		.def_property("ClientID", [](const CThostFtdcInputQuoteActionField& a) {return encoding_cast(a.ClientID);}, [](CThostFtdcInputQuoteActionField& a, char c[]) {strcpy(a.ClientID, c);})
		.def_property("reserve2", [](const CThostFtdcInputQuoteActionField& a) {return encoding_cast(a.reserve2);}, [](CThostFtdcInputQuoteActionField& a, char c[]) {strcpy(a.reserve2, c);})
		.def_property("MacAddress", [](const CThostFtdcInputQuoteActionField& a) {return encoding_cast(a.MacAddress);}, [](CThostFtdcInputQuoteActionField& a, char c[]) {strcpy(a.MacAddress, c);})
		.def_property("InstrumentID", [](const CThostFtdcInputQuoteActionField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcInputQuoteActionField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def_property("IPAddress", [](const CThostFtdcInputQuoteActionField& a) {return encoding_cast(a.IPAddress);}, [](CThostFtdcInputQuoteActionField& a, char c[]) {strcpy(a.IPAddress, c);})
		.def("to_dict", [](const CThostFtdcInputQuoteActionField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["QuoteActionRef"] = a.QuoteActionRef; d["QuoteRef"] = encoding_cast(a.QuoteRef); d["RequestID"] = a.RequestID; d["FrontID"] = a.FrontID; d["SessionID"] = a.SessionID; d["ExchangeID"] = encoding_cast(a.ExchangeID); d["QuoteSysID"] = encoding_cast(a.QuoteSysID); d["ActionFlag"] = a.ActionFlag; d["UserID"] = encoding_cast(a.UserID); d["reserve1"] = encoding_cast(a.reserve1); d["InvestUnitID"] = encoding_cast(a.InvestUnitID); d["ClientID"] = encoding_cast(a.ClientID); d["reserve2"] = encoding_cast(a.reserve2); d["MacAddress"] = encoding_cast(a.MacAddress); d["InstrumentID"] = encoding_cast(a.InstrumentID); d["IPAddress"] = encoding_cast(a.IPAddress); return d;});

	py::class_<CThostFtdcQuoteField>(m, "CThostFtdcQuoteField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQuoteField& a) {return CThostFtdcQuoteField(a);})
		.def_property("BrokerID", [](const CThostFtdcQuoteField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcQuoteField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcQuoteField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcQuoteField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_property("reserve1", [](const CThostFtdcQuoteField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcQuoteField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("QuoteRef", [](const CThostFtdcQuoteField& a) {return encoding_cast(a.QuoteRef);}, [](CThostFtdcQuoteField& a, char c[]) {strcpy(a.QuoteRef, c);})
		.def_property("UserID", [](const CThostFtdcQuoteField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcQuoteField& a, char c[]) {strcpy(a.UserID, c);})
		.def_readwrite("AskPrice", &CThostFtdcQuoteField::AskPrice)
		.def_readwrite("BidPrice", &CThostFtdcQuoteField::BidPrice)
		.def_readwrite("AskVolume", &CThostFtdcQuoteField::AskVolume)
		.def_readwrite("BidVolume", &CThostFtdcQuoteField::BidVolume)
		.def_readwrite("RequestID", &CThostFtdcQuoteField::RequestID)
		.def_property("BusinessUnit", [](const CThostFtdcQuoteField& a) {return encoding_cast(a.BusinessUnit);}, [](CThostFtdcQuoteField& a, char c[]) {strcpy(a.BusinessUnit, c);})
		.def_readwrite("AskOffsetFlag", &CThostFtdcQuoteField::AskOffsetFlag)
		.def_readwrite("BidOffsetFlag", &CThostFtdcQuoteField::BidOffsetFlag)
		.def_readwrite("AskHedgeFlag", &CThostFtdcQuoteField::AskHedgeFlag)
		.def_readwrite("BidHedgeFlag", &CThostFtdcQuoteField::BidHedgeFlag)
		.def_property("QuoteLocalID", [](const CThostFtdcQuoteField& a) {return encoding_cast(a.QuoteLocalID);}, [](CThostFtdcQuoteField& a, char c[]) {strcpy(a.QuoteLocalID, c);})
		.def_property("ExchangeID", [](const CThostFtdcQuoteField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcQuoteField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("ParticipantID", [](const CThostFtdcQuoteField& a) {return encoding_cast(a.ParticipantID);}, [](CThostFtdcQuoteField& a, char c[]) {strcpy(a.ParticipantID, c);})
		.def_property("ClientID", [](const CThostFtdcQuoteField& a) {return encoding_cast(a.ClientID);}, [](CThostFtdcQuoteField& a, char c[]) {strcpy(a.ClientID, c);})
		.def_property("reserve2", [](const CThostFtdcQuoteField& a) {return encoding_cast(a.reserve2);}, [](CThostFtdcQuoteField& a, char c[]) {strcpy(a.reserve2, c);})
		.def_property("TraderID", [](const CThostFtdcQuoteField& a) {return encoding_cast(a.TraderID);}, [](CThostFtdcQuoteField& a, char c[]) {strcpy(a.TraderID, c);})
		.def_readwrite("InstallID", &CThostFtdcQuoteField::InstallID)
		.def_readwrite("NotifySequence", &CThostFtdcQuoteField::NotifySequence)
		.def_readwrite("OrderSubmitStatus", &CThostFtdcQuoteField::OrderSubmitStatus)
		.def_property("TradingDay", [](const CThostFtdcQuoteField& a) {return encoding_cast(a.TradingDay);}, [](CThostFtdcQuoteField& a, char c[]) {strcpy(a.TradingDay, c);})
		.def_readwrite("SettlementID", &CThostFtdcQuoteField::SettlementID)
		.def_property("QuoteSysID", [](const CThostFtdcQuoteField& a) {return encoding_cast(a.QuoteSysID);}, [](CThostFtdcQuoteField& a, char c[]) {strcpy(a.QuoteSysID, c);})
		.def_property("InsertDate", [](const CThostFtdcQuoteField& a) {return encoding_cast(a.InsertDate);}, [](CThostFtdcQuoteField& a, char c[]) {strcpy(a.InsertDate, c);})
		.def_property("InsertTime", [](const CThostFtdcQuoteField& a) {return encoding_cast(a.InsertTime);}, [](CThostFtdcQuoteField& a, char c[]) {strcpy(a.InsertTime, c);})
		.def_property("CancelTime", [](const CThostFtdcQuoteField& a) {return encoding_cast(a.CancelTime);}, [](CThostFtdcQuoteField& a, char c[]) {strcpy(a.CancelTime, c);})
		.def_readwrite("QuoteStatus", &CThostFtdcQuoteField::QuoteStatus)
		.def_property("ClearingPartID", [](const CThostFtdcQuoteField& a) {return encoding_cast(a.ClearingPartID);}, [](CThostFtdcQuoteField& a, char c[]) {strcpy(a.ClearingPartID, c);})
		.def_readwrite("SequenceNo", &CThostFtdcQuoteField::SequenceNo)
		.def_property("AskOrderSysID", [](const CThostFtdcQuoteField& a) {return encoding_cast(a.AskOrderSysID);}, [](CThostFtdcQuoteField& a, char c[]) {strcpy(a.AskOrderSysID, c);})
		.def_property("BidOrderSysID", [](const CThostFtdcQuoteField& a) {return encoding_cast(a.BidOrderSysID);}, [](CThostFtdcQuoteField& a, char c[]) {strcpy(a.BidOrderSysID, c);})
		.def_readwrite("FrontID", &CThostFtdcQuoteField::FrontID)
		.def_readwrite("SessionID", &CThostFtdcQuoteField::SessionID)
		.def_property("UserProductInfo", [](const CThostFtdcQuoteField& a) {return encoding_cast(a.UserProductInfo);}, [](CThostFtdcQuoteField& a, char c[]) {strcpy(a.UserProductInfo, c);})
		.def_property("StatusMsg", [](const CThostFtdcQuoteField& a) {return encoding_cast(a.StatusMsg);}, [](CThostFtdcQuoteField& a, char c[]) {strcpy(a.StatusMsg, c);})
		.def_property("ActiveUserID", [](const CThostFtdcQuoteField& a) {return encoding_cast(a.ActiveUserID);}, [](CThostFtdcQuoteField& a, char c[]) {strcpy(a.ActiveUserID, c);})
		.def_readwrite("BrokerQuoteSeq", &CThostFtdcQuoteField::BrokerQuoteSeq)
		.def_property("AskOrderRef", [](const CThostFtdcQuoteField& a) {return encoding_cast(a.AskOrderRef);}, [](CThostFtdcQuoteField& a, char c[]) {strcpy(a.AskOrderRef, c);})
		.def_property("BidOrderRef", [](const CThostFtdcQuoteField& a) {return encoding_cast(a.BidOrderRef);}, [](CThostFtdcQuoteField& a, char c[]) {strcpy(a.BidOrderRef, c);})
		.def_property("ForQuoteSysID", [](const CThostFtdcQuoteField& a) {return encoding_cast(a.ForQuoteSysID);}, [](CThostFtdcQuoteField& a, char c[]) {strcpy(a.ForQuoteSysID, c);})
		.def_property("BranchID", [](const CThostFtdcQuoteField& a) {return encoding_cast(a.BranchID);}, [](CThostFtdcQuoteField& a, char c[]) {strcpy(a.BranchID, c);})
		.def_property("InvestUnitID", [](const CThostFtdcQuoteField& a) {return encoding_cast(a.InvestUnitID);}, [](CThostFtdcQuoteField& a, char c[]) {strcpy(a.InvestUnitID, c);})
		.def_property("AccountID", [](const CThostFtdcQuoteField& a) {return encoding_cast(a.AccountID);}, [](CThostFtdcQuoteField& a, char c[]) {strcpy(a.AccountID, c);})
		.def_property("CurrencyID", [](const CThostFtdcQuoteField& a) {return encoding_cast(a.CurrencyID);}, [](CThostFtdcQuoteField& a, char c[]) {strcpy(a.CurrencyID, c);})
		.def_property("reserve3", [](const CThostFtdcQuoteField& a) {return encoding_cast(a.reserve3);}, [](CThostFtdcQuoteField& a, char c[]) {strcpy(a.reserve3, c);})
		.def_property("MacAddress", [](const CThostFtdcQuoteField& a) {return encoding_cast(a.MacAddress);}, [](CThostFtdcQuoteField& a, char c[]) {strcpy(a.MacAddress, c);})
		.def_property("InstrumentID", [](const CThostFtdcQuoteField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcQuoteField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def_property("ExchangeInstID", [](const CThostFtdcQuoteField& a) {return encoding_cast(a.ExchangeInstID);}, [](CThostFtdcQuoteField& a, char c[]) {strcpy(a.ExchangeInstID, c);})
		.def_property("IPAddress", [](const CThostFtdcQuoteField& a) {return encoding_cast(a.IPAddress);}, [](CThostFtdcQuoteField& a, char c[]) {strcpy(a.IPAddress, c);})
		.def("to_dict", [](const CThostFtdcQuoteField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["reserve1"] = encoding_cast(a.reserve1); d["QuoteRef"] = encoding_cast(a.QuoteRef); d["UserID"] = encoding_cast(a.UserID); d["AskPrice"] = a.AskPrice; d["BidPrice"] = a.BidPrice; d["AskVolume"] = a.AskVolume; d["BidVolume"] = a.BidVolume; d["RequestID"] = a.RequestID; d["BusinessUnit"] = encoding_cast(a.BusinessUnit); d["AskOffsetFlag"] = a.AskOffsetFlag; d["BidOffsetFlag"] = a.BidOffsetFlag; d["AskHedgeFlag"] = a.AskHedgeFlag; d["BidHedgeFlag"] = a.BidHedgeFlag; d["QuoteLocalID"] = encoding_cast(a.QuoteLocalID); d["ExchangeID"] = encoding_cast(a.ExchangeID); d["ParticipantID"] = encoding_cast(a.ParticipantID); d["ClientID"] = encoding_cast(a.ClientID); d["reserve2"] = encoding_cast(a.reserve2); d["TraderID"] = encoding_cast(a.TraderID); d["InstallID"] = a.InstallID; d["NotifySequence"] = a.NotifySequence; d["OrderSubmitStatus"] = a.OrderSubmitStatus; d["TradingDay"] = encoding_cast(a.TradingDay); d["SettlementID"] = a.SettlementID; d["QuoteSysID"] = encoding_cast(a.QuoteSysID); d["InsertDate"] = encoding_cast(a.InsertDate); d["InsertTime"] = encoding_cast(a.InsertTime); d["CancelTime"] = encoding_cast(a.CancelTime); d["QuoteStatus"] = a.QuoteStatus; d["ClearingPartID"] = encoding_cast(a.ClearingPartID); d["SequenceNo"] = a.SequenceNo; d["AskOrderSysID"] = encoding_cast(a.AskOrderSysID); d["BidOrderSysID"] = encoding_cast(a.BidOrderSysID); d["FrontID"] = a.FrontID; d["SessionID"] = a.SessionID; d["UserProductInfo"] = encoding_cast(a.UserProductInfo); d["StatusMsg"] = encoding_cast(a.StatusMsg); d["ActiveUserID"] = encoding_cast(a.ActiveUserID); d["BrokerQuoteSeq"] = a.BrokerQuoteSeq; d["AskOrderRef"] = encoding_cast(a.AskOrderRef); d["BidOrderRef"] = encoding_cast(a.BidOrderRef); d["ForQuoteSysID"] = encoding_cast(a.ForQuoteSysID); d["BranchID"] = encoding_cast(a.BranchID); d["InvestUnitID"] = encoding_cast(a.InvestUnitID); d["AccountID"] = encoding_cast(a.AccountID); d["CurrencyID"] = encoding_cast(a.CurrencyID); d["reserve3"] = encoding_cast(a.reserve3); d["MacAddress"] = encoding_cast(a.MacAddress); d["InstrumentID"] = encoding_cast(a.InstrumentID); d["ExchangeInstID"] = encoding_cast(a.ExchangeInstID); d["IPAddress"] = encoding_cast(a.IPAddress); return d;});

	py::class_<CThostFtdcQuoteActionField>(m, "CThostFtdcQuoteActionField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQuoteActionField& a) {return CThostFtdcQuoteActionField(a);})
		.def_property("BrokerID", [](const CThostFtdcQuoteActionField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcQuoteActionField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcQuoteActionField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcQuoteActionField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_readwrite("QuoteActionRef", &CThostFtdcQuoteActionField::QuoteActionRef)
		.def_property("QuoteRef", [](const CThostFtdcQuoteActionField& a) {return encoding_cast(a.QuoteRef);}, [](CThostFtdcQuoteActionField& a, char c[]) {strcpy(a.QuoteRef, c);})
		.def_readwrite("RequestID", &CThostFtdcQuoteActionField::RequestID)
		.def_readwrite("FrontID", &CThostFtdcQuoteActionField::FrontID)
		.def_readwrite("SessionID", &CThostFtdcQuoteActionField::SessionID)
		.def_property("ExchangeID", [](const CThostFtdcQuoteActionField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcQuoteActionField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("QuoteSysID", [](const CThostFtdcQuoteActionField& a) {return encoding_cast(a.QuoteSysID);}, [](CThostFtdcQuoteActionField& a, char c[]) {strcpy(a.QuoteSysID, c);})
		.def_readwrite("ActionFlag", &CThostFtdcQuoteActionField::ActionFlag)
		.def_property("ActionDate", [](const CThostFtdcQuoteActionField& a) {return encoding_cast(a.ActionDate);}, [](CThostFtdcQuoteActionField& a, char c[]) {strcpy(a.ActionDate, c);})
		.def_property("ActionTime", [](const CThostFtdcQuoteActionField& a) {return encoding_cast(a.ActionTime);}, [](CThostFtdcQuoteActionField& a, char c[]) {strcpy(a.ActionTime, c);})
		.def_property("TraderID", [](const CThostFtdcQuoteActionField& a) {return encoding_cast(a.TraderID);}, [](CThostFtdcQuoteActionField& a, char c[]) {strcpy(a.TraderID, c);})
		.def_readwrite("InstallID", &CThostFtdcQuoteActionField::InstallID)
		.def_property("QuoteLocalID", [](const CThostFtdcQuoteActionField& a) {return encoding_cast(a.QuoteLocalID);}, [](CThostFtdcQuoteActionField& a, char c[]) {strcpy(a.QuoteLocalID, c);})
		.def_property("ActionLocalID", [](const CThostFtdcQuoteActionField& a) {return encoding_cast(a.ActionLocalID);}, [](CThostFtdcQuoteActionField& a, char c[]) {strcpy(a.ActionLocalID, c);})
		.def_property("ParticipantID", [](const CThostFtdcQuoteActionField& a) {return encoding_cast(a.ParticipantID);}, [](CThostFtdcQuoteActionField& a, char c[]) {strcpy(a.ParticipantID, c);})
		.def_property("ClientID", [](const CThostFtdcQuoteActionField& a) {return encoding_cast(a.ClientID);}, [](CThostFtdcQuoteActionField& a, char c[]) {strcpy(a.ClientID, c);})
		.def_property("BusinessUnit", [](const CThostFtdcQuoteActionField& a) {return encoding_cast(a.BusinessUnit);}, [](CThostFtdcQuoteActionField& a, char c[]) {strcpy(a.BusinessUnit, c);})
		.def_readwrite("OrderActionStatus", &CThostFtdcQuoteActionField::OrderActionStatus)
		.def_property("UserID", [](const CThostFtdcQuoteActionField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcQuoteActionField& a, char c[]) {strcpy(a.UserID, c);})
		.def_property("StatusMsg", [](const CThostFtdcQuoteActionField& a) {return encoding_cast(a.StatusMsg);}, [](CThostFtdcQuoteActionField& a, char c[]) {strcpy(a.StatusMsg, c);})
		.def_property("reserve1", [](const CThostFtdcQuoteActionField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcQuoteActionField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("BranchID", [](const CThostFtdcQuoteActionField& a) {return encoding_cast(a.BranchID);}, [](CThostFtdcQuoteActionField& a, char c[]) {strcpy(a.BranchID, c);})
		.def_property("InvestUnitID", [](const CThostFtdcQuoteActionField& a) {return encoding_cast(a.InvestUnitID);}, [](CThostFtdcQuoteActionField& a, char c[]) {strcpy(a.InvestUnitID, c);})
		.def_property("reserve2", [](const CThostFtdcQuoteActionField& a) {return encoding_cast(a.reserve2);}, [](CThostFtdcQuoteActionField& a, char c[]) {strcpy(a.reserve2, c);})
		.def_property("MacAddress", [](const CThostFtdcQuoteActionField& a) {return encoding_cast(a.MacAddress);}, [](CThostFtdcQuoteActionField& a, char c[]) {strcpy(a.MacAddress, c);})
		.def_property("InstrumentID", [](const CThostFtdcQuoteActionField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcQuoteActionField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def_property("IPAddress", [](const CThostFtdcQuoteActionField& a) {return encoding_cast(a.IPAddress);}, [](CThostFtdcQuoteActionField& a, char c[]) {strcpy(a.IPAddress, c);})
		.def("to_dict", [](const CThostFtdcQuoteActionField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["QuoteActionRef"] = a.QuoteActionRef; d["QuoteRef"] = encoding_cast(a.QuoteRef); d["RequestID"] = a.RequestID; d["FrontID"] = a.FrontID; d["SessionID"] = a.SessionID; d["ExchangeID"] = encoding_cast(a.ExchangeID); d["QuoteSysID"] = encoding_cast(a.QuoteSysID); d["ActionFlag"] = a.ActionFlag; d["ActionDate"] = encoding_cast(a.ActionDate); d["ActionTime"] = encoding_cast(a.ActionTime); d["TraderID"] = encoding_cast(a.TraderID); d["InstallID"] = a.InstallID; d["QuoteLocalID"] = encoding_cast(a.QuoteLocalID); d["ActionLocalID"] = encoding_cast(a.ActionLocalID); d["ParticipantID"] = encoding_cast(a.ParticipantID); d["ClientID"] = encoding_cast(a.ClientID); d["BusinessUnit"] = encoding_cast(a.BusinessUnit); d["OrderActionStatus"] = a.OrderActionStatus; d["UserID"] = encoding_cast(a.UserID); d["StatusMsg"] = encoding_cast(a.StatusMsg); d["reserve1"] = encoding_cast(a.reserve1); d["BranchID"] = encoding_cast(a.BranchID); d["InvestUnitID"] = encoding_cast(a.InvestUnitID); d["reserve2"] = encoding_cast(a.reserve2); d["MacAddress"] = encoding_cast(a.MacAddress); d["InstrumentID"] = encoding_cast(a.InstrumentID); d["IPAddress"] = encoding_cast(a.IPAddress); return d;});

	py::class_<CThostFtdcQryQuoteField>(m, "CThostFtdcQryQuoteField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryQuoteField& a) {return CThostFtdcQryQuoteField(a);})
		.def_property("BrokerID", [](const CThostFtdcQryQuoteField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcQryQuoteField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcQryQuoteField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcQryQuoteField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_property("reserve1", [](const CThostFtdcQryQuoteField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcQryQuoteField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("ExchangeID", [](const CThostFtdcQryQuoteField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcQryQuoteField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("QuoteSysID", [](const CThostFtdcQryQuoteField& a) {return encoding_cast(a.QuoteSysID);}, [](CThostFtdcQryQuoteField& a, char c[]) {strcpy(a.QuoteSysID, c);})
		.def_property("InsertTimeStart", [](const CThostFtdcQryQuoteField& a) {return encoding_cast(a.InsertTimeStart);}, [](CThostFtdcQryQuoteField& a, char c[]) {strcpy(a.InsertTimeStart, c);})
		.def_property("InsertTimeEnd", [](const CThostFtdcQryQuoteField& a) {return encoding_cast(a.InsertTimeEnd);}, [](CThostFtdcQryQuoteField& a, char c[]) {strcpy(a.InsertTimeEnd, c);})
		.def_property("InvestUnitID", [](const CThostFtdcQryQuoteField& a) {return encoding_cast(a.InvestUnitID);}, [](CThostFtdcQryQuoteField& a, char c[]) {strcpy(a.InvestUnitID, c);})
		.def_property("InstrumentID", [](const CThostFtdcQryQuoteField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcQryQuoteField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def("to_dict", [](const CThostFtdcQryQuoteField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["reserve1"] = encoding_cast(a.reserve1); d["ExchangeID"] = encoding_cast(a.ExchangeID); d["QuoteSysID"] = encoding_cast(a.QuoteSysID); d["InsertTimeStart"] = encoding_cast(a.InsertTimeStart); d["InsertTimeEnd"] = encoding_cast(a.InsertTimeEnd); d["InvestUnitID"] = encoding_cast(a.InvestUnitID); d["InstrumentID"] = encoding_cast(a.InstrumentID); return d;});

	py::class_<CThostFtdcExchangeQuoteField>(m, "CThostFtdcExchangeQuoteField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcExchangeQuoteField& a) {return CThostFtdcExchangeQuoteField(a);})
		.def_readwrite("AskPrice", &CThostFtdcExchangeQuoteField::AskPrice)
		.def_readwrite("BidPrice", &CThostFtdcExchangeQuoteField::BidPrice)
		.def_readwrite("AskVolume", &CThostFtdcExchangeQuoteField::AskVolume)
		.def_readwrite("BidVolume", &CThostFtdcExchangeQuoteField::BidVolume)
		.def_readwrite("RequestID", &CThostFtdcExchangeQuoteField::RequestID)
		.def_property("BusinessUnit", [](const CThostFtdcExchangeQuoteField& a) {return encoding_cast(a.BusinessUnit);}, [](CThostFtdcExchangeQuoteField& a, char c[]) {strcpy(a.BusinessUnit, c);})
		.def_readwrite("AskOffsetFlag", &CThostFtdcExchangeQuoteField::AskOffsetFlag)
		.def_readwrite("BidOffsetFlag", &CThostFtdcExchangeQuoteField::BidOffsetFlag)
		.def_readwrite("AskHedgeFlag", &CThostFtdcExchangeQuoteField::AskHedgeFlag)
		.def_readwrite("BidHedgeFlag", &CThostFtdcExchangeQuoteField::BidHedgeFlag)
		.def_property("QuoteLocalID", [](const CThostFtdcExchangeQuoteField& a) {return encoding_cast(a.QuoteLocalID);}, [](CThostFtdcExchangeQuoteField& a, char c[]) {strcpy(a.QuoteLocalID, c);})
		.def_property("ExchangeID", [](const CThostFtdcExchangeQuoteField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcExchangeQuoteField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("ParticipantID", [](const CThostFtdcExchangeQuoteField& a) {return encoding_cast(a.ParticipantID);}, [](CThostFtdcExchangeQuoteField& a, char c[]) {strcpy(a.ParticipantID, c);})
		.def_property("ClientID", [](const CThostFtdcExchangeQuoteField& a) {return encoding_cast(a.ClientID);}, [](CThostFtdcExchangeQuoteField& a, char c[]) {strcpy(a.ClientID, c);})
		.def_property("reserve1", [](const CThostFtdcExchangeQuoteField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcExchangeQuoteField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("TraderID", [](const CThostFtdcExchangeQuoteField& a) {return encoding_cast(a.TraderID);}, [](CThostFtdcExchangeQuoteField& a, char c[]) {strcpy(a.TraderID, c);})
		.def_readwrite("InstallID", &CThostFtdcExchangeQuoteField::InstallID)
		.def_readwrite("NotifySequence", &CThostFtdcExchangeQuoteField::NotifySequence)
		.def_readwrite("OrderSubmitStatus", &CThostFtdcExchangeQuoteField::OrderSubmitStatus)
		.def_property("TradingDay", [](const CThostFtdcExchangeQuoteField& a) {return encoding_cast(a.TradingDay);}, [](CThostFtdcExchangeQuoteField& a, char c[]) {strcpy(a.TradingDay, c);})
		.def_readwrite("SettlementID", &CThostFtdcExchangeQuoteField::SettlementID)
		.def_property("QuoteSysID", [](const CThostFtdcExchangeQuoteField& a) {return encoding_cast(a.QuoteSysID);}, [](CThostFtdcExchangeQuoteField& a, char c[]) {strcpy(a.QuoteSysID, c);})
		.def_property("InsertDate", [](const CThostFtdcExchangeQuoteField& a) {return encoding_cast(a.InsertDate);}, [](CThostFtdcExchangeQuoteField& a, char c[]) {strcpy(a.InsertDate, c);})
		.def_property("InsertTime", [](const CThostFtdcExchangeQuoteField& a) {return encoding_cast(a.InsertTime);}, [](CThostFtdcExchangeQuoteField& a, char c[]) {strcpy(a.InsertTime, c);})
		.def_property("CancelTime", [](const CThostFtdcExchangeQuoteField& a) {return encoding_cast(a.CancelTime);}, [](CThostFtdcExchangeQuoteField& a, char c[]) {strcpy(a.CancelTime, c);})
		.def_readwrite("QuoteStatus", &CThostFtdcExchangeQuoteField::QuoteStatus)
		.def_property("ClearingPartID", [](const CThostFtdcExchangeQuoteField& a) {return encoding_cast(a.ClearingPartID);}, [](CThostFtdcExchangeQuoteField& a, char c[]) {strcpy(a.ClearingPartID, c);})
		.def_readwrite("SequenceNo", &CThostFtdcExchangeQuoteField::SequenceNo)
		.def_property("AskOrderSysID", [](const CThostFtdcExchangeQuoteField& a) {return encoding_cast(a.AskOrderSysID);}, [](CThostFtdcExchangeQuoteField& a, char c[]) {strcpy(a.AskOrderSysID, c);})
		.def_property("BidOrderSysID", [](const CThostFtdcExchangeQuoteField& a) {return encoding_cast(a.BidOrderSysID);}, [](CThostFtdcExchangeQuoteField& a, char c[]) {strcpy(a.BidOrderSysID, c);})
		.def_property("ForQuoteSysID", [](const CThostFtdcExchangeQuoteField& a) {return encoding_cast(a.ForQuoteSysID);}, [](CThostFtdcExchangeQuoteField& a, char c[]) {strcpy(a.ForQuoteSysID, c);})
		.def_property("BranchID", [](const CThostFtdcExchangeQuoteField& a) {return encoding_cast(a.BranchID);}, [](CThostFtdcExchangeQuoteField& a, char c[]) {strcpy(a.BranchID, c);})
		.def_property("reserve2", [](const CThostFtdcExchangeQuoteField& a) {return encoding_cast(a.reserve2);}, [](CThostFtdcExchangeQuoteField& a, char c[]) {strcpy(a.reserve2, c);})
		.def_property("MacAddress", [](const CThostFtdcExchangeQuoteField& a) {return encoding_cast(a.MacAddress);}, [](CThostFtdcExchangeQuoteField& a, char c[]) {strcpy(a.MacAddress, c);})
		.def_property("ExchangeInstID", [](const CThostFtdcExchangeQuoteField& a) {return encoding_cast(a.ExchangeInstID);}, [](CThostFtdcExchangeQuoteField& a, char c[]) {strcpy(a.ExchangeInstID, c);})
		.def_property("IPAddress", [](const CThostFtdcExchangeQuoteField& a) {return encoding_cast(a.IPAddress);}, [](CThostFtdcExchangeQuoteField& a, char c[]) {strcpy(a.IPAddress, c);})
		.def("to_dict", [](const CThostFtdcExchangeQuoteField& a) {py::dict d; d["AskPrice"] = a.AskPrice; d["BidPrice"] = a.BidPrice; d["AskVolume"] = a.AskVolume; d["BidVolume"] = a.BidVolume; d["RequestID"] = a.RequestID; d["BusinessUnit"] = encoding_cast(a.BusinessUnit); d["AskOffsetFlag"] = a.AskOffsetFlag; d["BidOffsetFlag"] = a.BidOffsetFlag; d["AskHedgeFlag"] = a.AskHedgeFlag; d["BidHedgeFlag"] = a.BidHedgeFlag; d["QuoteLocalID"] = encoding_cast(a.QuoteLocalID); d["ExchangeID"] = encoding_cast(a.ExchangeID); d["ParticipantID"] = encoding_cast(a.ParticipantID); d["ClientID"] = encoding_cast(a.ClientID); d["reserve1"] = encoding_cast(a.reserve1); d["TraderID"] = encoding_cast(a.TraderID); d["InstallID"] = a.InstallID; d["NotifySequence"] = a.NotifySequence; d["OrderSubmitStatus"] = a.OrderSubmitStatus; d["TradingDay"] = encoding_cast(a.TradingDay); d["SettlementID"] = a.SettlementID; d["QuoteSysID"] = encoding_cast(a.QuoteSysID); d["InsertDate"] = encoding_cast(a.InsertDate); d["InsertTime"] = encoding_cast(a.InsertTime); d["CancelTime"] = encoding_cast(a.CancelTime); d["QuoteStatus"] = a.QuoteStatus; d["ClearingPartID"] = encoding_cast(a.ClearingPartID); d["SequenceNo"] = a.SequenceNo; d["AskOrderSysID"] = encoding_cast(a.AskOrderSysID); d["BidOrderSysID"] = encoding_cast(a.BidOrderSysID); d["ForQuoteSysID"] = encoding_cast(a.ForQuoteSysID); d["BranchID"] = encoding_cast(a.BranchID); d["reserve2"] = encoding_cast(a.reserve2); d["MacAddress"] = encoding_cast(a.MacAddress); d["ExchangeInstID"] = encoding_cast(a.ExchangeInstID); d["IPAddress"] = encoding_cast(a.IPAddress); return d;});

	py::class_<CThostFtdcQryExchangeQuoteField>(m, "CThostFtdcQryExchangeQuoteField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryExchangeQuoteField& a) {return CThostFtdcQryExchangeQuoteField(a);})
		.def_property("ParticipantID", [](const CThostFtdcQryExchangeQuoteField& a) {return encoding_cast(a.ParticipantID);}, [](CThostFtdcQryExchangeQuoteField& a, char c[]) {strcpy(a.ParticipantID, c);})
		.def_property("ClientID", [](const CThostFtdcQryExchangeQuoteField& a) {return encoding_cast(a.ClientID);}, [](CThostFtdcQryExchangeQuoteField& a, char c[]) {strcpy(a.ClientID, c);})
		.def_property("reserve1", [](const CThostFtdcQryExchangeQuoteField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcQryExchangeQuoteField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("ExchangeID", [](const CThostFtdcQryExchangeQuoteField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcQryExchangeQuoteField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("TraderID", [](const CThostFtdcQryExchangeQuoteField& a) {return encoding_cast(a.TraderID);}, [](CThostFtdcQryExchangeQuoteField& a, char c[]) {strcpy(a.TraderID, c);})
		.def_property("ExchangeInstID", [](const CThostFtdcQryExchangeQuoteField& a) {return encoding_cast(a.ExchangeInstID);}, [](CThostFtdcQryExchangeQuoteField& a, char c[]) {strcpy(a.ExchangeInstID, c);})
		.def("to_dict", [](const CThostFtdcQryExchangeQuoteField& a) {py::dict d; d["ParticipantID"] = encoding_cast(a.ParticipantID); d["ClientID"] = encoding_cast(a.ClientID); d["reserve1"] = encoding_cast(a.reserve1); d["ExchangeID"] = encoding_cast(a.ExchangeID); d["TraderID"] = encoding_cast(a.TraderID); d["ExchangeInstID"] = encoding_cast(a.ExchangeInstID); return d;});

	py::class_<CThostFtdcQryQuoteActionField>(m, "CThostFtdcQryQuoteActionField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryQuoteActionField& a) {return CThostFtdcQryQuoteActionField(a);})
		.def_property("BrokerID", [](const CThostFtdcQryQuoteActionField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcQryQuoteActionField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcQryQuoteActionField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcQryQuoteActionField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_property("ExchangeID", [](const CThostFtdcQryQuoteActionField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcQryQuoteActionField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def("to_dict", [](const CThostFtdcQryQuoteActionField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["ExchangeID"] = encoding_cast(a.ExchangeID); return d;});

	py::class_<CThostFtdcExchangeQuoteActionField>(m, "CThostFtdcExchangeQuoteActionField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcExchangeQuoteActionField& a) {return CThostFtdcExchangeQuoteActionField(a);})
		.def_property("ExchangeID", [](const CThostFtdcExchangeQuoteActionField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcExchangeQuoteActionField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("QuoteSysID", [](const CThostFtdcExchangeQuoteActionField& a) {return encoding_cast(a.QuoteSysID);}, [](CThostFtdcExchangeQuoteActionField& a, char c[]) {strcpy(a.QuoteSysID, c);})
		.def_readwrite("ActionFlag", &CThostFtdcExchangeQuoteActionField::ActionFlag)
		.def_property("ActionDate", [](const CThostFtdcExchangeQuoteActionField& a) {return encoding_cast(a.ActionDate);}, [](CThostFtdcExchangeQuoteActionField& a, char c[]) {strcpy(a.ActionDate, c);})
		.def_property("ActionTime", [](const CThostFtdcExchangeQuoteActionField& a) {return encoding_cast(a.ActionTime);}, [](CThostFtdcExchangeQuoteActionField& a, char c[]) {strcpy(a.ActionTime, c);})
		.def_property("TraderID", [](const CThostFtdcExchangeQuoteActionField& a) {return encoding_cast(a.TraderID);}, [](CThostFtdcExchangeQuoteActionField& a, char c[]) {strcpy(a.TraderID, c);})
		.def_readwrite("InstallID", &CThostFtdcExchangeQuoteActionField::InstallID)
		.def_property("QuoteLocalID", [](const CThostFtdcExchangeQuoteActionField& a) {return encoding_cast(a.QuoteLocalID);}, [](CThostFtdcExchangeQuoteActionField& a, char c[]) {strcpy(a.QuoteLocalID, c);})
		.def_property("ActionLocalID", [](const CThostFtdcExchangeQuoteActionField& a) {return encoding_cast(a.ActionLocalID);}, [](CThostFtdcExchangeQuoteActionField& a, char c[]) {strcpy(a.ActionLocalID, c);})
		.def_property("ParticipantID", [](const CThostFtdcExchangeQuoteActionField& a) {return encoding_cast(a.ParticipantID);}, [](CThostFtdcExchangeQuoteActionField& a, char c[]) {strcpy(a.ParticipantID, c);})
		.def_property("ClientID", [](const CThostFtdcExchangeQuoteActionField& a) {return encoding_cast(a.ClientID);}, [](CThostFtdcExchangeQuoteActionField& a, char c[]) {strcpy(a.ClientID, c);})
		.def_property("BusinessUnit", [](const CThostFtdcExchangeQuoteActionField& a) {return encoding_cast(a.BusinessUnit);}, [](CThostFtdcExchangeQuoteActionField& a, char c[]) {strcpy(a.BusinessUnit, c);})
		.def_readwrite("OrderActionStatus", &CThostFtdcExchangeQuoteActionField::OrderActionStatus)
		.def_property("UserID", [](const CThostFtdcExchangeQuoteActionField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcExchangeQuoteActionField& a, char c[]) {strcpy(a.UserID, c);})
		.def_property("reserve1", [](const CThostFtdcExchangeQuoteActionField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcExchangeQuoteActionField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("MacAddress", [](const CThostFtdcExchangeQuoteActionField& a) {return encoding_cast(a.MacAddress);}, [](CThostFtdcExchangeQuoteActionField& a, char c[]) {strcpy(a.MacAddress, c);})
		.def_property("IPAddress", [](const CThostFtdcExchangeQuoteActionField& a) {return encoding_cast(a.IPAddress);}, [](CThostFtdcExchangeQuoteActionField& a, char c[]) {strcpy(a.IPAddress, c);})
		.def("to_dict", [](const CThostFtdcExchangeQuoteActionField& a) {py::dict d; d["ExchangeID"] = encoding_cast(a.ExchangeID); d["QuoteSysID"] = encoding_cast(a.QuoteSysID); d["ActionFlag"] = a.ActionFlag; d["ActionDate"] = encoding_cast(a.ActionDate); d["ActionTime"] = encoding_cast(a.ActionTime); d["TraderID"] = encoding_cast(a.TraderID); d["InstallID"] = a.InstallID; d["QuoteLocalID"] = encoding_cast(a.QuoteLocalID); d["ActionLocalID"] = encoding_cast(a.ActionLocalID); d["ParticipantID"] = encoding_cast(a.ParticipantID); d["ClientID"] = encoding_cast(a.ClientID); d["BusinessUnit"] = encoding_cast(a.BusinessUnit); d["OrderActionStatus"] = a.OrderActionStatus; d["UserID"] = encoding_cast(a.UserID); d["reserve1"] = encoding_cast(a.reserve1); d["MacAddress"] = encoding_cast(a.MacAddress); d["IPAddress"] = encoding_cast(a.IPAddress); return d;});

	py::class_<CThostFtdcQryExchangeQuoteActionField>(m, "CThostFtdcQryExchangeQuoteActionField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryExchangeQuoteActionField& a) {return CThostFtdcQryExchangeQuoteActionField(a);})
		.def_property("ParticipantID", [](const CThostFtdcQryExchangeQuoteActionField& a) {return encoding_cast(a.ParticipantID);}, [](CThostFtdcQryExchangeQuoteActionField& a, char c[]) {strcpy(a.ParticipantID, c);})
		.def_property("ClientID", [](const CThostFtdcQryExchangeQuoteActionField& a) {return encoding_cast(a.ClientID);}, [](CThostFtdcQryExchangeQuoteActionField& a, char c[]) {strcpy(a.ClientID, c);})
		.def_property("ExchangeID", [](const CThostFtdcQryExchangeQuoteActionField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcQryExchangeQuoteActionField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("TraderID", [](const CThostFtdcQryExchangeQuoteActionField& a) {return encoding_cast(a.TraderID);}, [](CThostFtdcQryExchangeQuoteActionField& a, char c[]) {strcpy(a.TraderID, c);})
		.def("to_dict", [](const CThostFtdcQryExchangeQuoteActionField& a) {py::dict d; d["ParticipantID"] = encoding_cast(a.ParticipantID); d["ClientID"] = encoding_cast(a.ClientID); d["ExchangeID"] = encoding_cast(a.ExchangeID); d["TraderID"] = encoding_cast(a.TraderID); return d;});

	py::class_<CThostFtdcOptionInstrDeltaField>(m, "CThostFtdcOptionInstrDeltaField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcOptionInstrDeltaField& a) {return CThostFtdcOptionInstrDeltaField(a);})
		.def_property("reserve1", [](const CThostFtdcOptionInstrDeltaField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcOptionInstrDeltaField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_readwrite("InvestorRange", &CThostFtdcOptionInstrDeltaField::InvestorRange)
		.def_property("BrokerID", [](const CThostFtdcOptionInstrDeltaField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcOptionInstrDeltaField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcOptionInstrDeltaField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcOptionInstrDeltaField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_readwrite("Delta", &CThostFtdcOptionInstrDeltaField::Delta)
		.def_property("InstrumentID", [](const CThostFtdcOptionInstrDeltaField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcOptionInstrDeltaField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def("to_dict", [](const CThostFtdcOptionInstrDeltaField& a) {py::dict d; d["reserve1"] = encoding_cast(a.reserve1); d["InvestorRange"] = a.InvestorRange; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["Delta"] = a.Delta; d["InstrumentID"] = encoding_cast(a.InstrumentID); return d;});

	py::class_<CThostFtdcForQuoteRspField>(m, "CThostFtdcForQuoteRspField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcForQuoteRspField& a) {return CThostFtdcForQuoteRspField(a);})
		.def_property("TradingDay", [](const CThostFtdcForQuoteRspField& a) {return encoding_cast(a.TradingDay);}, [](CThostFtdcForQuoteRspField& a, char c[]) {strcpy(a.TradingDay, c);})
		.def_property("reserve1", [](const CThostFtdcForQuoteRspField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcForQuoteRspField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("ForQuoteSysID", [](const CThostFtdcForQuoteRspField& a) {return encoding_cast(a.ForQuoteSysID);}, [](CThostFtdcForQuoteRspField& a, char c[]) {strcpy(a.ForQuoteSysID, c);})
		.def_property("ForQuoteTime", [](const CThostFtdcForQuoteRspField& a) {return encoding_cast(a.ForQuoteTime);}, [](CThostFtdcForQuoteRspField& a, char c[]) {strcpy(a.ForQuoteTime, c);})
		.def_property("ActionDay", [](const CThostFtdcForQuoteRspField& a) {return encoding_cast(a.ActionDay);}, [](CThostFtdcForQuoteRspField& a, char c[]) {strcpy(a.ActionDay, c);})
		.def_property("ExchangeID", [](const CThostFtdcForQuoteRspField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcForQuoteRspField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("InstrumentID", [](const CThostFtdcForQuoteRspField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcForQuoteRspField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def("to_dict", [](const CThostFtdcForQuoteRspField& a) {py::dict d; d["TradingDay"] = encoding_cast(a.TradingDay); d["reserve1"] = encoding_cast(a.reserve1); d["ForQuoteSysID"] = encoding_cast(a.ForQuoteSysID); d["ForQuoteTime"] = encoding_cast(a.ForQuoteTime); d["ActionDay"] = encoding_cast(a.ActionDay); d["ExchangeID"] = encoding_cast(a.ExchangeID); d["InstrumentID"] = encoding_cast(a.InstrumentID); return d;});

	py::class_<CThostFtdcStrikeOffsetField>(m, "CThostFtdcStrikeOffsetField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcStrikeOffsetField& a) {return CThostFtdcStrikeOffsetField(a);})
		.def_property("reserve1", [](const CThostFtdcStrikeOffsetField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcStrikeOffsetField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_readwrite("InvestorRange", &CThostFtdcStrikeOffsetField::InvestorRange)
		.def_property("BrokerID", [](const CThostFtdcStrikeOffsetField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcStrikeOffsetField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcStrikeOffsetField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcStrikeOffsetField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_readwrite("Offset", &CThostFtdcStrikeOffsetField::Offset)
		.def_readwrite("OffsetType", &CThostFtdcStrikeOffsetField::OffsetType)
		.def_property("InstrumentID", [](const CThostFtdcStrikeOffsetField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcStrikeOffsetField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def("to_dict", [](const CThostFtdcStrikeOffsetField& a) {py::dict d; d["reserve1"] = encoding_cast(a.reserve1); d["InvestorRange"] = a.InvestorRange; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["Offset"] = a.Offset; d["OffsetType"] = a.OffsetType; d["InstrumentID"] = encoding_cast(a.InstrumentID); return d;});

	py::class_<CThostFtdcQryStrikeOffsetField>(m, "CThostFtdcQryStrikeOffsetField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryStrikeOffsetField& a) {return CThostFtdcQryStrikeOffsetField(a);})
		.def_property("BrokerID", [](const CThostFtdcQryStrikeOffsetField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcQryStrikeOffsetField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcQryStrikeOffsetField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcQryStrikeOffsetField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_property("reserve1", [](const CThostFtdcQryStrikeOffsetField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcQryStrikeOffsetField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("InstrumentID", [](const CThostFtdcQryStrikeOffsetField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcQryStrikeOffsetField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def("to_dict", [](const CThostFtdcQryStrikeOffsetField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["reserve1"] = encoding_cast(a.reserve1); d["InstrumentID"] = encoding_cast(a.InstrumentID); return d;});

	py::class_<CThostFtdcInputBatchOrderActionField>(m, "CThostFtdcInputBatchOrderActionField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcInputBatchOrderActionField& a) {return CThostFtdcInputBatchOrderActionField(a);})
		.def_property("BrokerID", [](const CThostFtdcInputBatchOrderActionField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcInputBatchOrderActionField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcInputBatchOrderActionField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcInputBatchOrderActionField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_readwrite("OrderActionRef", &CThostFtdcInputBatchOrderActionField::OrderActionRef)
		.def_readwrite("RequestID", &CThostFtdcInputBatchOrderActionField::RequestID)
		.def_readwrite("FrontID", &CThostFtdcInputBatchOrderActionField::FrontID)
		.def_readwrite("SessionID", &CThostFtdcInputBatchOrderActionField::SessionID)
		.def_property("ExchangeID", [](const CThostFtdcInputBatchOrderActionField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcInputBatchOrderActionField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("UserID", [](const CThostFtdcInputBatchOrderActionField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcInputBatchOrderActionField& a, char c[]) {strcpy(a.UserID, c);})
		.def_property("InvestUnitID", [](const CThostFtdcInputBatchOrderActionField& a) {return encoding_cast(a.InvestUnitID);}, [](CThostFtdcInputBatchOrderActionField& a, char c[]) {strcpy(a.InvestUnitID, c);})
		.def_property("reserve1", [](const CThostFtdcInputBatchOrderActionField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcInputBatchOrderActionField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("MacAddress", [](const CThostFtdcInputBatchOrderActionField& a) {return encoding_cast(a.MacAddress);}, [](CThostFtdcInputBatchOrderActionField& a, char c[]) {strcpy(a.MacAddress, c);})
		.def_property("IPAddress", [](const CThostFtdcInputBatchOrderActionField& a) {return encoding_cast(a.IPAddress);}, [](CThostFtdcInputBatchOrderActionField& a, char c[]) {strcpy(a.IPAddress, c);})
		.def("to_dict", [](const CThostFtdcInputBatchOrderActionField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["OrderActionRef"] = a.OrderActionRef; d["RequestID"] = a.RequestID; d["FrontID"] = a.FrontID; d["SessionID"] = a.SessionID; d["ExchangeID"] = encoding_cast(a.ExchangeID); d["UserID"] = encoding_cast(a.UserID); d["InvestUnitID"] = encoding_cast(a.InvestUnitID); d["reserve1"] = encoding_cast(a.reserve1); d["MacAddress"] = encoding_cast(a.MacAddress); d["IPAddress"] = encoding_cast(a.IPAddress); return d;});

	py::class_<CThostFtdcBatchOrderActionField>(m, "CThostFtdcBatchOrderActionField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcBatchOrderActionField& a) {return CThostFtdcBatchOrderActionField(a);})
		.def_property("BrokerID", [](const CThostFtdcBatchOrderActionField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcBatchOrderActionField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcBatchOrderActionField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcBatchOrderActionField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_readwrite("OrderActionRef", &CThostFtdcBatchOrderActionField::OrderActionRef)
		.def_readwrite("RequestID", &CThostFtdcBatchOrderActionField::RequestID)
		.def_readwrite("FrontID", &CThostFtdcBatchOrderActionField::FrontID)
		.def_readwrite("SessionID", &CThostFtdcBatchOrderActionField::SessionID)
		.def_property("ExchangeID", [](const CThostFtdcBatchOrderActionField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcBatchOrderActionField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("ActionDate", [](const CThostFtdcBatchOrderActionField& a) {return encoding_cast(a.ActionDate);}, [](CThostFtdcBatchOrderActionField& a, char c[]) {strcpy(a.ActionDate, c);})
		.def_property("ActionTime", [](const CThostFtdcBatchOrderActionField& a) {return encoding_cast(a.ActionTime);}, [](CThostFtdcBatchOrderActionField& a, char c[]) {strcpy(a.ActionTime, c);})
		.def_property("TraderID", [](const CThostFtdcBatchOrderActionField& a) {return encoding_cast(a.TraderID);}, [](CThostFtdcBatchOrderActionField& a, char c[]) {strcpy(a.TraderID, c);})
		.def_readwrite("InstallID", &CThostFtdcBatchOrderActionField::InstallID)
		.def_property("ActionLocalID", [](const CThostFtdcBatchOrderActionField& a) {return encoding_cast(a.ActionLocalID);}, [](CThostFtdcBatchOrderActionField& a, char c[]) {strcpy(a.ActionLocalID, c);})
		.def_property("ParticipantID", [](const CThostFtdcBatchOrderActionField& a) {return encoding_cast(a.ParticipantID);}, [](CThostFtdcBatchOrderActionField& a, char c[]) {strcpy(a.ParticipantID, c);})
		.def_property("ClientID", [](const CThostFtdcBatchOrderActionField& a) {return encoding_cast(a.ClientID);}, [](CThostFtdcBatchOrderActionField& a, char c[]) {strcpy(a.ClientID, c);})
		.def_property("BusinessUnit", [](const CThostFtdcBatchOrderActionField& a) {return encoding_cast(a.BusinessUnit);}, [](CThostFtdcBatchOrderActionField& a, char c[]) {strcpy(a.BusinessUnit, c);})
		.def_readwrite("OrderActionStatus", &CThostFtdcBatchOrderActionField::OrderActionStatus)
		.def_property("UserID", [](const CThostFtdcBatchOrderActionField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcBatchOrderActionField& a, char c[]) {strcpy(a.UserID, c);})
		.def_property("StatusMsg", [](const CThostFtdcBatchOrderActionField& a) {return encoding_cast(a.StatusMsg);}, [](CThostFtdcBatchOrderActionField& a, char c[]) {strcpy(a.StatusMsg, c);})
		.def_property("InvestUnitID", [](const CThostFtdcBatchOrderActionField& a) {return encoding_cast(a.InvestUnitID);}, [](CThostFtdcBatchOrderActionField& a, char c[]) {strcpy(a.InvestUnitID, c);})
		.def_property("reserve1", [](const CThostFtdcBatchOrderActionField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcBatchOrderActionField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("MacAddress", [](const CThostFtdcBatchOrderActionField& a) {return encoding_cast(a.MacAddress);}, [](CThostFtdcBatchOrderActionField& a, char c[]) {strcpy(a.MacAddress, c);})
		.def_property("IPAddress", [](const CThostFtdcBatchOrderActionField& a) {return encoding_cast(a.IPAddress);}, [](CThostFtdcBatchOrderActionField& a, char c[]) {strcpy(a.IPAddress, c);})
		.def("to_dict", [](const CThostFtdcBatchOrderActionField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["OrderActionRef"] = a.OrderActionRef; d["RequestID"] = a.RequestID; d["FrontID"] = a.FrontID; d["SessionID"] = a.SessionID; d["ExchangeID"] = encoding_cast(a.ExchangeID); d["ActionDate"] = encoding_cast(a.ActionDate); d["ActionTime"] = encoding_cast(a.ActionTime); d["TraderID"] = encoding_cast(a.TraderID); d["InstallID"] = a.InstallID; d["ActionLocalID"] = encoding_cast(a.ActionLocalID); d["ParticipantID"] = encoding_cast(a.ParticipantID); d["ClientID"] = encoding_cast(a.ClientID); d["BusinessUnit"] = encoding_cast(a.BusinessUnit); d["OrderActionStatus"] = a.OrderActionStatus; d["UserID"] = encoding_cast(a.UserID); d["StatusMsg"] = encoding_cast(a.StatusMsg); d["InvestUnitID"] = encoding_cast(a.InvestUnitID); d["reserve1"] = encoding_cast(a.reserve1); d["MacAddress"] = encoding_cast(a.MacAddress); d["IPAddress"] = encoding_cast(a.IPAddress); return d;});

	py::class_<CThostFtdcExchangeBatchOrderActionField>(m, "CThostFtdcExchangeBatchOrderActionField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcExchangeBatchOrderActionField& a) {return CThostFtdcExchangeBatchOrderActionField(a);})
		.def_property("ExchangeID", [](const CThostFtdcExchangeBatchOrderActionField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcExchangeBatchOrderActionField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("ActionDate", [](const CThostFtdcExchangeBatchOrderActionField& a) {return encoding_cast(a.ActionDate);}, [](CThostFtdcExchangeBatchOrderActionField& a, char c[]) {strcpy(a.ActionDate, c);})
		.def_property("ActionTime", [](const CThostFtdcExchangeBatchOrderActionField& a) {return encoding_cast(a.ActionTime);}, [](CThostFtdcExchangeBatchOrderActionField& a, char c[]) {strcpy(a.ActionTime, c);})
		.def_property("TraderID", [](const CThostFtdcExchangeBatchOrderActionField& a) {return encoding_cast(a.TraderID);}, [](CThostFtdcExchangeBatchOrderActionField& a, char c[]) {strcpy(a.TraderID, c);})
		.def_readwrite("InstallID", &CThostFtdcExchangeBatchOrderActionField::InstallID)
		.def_property("ActionLocalID", [](const CThostFtdcExchangeBatchOrderActionField& a) {return encoding_cast(a.ActionLocalID);}, [](CThostFtdcExchangeBatchOrderActionField& a, char c[]) {strcpy(a.ActionLocalID, c);})
		.def_property("ParticipantID", [](const CThostFtdcExchangeBatchOrderActionField& a) {return encoding_cast(a.ParticipantID);}, [](CThostFtdcExchangeBatchOrderActionField& a, char c[]) {strcpy(a.ParticipantID, c);})
		.def_property("ClientID", [](const CThostFtdcExchangeBatchOrderActionField& a) {return encoding_cast(a.ClientID);}, [](CThostFtdcExchangeBatchOrderActionField& a, char c[]) {strcpy(a.ClientID, c);})
		.def_property("BusinessUnit", [](const CThostFtdcExchangeBatchOrderActionField& a) {return encoding_cast(a.BusinessUnit);}, [](CThostFtdcExchangeBatchOrderActionField& a, char c[]) {strcpy(a.BusinessUnit, c);})
		.def_readwrite("OrderActionStatus", &CThostFtdcExchangeBatchOrderActionField::OrderActionStatus)
		.def_property("UserID", [](const CThostFtdcExchangeBatchOrderActionField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcExchangeBatchOrderActionField& a, char c[]) {strcpy(a.UserID, c);})
		.def_property("reserve1", [](const CThostFtdcExchangeBatchOrderActionField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcExchangeBatchOrderActionField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("MacAddress", [](const CThostFtdcExchangeBatchOrderActionField& a) {return encoding_cast(a.MacAddress);}, [](CThostFtdcExchangeBatchOrderActionField& a, char c[]) {strcpy(a.MacAddress, c);})
		.def_property("IPAddress", [](const CThostFtdcExchangeBatchOrderActionField& a) {return encoding_cast(a.IPAddress);}, [](CThostFtdcExchangeBatchOrderActionField& a, char c[]) {strcpy(a.IPAddress, c);})
		.def("to_dict", [](const CThostFtdcExchangeBatchOrderActionField& a) {py::dict d; d["ExchangeID"] = encoding_cast(a.ExchangeID); d["ActionDate"] = encoding_cast(a.ActionDate); d["ActionTime"] = encoding_cast(a.ActionTime); d["TraderID"] = encoding_cast(a.TraderID); d["InstallID"] = a.InstallID; d["ActionLocalID"] = encoding_cast(a.ActionLocalID); d["ParticipantID"] = encoding_cast(a.ParticipantID); d["ClientID"] = encoding_cast(a.ClientID); d["BusinessUnit"] = encoding_cast(a.BusinessUnit); d["OrderActionStatus"] = a.OrderActionStatus; d["UserID"] = encoding_cast(a.UserID); d["reserve1"] = encoding_cast(a.reserve1); d["MacAddress"] = encoding_cast(a.MacAddress); d["IPAddress"] = encoding_cast(a.IPAddress); return d;});

	py::class_<CThostFtdcQryBatchOrderActionField>(m, "CThostFtdcQryBatchOrderActionField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryBatchOrderActionField& a) {return CThostFtdcQryBatchOrderActionField(a);})
		.def_property("BrokerID", [](const CThostFtdcQryBatchOrderActionField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcQryBatchOrderActionField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcQryBatchOrderActionField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcQryBatchOrderActionField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_property("ExchangeID", [](const CThostFtdcQryBatchOrderActionField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcQryBatchOrderActionField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def("to_dict", [](const CThostFtdcQryBatchOrderActionField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["ExchangeID"] = encoding_cast(a.ExchangeID); return d;});

	py::class_<CThostFtdcCombInstrumentGuardField>(m, "CThostFtdcCombInstrumentGuardField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcCombInstrumentGuardField& a) {return CThostFtdcCombInstrumentGuardField(a);})
		.def_property("BrokerID", [](const CThostFtdcCombInstrumentGuardField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcCombInstrumentGuardField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("reserve1", [](const CThostFtdcCombInstrumentGuardField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcCombInstrumentGuardField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_readwrite("GuarantRatio", &CThostFtdcCombInstrumentGuardField::GuarantRatio)
		.def_property("ExchangeID", [](const CThostFtdcCombInstrumentGuardField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcCombInstrumentGuardField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("InstrumentID", [](const CThostFtdcCombInstrumentGuardField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcCombInstrumentGuardField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def("to_dict", [](const CThostFtdcCombInstrumentGuardField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["reserve1"] = encoding_cast(a.reserve1); d["GuarantRatio"] = a.GuarantRatio; d["ExchangeID"] = encoding_cast(a.ExchangeID); d["InstrumentID"] = encoding_cast(a.InstrumentID); return d;});

	py::class_<CThostFtdcQryCombInstrumentGuardField>(m, "CThostFtdcQryCombInstrumentGuardField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryCombInstrumentGuardField& a) {return CThostFtdcQryCombInstrumentGuardField(a);})
		.def_property("BrokerID", [](const CThostFtdcQryCombInstrumentGuardField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcQryCombInstrumentGuardField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("reserve1", [](const CThostFtdcQryCombInstrumentGuardField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcQryCombInstrumentGuardField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("ExchangeID", [](const CThostFtdcQryCombInstrumentGuardField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcQryCombInstrumentGuardField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("InstrumentID", [](const CThostFtdcQryCombInstrumentGuardField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcQryCombInstrumentGuardField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def("to_dict", [](const CThostFtdcQryCombInstrumentGuardField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["reserve1"] = encoding_cast(a.reserve1); d["ExchangeID"] = encoding_cast(a.ExchangeID); d["InstrumentID"] = encoding_cast(a.InstrumentID); return d;});

	py::class_<CThostFtdcInputCombActionField>(m, "CThostFtdcInputCombActionField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcInputCombActionField& a) {return CThostFtdcInputCombActionField(a);})
		.def_property("BrokerID", [](const CThostFtdcInputCombActionField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcInputCombActionField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcInputCombActionField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcInputCombActionField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_property("reserve1", [](const CThostFtdcInputCombActionField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcInputCombActionField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("CombActionRef", [](const CThostFtdcInputCombActionField& a) {return encoding_cast(a.CombActionRef);}, [](CThostFtdcInputCombActionField& a, char c[]) {strcpy(a.CombActionRef, c);})
		.def_property("UserID", [](const CThostFtdcInputCombActionField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcInputCombActionField& a, char c[]) {strcpy(a.UserID, c);})
		.def_readwrite("Direction", &CThostFtdcInputCombActionField::Direction)
		.def_readwrite("Volume", &CThostFtdcInputCombActionField::Volume)
		.def_readwrite("CombDirection", &CThostFtdcInputCombActionField::CombDirection)
		.def_readwrite("HedgeFlag", &CThostFtdcInputCombActionField::HedgeFlag)
		.def_property("ExchangeID", [](const CThostFtdcInputCombActionField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcInputCombActionField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("reserve2", [](const CThostFtdcInputCombActionField& a) {return encoding_cast(a.reserve2);}, [](CThostFtdcInputCombActionField& a, char c[]) {strcpy(a.reserve2, c);})
		.def_property("MacAddress", [](const CThostFtdcInputCombActionField& a) {return encoding_cast(a.MacAddress);}, [](CThostFtdcInputCombActionField& a, char c[]) {strcpy(a.MacAddress, c);})
		.def_property("InvestUnitID", [](const CThostFtdcInputCombActionField& a) {return encoding_cast(a.InvestUnitID);}, [](CThostFtdcInputCombActionField& a, char c[]) {strcpy(a.InvestUnitID, c);})
		.def_readwrite("FrontID", &CThostFtdcInputCombActionField::FrontID)
		.def_readwrite("SessionID", &CThostFtdcInputCombActionField::SessionID)
		.def_property("InstrumentID", [](const CThostFtdcInputCombActionField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcInputCombActionField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def_property("IPAddress", [](const CThostFtdcInputCombActionField& a) {return encoding_cast(a.IPAddress);}, [](CThostFtdcInputCombActionField& a, char c[]) {strcpy(a.IPAddress, c);})
		.def("to_dict", [](const CThostFtdcInputCombActionField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["reserve1"] = encoding_cast(a.reserve1); d["CombActionRef"] = encoding_cast(a.CombActionRef); d["UserID"] = encoding_cast(a.UserID); d["Direction"] = a.Direction; d["Volume"] = a.Volume; d["CombDirection"] = a.CombDirection; d["HedgeFlag"] = a.HedgeFlag; d["ExchangeID"] = encoding_cast(a.ExchangeID); d["reserve2"] = encoding_cast(a.reserve2); d["MacAddress"] = encoding_cast(a.MacAddress); d["InvestUnitID"] = encoding_cast(a.InvestUnitID); d["FrontID"] = a.FrontID; d["SessionID"] = a.SessionID; d["InstrumentID"] = encoding_cast(a.InstrumentID); d["IPAddress"] = encoding_cast(a.IPAddress); return d;});

	py::class_<CThostFtdcCombActionField>(m, "CThostFtdcCombActionField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcCombActionField& a) {return CThostFtdcCombActionField(a);})
		.def_property("BrokerID", [](const CThostFtdcCombActionField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcCombActionField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcCombActionField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcCombActionField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_property("reserve1", [](const CThostFtdcCombActionField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcCombActionField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("CombActionRef", [](const CThostFtdcCombActionField& a) {return encoding_cast(a.CombActionRef);}, [](CThostFtdcCombActionField& a, char c[]) {strcpy(a.CombActionRef, c);})
		.def_property("UserID", [](const CThostFtdcCombActionField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcCombActionField& a, char c[]) {strcpy(a.UserID, c);})
		.def_readwrite("Direction", &CThostFtdcCombActionField::Direction)
		.def_readwrite("Volume", &CThostFtdcCombActionField::Volume)
		.def_readwrite("CombDirection", &CThostFtdcCombActionField::CombDirection)
		.def_readwrite("HedgeFlag", &CThostFtdcCombActionField::HedgeFlag)
		.def_property("ActionLocalID", [](const CThostFtdcCombActionField& a) {return encoding_cast(a.ActionLocalID);}, [](CThostFtdcCombActionField& a, char c[]) {strcpy(a.ActionLocalID, c);})
		.def_property("ExchangeID", [](const CThostFtdcCombActionField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcCombActionField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("ParticipantID", [](const CThostFtdcCombActionField& a) {return encoding_cast(a.ParticipantID);}, [](CThostFtdcCombActionField& a, char c[]) {strcpy(a.ParticipantID, c);})
		.def_property("ClientID", [](const CThostFtdcCombActionField& a) {return encoding_cast(a.ClientID);}, [](CThostFtdcCombActionField& a, char c[]) {strcpy(a.ClientID, c);})
		.def_property("reserve2", [](const CThostFtdcCombActionField& a) {return encoding_cast(a.reserve2);}, [](CThostFtdcCombActionField& a, char c[]) {strcpy(a.reserve2, c);})
		.def_property("TraderID", [](const CThostFtdcCombActionField& a) {return encoding_cast(a.TraderID);}, [](CThostFtdcCombActionField& a, char c[]) {strcpy(a.TraderID, c);})
		.def_readwrite("InstallID", &CThostFtdcCombActionField::InstallID)
		.def_readwrite("ActionStatus", &CThostFtdcCombActionField::ActionStatus)
		.def_readwrite("NotifySequence", &CThostFtdcCombActionField::NotifySequence)
		.def_property("TradingDay", [](const CThostFtdcCombActionField& a) {return encoding_cast(a.TradingDay);}, [](CThostFtdcCombActionField& a, char c[]) {strcpy(a.TradingDay, c);})
		.def_readwrite("SettlementID", &CThostFtdcCombActionField::SettlementID)
		.def_readwrite("SequenceNo", &CThostFtdcCombActionField::SequenceNo)
		.def_readwrite("FrontID", &CThostFtdcCombActionField::FrontID)
		.def_readwrite("SessionID", &CThostFtdcCombActionField::SessionID)
		.def_property("UserProductInfo", [](const CThostFtdcCombActionField& a) {return encoding_cast(a.UserProductInfo);}, [](CThostFtdcCombActionField& a, char c[]) {strcpy(a.UserProductInfo, c);})
		.def_property("StatusMsg", [](const CThostFtdcCombActionField& a) {return encoding_cast(a.StatusMsg);}, [](CThostFtdcCombActionField& a, char c[]) {strcpy(a.StatusMsg, c);})
		.def_property("reserve3", [](const CThostFtdcCombActionField& a) {return encoding_cast(a.reserve3);}, [](CThostFtdcCombActionField& a, char c[]) {strcpy(a.reserve3, c);})
		.def_property("MacAddress", [](const CThostFtdcCombActionField& a) {return encoding_cast(a.MacAddress);}, [](CThostFtdcCombActionField& a, char c[]) {strcpy(a.MacAddress, c);})
		.def_property("ComTradeID", [](const CThostFtdcCombActionField& a) {return encoding_cast(a.ComTradeID);}, [](CThostFtdcCombActionField& a, char c[]) {strcpy(a.ComTradeID, c);})
		.def_property("BranchID", [](const CThostFtdcCombActionField& a) {return encoding_cast(a.BranchID);}, [](CThostFtdcCombActionField& a, char c[]) {strcpy(a.BranchID, c);})
		.def_property("InvestUnitID", [](const CThostFtdcCombActionField& a) {return encoding_cast(a.InvestUnitID);}, [](CThostFtdcCombActionField& a, char c[]) {strcpy(a.InvestUnitID, c);})
		.def_property("InstrumentID", [](const CThostFtdcCombActionField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcCombActionField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def_property("ExchangeInstID", [](const CThostFtdcCombActionField& a) {return encoding_cast(a.ExchangeInstID);}, [](CThostFtdcCombActionField& a, char c[]) {strcpy(a.ExchangeInstID, c);})
		.def_property("IPAddress", [](const CThostFtdcCombActionField& a) {return encoding_cast(a.IPAddress);}, [](CThostFtdcCombActionField& a, char c[]) {strcpy(a.IPAddress, c);})
		.def("to_dict", [](const CThostFtdcCombActionField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["reserve1"] = encoding_cast(a.reserve1); d["CombActionRef"] = encoding_cast(a.CombActionRef); d["UserID"] = encoding_cast(a.UserID); d["Direction"] = a.Direction; d["Volume"] = a.Volume; d["CombDirection"] = a.CombDirection; d["HedgeFlag"] = a.HedgeFlag; d["ActionLocalID"] = encoding_cast(a.ActionLocalID); d["ExchangeID"] = encoding_cast(a.ExchangeID); d["ParticipantID"] = encoding_cast(a.ParticipantID); d["ClientID"] = encoding_cast(a.ClientID); d["reserve2"] = encoding_cast(a.reserve2); d["TraderID"] = encoding_cast(a.TraderID); d["InstallID"] = a.InstallID; d["ActionStatus"] = a.ActionStatus; d["NotifySequence"] = a.NotifySequence; d["TradingDay"] = encoding_cast(a.TradingDay); d["SettlementID"] = a.SettlementID; d["SequenceNo"] = a.SequenceNo; d["FrontID"] = a.FrontID; d["SessionID"] = a.SessionID; d["UserProductInfo"] = encoding_cast(a.UserProductInfo); d["StatusMsg"] = encoding_cast(a.StatusMsg); d["reserve3"] = encoding_cast(a.reserve3); d["MacAddress"] = encoding_cast(a.MacAddress); d["ComTradeID"] = encoding_cast(a.ComTradeID); d["BranchID"] = encoding_cast(a.BranchID); d["InvestUnitID"] = encoding_cast(a.InvestUnitID); d["InstrumentID"] = encoding_cast(a.InstrumentID); d["ExchangeInstID"] = encoding_cast(a.ExchangeInstID); d["IPAddress"] = encoding_cast(a.IPAddress); return d;});

	py::class_<CThostFtdcQryCombActionField>(m, "CThostFtdcQryCombActionField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryCombActionField& a) {return CThostFtdcQryCombActionField(a);})
		.def_property("BrokerID", [](const CThostFtdcQryCombActionField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcQryCombActionField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcQryCombActionField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcQryCombActionField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_property("reserve1", [](const CThostFtdcQryCombActionField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcQryCombActionField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("ExchangeID", [](const CThostFtdcQryCombActionField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcQryCombActionField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("InvestUnitID", [](const CThostFtdcQryCombActionField& a) {return encoding_cast(a.InvestUnitID);}, [](CThostFtdcQryCombActionField& a, char c[]) {strcpy(a.InvestUnitID, c);})
		.def_property("InstrumentID", [](const CThostFtdcQryCombActionField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcQryCombActionField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def("to_dict", [](const CThostFtdcQryCombActionField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["reserve1"] = encoding_cast(a.reserve1); d["ExchangeID"] = encoding_cast(a.ExchangeID); d["InvestUnitID"] = encoding_cast(a.InvestUnitID); d["InstrumentID"] = encoding_cast(a.InstrumentID); return d;});

	py::class_<CThostFtdcExchangeCombActionField>(m, "CThostFtdcExchangeCombActionField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcExchangeCombActionField& a) {return CThostFtdcExchangeCombActionField(a);})
		.def_readwrite("Direction", &CThostFtdcExchangeCombActionField::Direction)
		.def_readwrite("Volume", &CThostFtdcExchangeCombActionField::Volume)
		.def_readwrite("CombDirection", &CThostFtdcExchangeCombActionField::CombDirection)
		.def_readwrite("HedgeFlag", &CThostFtdcExchangeCombActionField::HedgeFlag)
		.def_property("ActionLocalID", [](const CThostFtdcExchangeCombActionField& a) {return encoding_cast(a.ActionLocalID);}, [](CThostFtdcExchangeCombActionField& a, char c[]) {strcpy(a.ActionLocalID, c);})
		.def_property("ExchangeID", [](const CThostFtdcExchangeCombActionField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcExchangeCombActionField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("ParticipantID", [](const CThostFtdcExchangeCombActionField& a) {return encoding_cast(a.ParticipantID);}, [](CThostFtdcExchangeCombActionField& a, char c[]) {strcpy(a.ParticipantID, c);})
		.def_property("ClientID", [](const CThostFtdcExchangeCombActionField& a) {return encoding_cast(a.ClientID);}, [](CThostFtdcExchangeCombActionField& a, char c[]) {strcpy(a.ClientID, c);})
		.def_property("reserve1", [](const CThostFtdcExchangeCombActionField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcExchangeCombActionField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("TraderID", [](const CThostFtdcExchangeCombActionField& a) {return encoding_cast(a.TraderID);}, [](CThostFtdcExchangeCombActionField& a, char c[]) {strcpy(a.TraderID, c);})
		.def_readwrite("InstallID", &CThostFtdcExchangeCombActionField::InstallID)
		.def_readwrite("ActionStatus", &CThostFtdcExchangeCombActionField::ActionStatus)
		.def_readwrite("NotifySequence", &CThostFtdcExchangeCombActionField::NotifySequence)
		.def_property("TradingDay", [](const CThostFtdcExchangeCombActionField& a) {return encoding_cast(a.TradingDay);}, [](CThostFtdcExchangeCombActionField& a, char c[]) {strcpy(a.TradingDay, c);})
		.def_readwrite("SettlementID", &CThostFtdcExchangeCombActionField::SettlementID)
		.def_readwrite("SequenceNo", &CThostFtdcExchangeCombActionField::SequenceNo)
		.def_property("reserve2", [](const CThostFtdcExchangeCombActionField& a) {return encoding_cast(a.reserve2);}, [](CThostFtdcExchangeCombActionField& a, char c[]) {strcpy(a.reserve2, c);})
		.def_property("MacAddress", [](const CThostFtdcExchangeCombActionField& a) {return encoding_cast(a.MacAddress);}, [](CThostFtdcExchangeCombActionField& a, char c[]) {strcpy(a.MacAddress, c);})
		.def_property("ComTradeID", [](const CThostFtdcExchangeCombActionField& a) {return encoding_cast(a.ComTradeID);}, [](CThostFtdcExchangeCombActionField& a, char c[]) {strcpy(a.ComTradeID, c);})
		.def_property("BranchID", [](const CThostFtdcExchangeCombActionField& a) {return encoding_cast(a.BranchID);}, [](CThostFtdcExchangeCombActionField& a, char c[]) {strcpy(a.BranchID, c);})
		.def_property("ExchangeInstID", [](const CThostFtdcExchangeCombActionField& a) {return encoding_cast(a.ExchangeInstID);}, [](CThostFtdcExchangeCombActionField& a, char c[]) {strcpy(a.ExchangeInstID, c);})
		.def_property("IPAddress", [](const CThostFtdcExchangeCombActionField& a) {return encoding_cast(a.IPAddress);}, [](CThostFtdcExchangeCombActionField& a, char c[]) {strcpy(a.IPAddress, c);})
		.def("to_dict", [](const CThostFtdcExchangeCombActionField& a) {py::dict d; d["Direction"] = a.Direction; d["Volume"] = a.Volume; d["CombDirection"] = a.CombDirection; d["HedgeFlag"] = a.HedgeFlag; d["ActionLocalID"] = encoding_cast(a.ActionLocalID); d["ExchangeID"] = encoding_cast(a.ExchangeID); d["ParticipantID"] = encoding_cast(a.ParticipantID); d["ClientID"] = encoding_cast(a.ClientID); d["reserve1"] = encoding_cast(a.reserve1); d["TraderID"] = encoding_cast(a.TraderID); d["InstallID"] = a.InstallID; d["ActionStatus"] = a.ActionStatus; d["NotifySequence"] = a.NotifySequence; d["TradingDay"] = encoding_cast(a.TradingDay); d["SettlementID"] = a.SettlementID; d["SequenceNo"] = a.SequenceNo; d["reserve2"] = encoding_cast(a.reserve2); d["MacAddress"] = encoding_cast(a.MacAddress); d["ComTradeID"] = encoding_cast(a.ComTradeID); d["BranchID"] = encoding_cast(a.BranchID); d["ExchangeInstID"] = encoding_cast(a.ExchangeInstID); d["IPAddress"] = encoding_cast(a.IPAddress); return d;});

	py::class_<CThostFtdcQryExchangeCombActionField>(m, "CThostFtdcQryExchangeCombActionField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryExchangeCombActionField& a) {return CThostFtdcQryExchangeCombActionField(a);})
		.def_property("ParticipantID", [](const CThostFtdcQryExchangeCombActionField& a) {return encoding_cast(a.ParticipantID);}, [](CThostFtdcQryExchangeCombActionField& a, char c[]) {strcpy(a.ParticipantID, c);})
		.def_property("ClientID", [](const CThostFtdcQryExchangeCombActionField& a) {return encoding_cast(a.ClientID);}, [](CThostFtdcQryExchangeCombActionField& a, char c[]) {strcpy(a.ClientID, c);})
		.def_property("reserve1", [](const CThostFtdcQryExchangeCombActionField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcQryExchangeCombActionField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("ExchangeID", [](const CThostFtdcQryExchangeCombActionField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcQryExchangeCombActionField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("TraderID", [](const CThostFtdcQryExchangeCombActionField& a) {return encoding_cast(a.TraderID);}, [](CThostFtdcQryExchangeCombActionField& a, char c[]) {strcpy(a.TraderID, c);})
		.def_property("ExchangeInstID", [](const CThostFtdcQryExchangeCombActionField& a) {return encoding_cast(a.ExchangeInstID);}, [](CThostFtdcQryExchangeCombActionField& a, char c[]) {strcpy(a.ExchangeInstID, c);})
		.def("to_dict", [](const CThostFtdcQryExchangeCombActionField& a) {py::dict d; d["ParticipantID"] = encoding_cast(a.ParticipantID); d["ClientID"] = encoding_cast(a.ClientID); d["reserve1"] = encoding_cast(a.reserve1); d["ExchangeID"] = encoding_cast(a.ExchangeID); d["TraderID"] = encoding_cast(a.TraderID); d["ExchangeInstID"] = encoding_cast(a.ExchangeInstID); return d;});

	py::class_<CThostFtdcProductExchRateField>(m, "CThostFtdcProductExchRateField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcProductExchRateField& a) {return CThostFtdcProductExchRateField(a);})
		.def_property("reserve1", [](const CThostFtdcProductExchRateField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcProductExchRateField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("QuoteCurrencyID", [](const CThostFtdcProductExchRateField& a) {return encoding_cast(a.QuoteCurrencyID);}, [](CThostFtdcProductExchRateField& a, char c[]) {strcpy(a.QuoteCurrencyID, c);})
		.def_readwrite("ExchangeRate", &CThostFtdcProductExchRateField::ExchangeRate)
		.def_property("ExchangeID", [](const CThostFtdcProductExchRateField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcProductExchRateField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("ProductID", [](const CThostFtdcProductExchRateField& a) {return encoding_cast(a.ProductID);}, [](CThostFtdcProductExchRateField& a, char c[]) {strcpy(a.ProductID, c);})
		.def("to_dict", [](const CThostFtdcProductExchRateField& a) {py::dict d; d["reserve1"] = encoding_cast(a.reserve1); d["QuoteCurrencyID"] = encoding_cast(a.QuoteCurrencyID); d["ExchangeRate"] = a.ExchangeRate; d["ExchangeID"] = encoding_cast(a.ExchangeID); d["ProductID"] = encoding_cast(a.ProductID); return d;});

	py::class_<CThostFtdcQryProductExchRateField>(m, "CThostFtdcQryProductExchRateField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryProductExchRateField& a) {return CThostFtdcQryProductExchRateField(a);})
		.def_property("reserve1", [](const CThostFtdcQryProductExchRateField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcQryProductExchRateField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("ExchangeID", [](const CThostFtdcQryProductExchRateField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcQryProductExchRateField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("ProductID", [](const CThostFtdcQryProductExchRateField& a) {return encoding_cast(a.ProductID);}, [](CThostFtdcQryProductExchRateField& a, char c[]) {strcpy(a.ProductID, c);})
		.def("to_dict", [](const CThostFtdcQryProductExchRateField& a) {py::dict d; d["reserve1"] = encoding_cast(a.reserve1); d["ExchangeID"] = encoding_cast(a.ExchangeID); d["ProductID"] = encoding_cast(a.ProductID); return d;});

	py::class_<CThostFtdcQryForQuoteParamField>(m, "CThostFtdcQryForQuoteParamField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryForQuoteParamField& a) {return CThostFtdcQryForQuoteParamField(a);})
		.def_property("BrokerID", [](const CThostFtdcQryForQuoteParamField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcQryForQuoteParamField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("reserve1", [](const CThostFtdcQryForQuoteParamField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcQryForQuoteParamField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("ExchangeID", [](const CThostFtdcQryForQuoteParamField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcQryForQuoteParamField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("InstrumentID", [](const CThostFtdcQryForQuoteParamField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcQryForQuoteParamField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def("to_dict", [](const CThostFtdcQryForQuoteParamField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["reserve1"] = encoding_cast(a.reserve1); d["ExchangeID"] = encoding_cast(a.ExchangeID); d["InstrumentID"] = encoding_cast(a.InstrumentID); return d;});

	py::class_<CThostFtdcForQuoteParamField>(m, "CThostFtdcForQuoteParamField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcForQuoteParamField& a) {return CThostFtdcForQuoteParamField(a);})
		.def_property("BrokerID", [](const CThostFtdcForQuoteParamField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcForQuoteParamField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("reserve1", [](const CThostFtdcForQuoteParamField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcForQuoteParamField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("ExchangeID", [](const CThostFtdcForQuoteParamField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcForQuoteParamField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_readwrite("LastPrice", &CThostFtdcForQuoteParamField::LastPrice)
		.def_readwrite("PriceInterval", &CThostFtdcForQuoteParamField::PriceInterval)
		.def_property("InstrumentID", [](const CThostFtdcForQuoteParamField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcForQuoteParamField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def("to_dict", [](const CThostFtdcForQuoteParamField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["reserve1"] = encoding_cast(a.reserve1); d["ExchangeID"] = encoding_cast(a.ExchangeID); d["LastPrice"] = a.LastPrice; d["PriceInterval"] = a.PriceInterval; d["InstrumentID"] = encoding_cast(a.InstrumentID); return d;});

	py::class_<CThostFtdcMMOptionInstrCommRateField>(m, "CThostFtdcMMOptionInstrCommRateField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcMMOptionInstrCommRateField& a) {return CThostFtdcMMOptionInstrCommRateField(a);})
		.def_property("reserve1", [](const CThostFtdcMMOptionInstrCommRateField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcMMOptionInstrCommRateField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_readwrite("InvestorRange", &CThostFtdcMMOptionInstrCommRateField::InvestorRange)
		.def_property("BrokerID", [](const CThostFtdcMMOptionInstrCommRateField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcMMOptionInstrCommRateField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcMMOptionInstrCommRateField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcMMOptionInstrCommRateField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_readwrite("OpenRatioByMoney", &CThostFtdcMMOptionInstrCommRateField::OpenRatioByMoney)
		.def_readwrite("OpenRatioByVolume", &CThostFtdcMMOptionInstrCommRateField::OpenRatioByVolume)
		.def_readwrite("CloseRatioByMoney", &CThostFtdcMMOptionInstrCommRateField::CloseRatioByMoney)
		.def_readwrite("CloseRatioByVolume", &CThostFtdcMMOptionInstrCommRateField::CloseRatioByVolume)
		.def_readwrite("CloseTodayRatioByMoney", &CThostFtdcMMOptionInstrCommRateField::CloseTodayRatioByMoney)
		.def_readwrite("CloseTodayRatioByVolume", &CThostFtdcMMOptionInstrCommRateField::CloseTodayRatioByVolume)
		.def_readwrite("StrikeRatioByMoney", &CThostFtdcMMOptionInstrCommRateField::StrikeRatioByMoney)
		.def_readwrite("StrikeRatioByVolume", &CThostFtdcMMOptionInstrCommRateField::StrikeRatioByVolume)
		.def_property("InstrumentID", [](const CThostFtdcMMOptionInstrCommRateField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcMMOptionInstrCommRateField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def("to_dict", [](const CThostFtdcMMOptionInstrCommRateField& a) {py::dict d; d["reserve1"] = encoding_cast(a.reserve1); d["InvestorRange"] = a.InvestorRange; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["OpenRatioByMoney"] = a.OpenRatioByMoney; d["OpenRatioByVolume"] = a.OpenRatioByVolume; d["CloseRatioByMoney"] = a.CloseRatioByMoney; d["CloseRatioByVolume"] = a.CloseRatioByVolume; d["CloseTodayRatioByMoney"] = a.CloseTodayRatioByMoney; d["CloseTodayRatioByVolume"] = a.CloseTodayRatioByVolume; d["StrikeRatioByMoney"] = a.StrikeRatioByMoney; d["StrikeRatioByVolume"] = a.StrikeRatioByVolume; d["InstrumentID"] = encoding_cast(a.InstrumentID); return d;});

	py::class_<CThostFtdcQryMMOptionInstrCommRateField>(m, "CThostFtdcQryMMOptionInstrCommRateField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryMMOptionInstrCommRateField& a) {return CThostFtdcQryMMOptionInstrCommRateField(a);})
		.def_property("BrokerID", [](const CThostFtdcQryMMOptionInstrCommRateField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcQryMMOptionInstrCommRateField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcQryMMOptionInstrCommRateField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcQryMMOptionInstrCommRateField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_property("reserve1", [](const CThostFtdcQryMMOptionInstrCommRateField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcQryMMOptionInstrCommRateField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("InstrumentID", [](const CThostFtdcQryMMOptionInstrCommRateField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcQryMMOptionInstrCommRateField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def("to_dict", [](const CThostFtdcQryMMOptionInstrCommRateField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["reserve1"] = encoding_cast(a.reserve1); d["InstrumentID"] = encoding_cast(a.InstrumentID); return d;});

	py::class_<CThostFtdcMMInstrumentCommissionRateField>(m, "CThostFtdcMMInstrumentCommissionRateField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcMMInstrumentCommissionRateField& a) {return CThostFtdcMMInstrumentCommissionRateField(a);})
		.def_property("reserve1", [](const CThostFtdcMMInstrumentCommissionRateField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcMMInstrumentCommissionRateField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_readwrite("InvestorRange", &CThostFtdcMMInstrumentCommissionRateField::InvestorRange)
		.def_property("BrokerID", [](const CThostFtdcMMInstrumentCommissionRateField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcMMInstrumentCommissionRateField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcMMInstrumentCommissionRateField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcMMInstrumentCommissionRateField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_readwrite("OpenRatioByMoney", &CThostFtdcMMInstrumentCommissionRateField::OpenRatioByMoney)
		.def_readwrite("OpenRatioByVolume", &CThostFtdcMMInstrumentCommissionRateField::OpenRatioByVolume)
		.def_readwrite("CloseRatioByMoney", &CThostFtdcMMInstrumentCommissionRateField::CloseRatioByMoney)
		.def_readwrite("CloseRatioByVolume", &CThostFtdcMMInstrumentCommissionRateField::CloseRatioByVolume)
		.def_readwrite("CloseTodayRatioByMoney", &CThostFtdcMMInstrumentCommissionRateField::CloseTodayRatioByMoney)
		.def_readwrite("CloseTodayRatioByVolume", &CThostFtdcMMInstrumentCommissionRateField::CloseTodayRatioByVolume)
		.def_property("InstrumentID", [](const CThostFtdcMMInstrumentCommissionRateField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcMMInstrumentCommissionRateField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def("to_dict", [](const CThostFtdcMMInstrumentCommissionRateField& a) {py::dict d; d["reserve1"] = encoding_cast(a.reserve1); d["InvestorRange"] = a.InvestorRange; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["OpenRatioByMoney"] = a.OpenRatioByMoney; d["OpenRatioByVolume"] = a.OpenRatioByVolume; d["CloseRatioByMoney"] = a.CloseRatioByMoney; d["CloseRatioByVolume"] = a.CloseRatioByVolume; d["CloseTodayRatioByMoney"] = a.CloseTodayRatioByMoney; d["CloseTodayRatioByVolume"] = a.CloseTodayRatioByVolume; d["InstrumentID"] = encoding_cast(a.InstrumentID); return d;});

	py::class_<CThostFtdcQryMMInstrumentCommissionRateField>(m, "CThostFtdcQryMMInstrumentCommissionRateField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryMMInstrumentCommissionRateField& a) {return CThostFtdcQryMMInstrumentCommissionRateField(a);})
		.def_property("BrokerID", [](const CThostFtdcQryMMInstrumentCommissionRateField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcQryMMInstrumentCommissionRateField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcQryMMInstrumentCommissionRateField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcQryMMInstrumentCommissionRateField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_property("reserve1", [](const CThostFtdcQryMMInstrumentCommissionRateField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcQryMMInstrumentCommissionRateField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("InstrumentID", [](const CThostFtdcQryMMInstrumentCommissionRateField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcQryMMInstrumentCommissionRateField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def("to_dict", [](const CThostFtdcQryMMInstrumentCommissionRateField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["reserve1"] = encoding_cast(a.reserve1); d["InstrumentID"] = encoding_cast(a.InstrumentID); return d;});

	py::class_<CThostFtdcInstrumentOrderCommRateField>(m, "CThostFtdcInstrumentOrderCommRateField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcInstrumentOrderCommRateField& a) {return CThostFtdcInstrumentOrderCommRateField(a);})
		.def_property("reserve1", [](const CThostFtdcInstrumentOrderCommRateField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcInstrumentOrderCommRateField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_readwrite("InvestorRange", &CThostFtdcInstrumentOrderCommRateField::InvestorRange)
		.def_property("BrokerID", [](const CThostFtdcInstrumentOrderCommRateField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcInstrumentOrderCommRateField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcInstrumentOrderCommRateField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcInstrumentOrderCommRateField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_readwrite("HedgeFlag", &CThostFtdcInstrumentOrderCommRateField::HedgeFlag)
		.def_readwrite("OrderCommByVolume", &CThostFtdcInstrumentOrderCommRateField::OrderCommByVolume)
		.def_readwrite("OrderActionCommByVolume", &CThostFtdcInstrumentOrderCommRateField::OrderActionCommByVolume)
		.def_property("ExchangeID", [](const CThostFtdcInstrumentOrderCommRateField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcInstrumentOrderCommRateField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("InvestUnitID", [](const CThostFtdcInstrumentOrderCommRateField& a) {return encoding_cast(a.InvestUnitID);}, [](CThostFtdcInstrumentOrderCommRateField& a, char c[]) {strcpy(a.InvestUnitID, c);})
		.def_property("InstrumentID", [](const CThostFtdcInstrumentOrderCommRateField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcInstrumentOrderCommRateField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def("to_dict", [](const CThostFtdcInstrumentOrderCommRateField& a) {py::dict d; d["reserve1"] = encoding_cast(a.reserve1); d["InvestorRange"] = a.InvestorRange; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["HedgeFlag"] = a.HedgeFlag; d["OrderCommByVolume"] = a.OrderCommByVolume; d["OrderActionCommByVolume"] = a.OrderActionCommByVolume; d["ExchangeID"] = encoding_cast(a.ExchangeID); d["InvestUnitID"] = encoding_cast(a.InvestUnitID); d["InstrumentID"] = encoding_cast(a.InstrumentID); return d;});

	py::class_<CThostFtdcQryInstrumentOrderCommRateField>(m, "CThostFtdcQryInstrumentOrderCommRateField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryInstrumentOrderCommRateField& a) {return CThostFtdcQryInstrumentOrderCommRateField(a);})
		.def_property("BrokerID", [](const CThostFtdcQryInstrumentOrderCommRateField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcQryInstrumentOrderCommRateField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcQryInstrumentOrderCommRateField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcQryInstrumentOrderCommRateField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_property("reserve1", [](const CThostFtdcQryInstrumentOrderCommRateField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcQryInstrumentOrderCommRateField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("InstrumentID", [](const CThostFtdcQryInstrumentOrderCommRateField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcQryInstrumentOrderCommRateField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def("to_dict", [](const CThostFtdcQryInstrumentOrderCommRateField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["reserve1"] = encoding_cast(a.reserve1); d["InstrumentID"] = encoding_cast(a.InstrumentID); return d;});

	py::class_<CThostFtdcTradeParamField>(m, "CThostFtdcTradeParamField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcTradeParamField& a) {return CThostFtdcTradeParamField(a);})
		.def_property("BrokerID", [](const CThostFtdcTradeParamField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcTradeParamField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_readwrite("TradeParamID", &CThostFtdcTradeParamField::TradeParamID)
		.def_property("TradeParamValue", [](const CThostFtdcTradeParamField& a) {return encoding_cast(a.TradeParamValue);}, [](CThostFtdcTradeParamField& a, char c[]) {strcpy(a.TradeParamValue, c);})
		.def_property("Memo", [](const CThostFtdcTradeParamField& a) {return encoding_cast(a.Memo);}, [](CThostFtdcTradeParamField& a, char c[]) {strcpy(a.Memo, c);})
		.def("to_dict", [](const CThostFtdcTradeParamField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["TradeParamID"] = a.TradeParamID; d["TradeParamValue"] = encoding_cast(a.TradeParamValue); d["Memo"] = encoding_cast(a.Memo); return d;});

	py::class_<CThostFtdcInstrumentMarginRateULField>(m, "CThostFtdcInstrumentMarginRateULField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcInstrumentMarginRateULField& a) {return CThostFtdcInstrumentMarginRateULField(a);})
		.def_property("reserve1", [](const CThostFtdcInstrumentMarginRateULField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcInstrumentMarginRateULField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_readwrite("InvestorRange", &CThostFtdcInstrumentMarginRateULField::InvestorRange)
		.def_property("BrokerID", [](const CThostFtdcInstrumentMarginRateULField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcInstrumentMarginRateULField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcInstrumentMarginRateULField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcInstrumentMarginRateULField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_readwrite("HedgeFlag", &CThostFtdcInstrumentMarginRateULField::HedgeFlag)
		.def_readwrite("LongMarginRatioByMoney", &CThostFtdcInstrumentMarginRateULField::LongMarginRatioByMoney)
		.def_readwrite("LongMarginRatioByVolume", &CThostFtdcInstrumentMarginRateULField::LongMarginRatioByVolume)
		.def_readwrite("ShortMarginRatioByMoney", &CThostFtdcInstrumentMarginRateULField::ShortMarginRatioByMoney)
		.def_readwrite("ShortMarginRatioByVolume", &CThostFtdcInstrumentMarginRateULField::ShortMarginRatioByVolume)
		.def_property("InstrumentID", [](const CThostFtdcInstrumentMarginRateULField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcInstrumentMarginRateULField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def("to_dict", [](const CThostFtdcInstrumentMarginRateULField& a) {py::dict d; d["reserve1"] = encoding_cast(a.reserve1); d["InvestorRange"] = a.InvestorRange; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["HedgeFlag"] = a.HedgeFlag; d["LongMarginRatioByMoney"] = a.LongMarginRatioByMoney; d["LongMarginRatioByVolume"] = a.LongMarginRatioByVolume; d["ShortMarginRatioByMoney"] = a.ShortMarginRatioByMoney; d["ShortMarginRatioByVolume"] = a.ShortMarginRatioByVolume; d["InstrumentID"] = encoding_cast(a.InstrumentID); return d;});

	py::class_<CThostFtdcFutureLimitPosiParamField>(m, "CThostFtdcFutureLimitPosiParamField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcFutureLimitPosiParamField& a) {return CThostFtdcFutureLimitPosiParamField(a);})
		.def_readwrite("InvestorRange", &CThostFtdcFutureLimitPosiParamField::InvestorRange)
		.def_property("BrokerID", [](const CThostFtdcFutureLimitPosiParamField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcFutureLimitPosiParamField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcFutureLimitPosiParamField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcFutureLimitPosiParamField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_property("reserve1", [](const CThostFtdcFutureLimitPosiParamField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcFutureLimitPosiParamField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_readwrite("SpecOpenVolume", &CThostFtdcFutureLimitPosiParamField::SpecOpenVolume)
		.def_readwrite("ArbiOpenVolume", &CThostFtdcFutureLimitPosiParamField::ArbiOpenVolume)
		.def_readwrite("OpenVolume", &CThostFtdcFutureLimitPosiParamField::OpenVolume)
		.def_property("ProductID", [](const CThostFtdcFutureLimitPosiParamField& a) {return encoding_cast(a.ProductID);}, [](CThostFtdcFutureLimitPosiParamField& a, char c[]) {strcpy(a.ProductID, c);})
		.def("to_dict", [](const CThostFtdcFutureLimitPosiParamField& a) {py::dict d; d["InvestorRange"] = a.InvestorRange; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["reserve1"] = encoding_cast(a.reserve1); d["SpecOpenVolume"] = a.SpecOpenVolume; d["ArbiOpenVolume"] = a.ArbiOpenVolume; d["OpenVolume"] = a.OpenVolume; d["ProductID"] = encoding_cast(a.ProductID); return d;});

	py::class_<CThostFtdcLoginForbiddenIPField>(m, "CThostFtdcLoginForbiddenIPField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcLoginForbiddenIPField& a) {return CThostFtdcLoginForbiddenIPField(a);})
		.def_property("reserve1", [](const CThostFtdcLoginForbiddenIPField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcLoginForbiddenIPField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("IPAddress", [](const CThostFtdcLoginForbiddenIPField& a) {return encoding_cast(a.IPAddress);}, [](CThostFtdcLoginForbiddenIPField& a, char c[]) {strcpy(a.IPAddress, c);})
		.def("to_dict", [](const CThostFtdcLoginForbiddenIPField& a) {py::dict d; d["reserve1"] = encoding_cast(a.reserve1); d["IPAddress"] = encoding_cast(a.IPAddress); return d;});

	py::class_<CThostFtdcIPListField>(m, "CThostFtdcIPListField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcIPListField& a) {return CThostFtdcIPListField(a);})
		.def_property("reserve1", [](const CThostFtdcIPListField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcIPListField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_readwrite("IsWhite", &CThostFtdcIPListField::IsWhite)
		.def_property("IPAddress", [](const CThostFtdcIPListField& a) {return encoding_cast(a.IPAddress);}, [](CThostFtdcIPListField& a, char c[]) {strcpy(a.IPAddress, c);})
		.def("to_dict", [](const CThostFtdcIPListField& a) {py::dict d; d["reserve1"] = encoding_cast(a.reserve1); d["IsWhite"] = a.IsWhite; d["IPAddress"] = encoding_cast(a.IPAddress); return d;});

	py::class_<CThostFtdcInputOptionSelfCloseField>(m, "CThostFtdcInputOptionSelfCloseField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcInputOptionSelfCloseField& a) {return CThostFtdcInputOptionSelfCloseField(a);})
		.def_property("BrokerID", [](const CThostFtdcInputOptionSelfCloseField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcInputOptionSelfCloseField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcInputOptionSelfCloseField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcInputOptionSelfCloseField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_property("reserve1", [](const CThostFtdcInputOptionSelfCloseField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcInputOptionSelfCloseField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("OptionSelfCloseRef", [](const CThostFtdcInputOptionSelfCloseField& a) {return encoding_cast(a.OptionSelfCloseRef);}, [](CThostFtdcInputOptionSelfCloseField& a, char c[]) {strcpy(a.OptionSelfCloseRef, c);})
		.def_property("UserID", [](const CThostFtdcInputOptionSelfCloseField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcInputOptionSelfCloseField& a, char c[]) {strcpy(a.UserID, c);})
		.def_readwrite("Volume", &CThostFtdcInputOptionSelfCloseField::Volume)
		.def_readwrite("RequestID", &CThostFtdcInputOptionSelfCloseField::RequestID)
		.def_property("BusinessUnit", [](const CThostFtdcInputOptionSelfCloseField& a) {return encoding_cast(a.BusinessUnit);}, [](CThostFtdcInputOptionSelfCloseField& a, char c[]) {strcpy(a.BusinessUnit, c);})
		.def_readwrite("HedgeFlag", &CThostFtdcInputOptionSelfCloseField::HedgeFlag)
		.def_readwrite("OptSelfCloseFlag", &CThostFtdcInputOptionSelfCloseField::OptSelfCloseFlag)
		.def_property("ExchangeID", [](const CThostFtdcInputOptionSelfCloseField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcInputOptionSelfCloseField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("InvestUnitID", [](const CThostFtdcInputOptionSelfCloseField& a) {return encoding_cast(a.InvestUnitID);}, [](CThostFtdcInputOptionSelfCloseField& a, char c[]) {strcpy(a.InvestUnitID, c);})
		.def_property("AccountID", [](const CThostFtdcInputOptionSelfCloseField& a) {return encoding_cast(a.AccountID);}, [](CThostFtdcInputOptionSelfCloseField& a, char c[]) {strcpy(a.AccountID, c);})
		.def_property("CurrencyID", [](const CThostFtdcInputOptionSelfCloseField& a) {return encoding_cast(a.CurrencyID);}, [](CThostFtdcInputOptionSelfCloseField& a, char c[]) {strcpy(a.CurrencyID, c);})
		.def_property("ClientID", [](const CThostFtdcInputOptionSelfCloseField& a) {return encoding_cast(a.ClientID);}, [](CThostFtdcInputOptionSelfCloseField& a, char c[]) {strcpy(a.ClientID, c);})
		.def_property("reserve2", [](const CThostFtdcInputOptionSelfCloseField& a) {return encoding_cast(a.reserve2);}, [](CThostFtdcInputOptionSelfCloseField& a, char c[]) {strcpy(a.reserve2, c);})
		.def_property("MacAddress", [](const CThostFtdcInputOptionSelfCloseField& a) {return encoding_cast(a.MacAddress);}, [](CThostFtdcInputOptionSelfCloseField& a, char c[]) {strcpy(a.MacAddress, c);})
		.def_property("InstrumentID", [](const CThostFtdcInputOptionSelfCloseField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcInputOptionSelfCloseField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def_property("IPAddress", [](const CThostFtdcInputOptionSelfCloseField& a) {return encoding_cast(a.IPAddress);}, [](CThostFtdcInputOptionSelfCloseField& a, char c[]) {strcpy(a.IPAddress, c);})
		.def("to_dict", [](const CThostFtdcInputOptionSelfCloseField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["reserve1"] = encoding_cast(a.reserve1); d["OptionSelfCloseRef"] = encoding_cast(a.OptionSelfCloseRef); d["UserID"] = encoding_cast(a.UserID); d["Volume"] = a.Volume; d["RequestID"] = a.RequestID; d["BusinessUnit"] = encoding_cast(a.BusinessUnit); d["HedgeFlag"] = a.HedgeFlag; d["OptSelfCloseFlag"] = a.OptSelfCloseFlag; d["ExchangeID"] = encoding_cast(a.ExchangeID); d["InvestUnitID"] = encoding_cast(a.InvestUnitID); d["AccountID"] = encoding_cast(a.AccountID); d["CurrencyID"] = encoding_cast(a.CurrencyID); d["ClientID"] = encoding_cast(a.ClientID); d["reserve2"] = encoding_cast(a.reserve2); d["MacAddress"] = encoding_cast(a.MacAddress); d["InstrumentID"] = encoding_cast(a.InstrumentID); d["IPAddress"] = encoding_cast(a.IPAddress); return d;});

	py::class_<CThostFtdcInputOptionSelfCloseActionField>(m, "CThostFtdcInputOptionSelfCloseActionField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcInputOptionSelfCloseActionField& a) {return CThostFtdcInputOptionSelfCloseActionField(a);})
		.def_property("BrokerID", [](const CThostFtdcInputOptionSelfCloseActionField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcInputOptionSelfCloseActionField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcInputOptionSelfCloseActionField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcInputOptionSelfCloseActionField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_readwrite("OptionSelfCloseActionRef", &CThostFtdcInputOptionSelfCloseActionField::OptionSelfCloseActionRef)
		.def_property("OptionSelfCloseRef", [](const CThostFtdcInputOptionSelfCloseActionField& a) {return encoding_cast(a.OptionSelfCloseRef);}, [](CThostFtdcInputOptionSelfCloseActionField& a, char c[]) {strcpy(a.OptionSelfCloseRef, c);})
		.def_readwrite("RequestID", &CThostFtdcInputOptionSelfCloseActionField::RequestID)
		.def_readwrite("FrontID", &CThostFtdcInputOptionSelfCloseActionField::FrontID)
		.def_readwrite("SessionID", &CThostFtdcInputOptionSelfCloseActionField::SessionID)
		.def_property("ExchangeID", [](const CThostFtdcInputOptionSelfCloseActionField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcInputOptionSelfCloseActionField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("OptionSelfCloseSysID", [](const CThostFtdcInputOptionSelfCloseActionField& a) {return encoding_cast(a.OptionSelfCloseSysID);}, [](CThostFtdcInputOptionSelfCloseActionField& a, char c[]) {strcpy(a.OptionSelfCloseSysID, c);})
		.def_readwrite("ActionFlag", &CThostFtdcInputOptionSelfCloseActionField::ActionFlag)
		.def_property("UserID", [](const CThostFtdcInputOptionSelfCloseActionField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcInputOptionSelfCloseActionField& a, char c[]) {strcpy(a.UserID, c);})
		.def_property("reserve1", [](const CThostFtdcInputOptionSelfCloseActionField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcInputOptionSelfCloseActionField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("InvestUnitID", [](const CThostFtdcInputOptionSelfCloseActionField& a) {return encoding_cast(a.InvestUnitID);}, [](CThostFtdcInputOptionSelfCloseActionField& a, char c[]) {strcpy(a.InvestUnitID, c);})
		.def_property("reserve2", [](const CThostFtdcInputOptionSelfCloseActionField& a) {return encoding_cast(a.reserve2);}, [](CThostFtdcInputOptionSelfCloseActionField& a, char c[]) {strcpy(a.reserve2, c);})
		.def_property("MacAddress", [](const CThostFtdcInputOptionSelfCloseActionField& a) {return encoding_cast(a.MacAddress);}, [](CThostFtdcInputOptionSelfCloseActionField& a, char c[]) {strcpy(a.MacAddress, c);})
		.def_property("InstrumentID", [](const CThostFtdcInputOptionSelfCloseActionField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcInputOptionSelfCloseActionField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def_property("IPAddress", [](const CThostFtdcInputOptionSelfCloseActionField& a) {return encoding_cast(a.IPAddress);}, [](CThostFtdcInputOptionSelfCloseActionField& a, char c[]) {strcpy(a.IPAddress, c);})
		.def("to_dict", [](const CThostFtdcInputOptionSelfCloseActionField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["OptionSelfCloseActionRef"] = a.OptionSelfCloseActionRef; d["OptionSelfCloseRef"] = encoding_cast(a.OptionSelfCloseRef); d["RequestID"] = a.RequestID; d["FrontID"] = a.FrontID; d["SessionID"] = a.SessionID; d["ExchangeID"] = encoding_cast(a.ExchangeID); d["OptionSelfCloseSysID"] = encoding_cast(a.OptionSelfCloseSysID); d["ActionFlag"] = a.ActionFlag; d["UserID"] = encoding_cast(a.UserID); d["reserve1"] = encoding_cast(a.reserve1); d["InvestUnitID"] = encoding_cast(a.InvestUnitID); d["reserve2"] = encoding_cast(a.reserve2); d["MacAddress"] = encoding_cast(a.MacAddress); d["InstrumentID"] = encoding_cast(a.InstrumentID); d["IPAddress"] = encoding_cast(a.IPAddress); return d;});

	py::class_<CThostFtdcOptionSelfCloseField>(m, "CThostFtdcOptionSelfCloseField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcOptionSelfCloseField& a) {return CThostFtdcOptionSelfCloseField(a);})
		.def_property("BrokerID", [](const CThostFtdcOptionSelfCloseField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcOptionSelfCloseField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcOptionSelfCloseField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcOptionSelfCloseField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_property("reserve1", [](const CThostFtdcOptionSelfCloseField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcOptionSelfCloseField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("OptionSelfCloseRef", [](const CThostFtdcOptionSelfCloseField& a) {return encoding_cast(a.OptionSelfCloseRef);}, [](CThostFtdcOptionSelfCloseField& a, char c[]) {strcpy(a.OptionSelfCloseRef, c);})
		.def_property("UserID", [](const CThostFtdcOptionSelfCloseField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcOptionSelfCloseField& a, char c[]) {strcpy(a.UserID, c);})
		.def_readwrite("Volume", &CThostFtdcOptionSelfCloseField::Volume)
		.def_readwrite("RequestID", &CThostFtdcOptionSelfCloseField::RequestID)
		.def_property("BusinessUnit", [](const CThostFtdcOptionSelfCloseField& a) {return encoding_cast(a.BusinessUnit);}, [](CThostFtdcOptionSelfCloseField& a, char c[]) {strcpy(a.BusinessUnit, c);})
		.def_readwrite("HedgeFlag", &CThostFtdcOptionSelfCloseField::HedgeFlag)
		.def_readwrite("OptSelfCloseFlag", &CThostFtdcOptionSelfCloseField::OptSelfCloseFlag)
		.def_property("OptionSelfCloseLocalID", [](const CThostFtdcOptionSelfCloseField& a) {return encoding_cast(a.OptionSelfCloseLocalID);}, [](CThostFtdcOptionSelfCloseField& a, char c[]) {strcpy(a.OptionSelfCloseLocalID, c);})
		.def_property("ExchangeID", [](const CThostFtdcOptionSelfCloseField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcOptionSelfCloseField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("ParticipantID", [](const CThostFtdcOptionSelfCloseField& a) {return encoding_cast(a.ParticipantID);}, [](CThostFtdcOptionSelfCloseField& a, char c[]) {strcpy(a.ParticipantID, c);})
		.def_property("ClientID", [](const CThostFtdcOptionSelfCloseField& a) {return encoding_cast(a.ClientID);}, [](CThostFtdcOptionSelfCloseField& a, char c[]) {strcpy(a.ClientID, c);})
		.def_property("reserve2", [](const CThostFtdcOptionSelfCloseField& a) {return encoding_cast(a.reserve2);}, [](CThostFtdcOptionSelfCloseField& a, char c[]) {strcpy(a.reserve2, c);})
		.def_property("TraderID", [](const CThostFtdcOptionSelfCloseField& a) {return encoding_cast(a.TraderID);}, [](CThostFtdcOptionSelfCloseField& a, char c[]) {strcpy(a.TraderID, c);})
		.def_readwrite("InstallID", &CThostFtdcOptionSelfCloseField::InstallID)
		.def_readwrite("OrderSubmitStatus", &CThostFtdcOptionSelfCloseField::OrderSubmitStatus)
		.def_readwrite("NotifySequence", &CThostFtdcOptionSelfCloseField::NotifySequence)
		.def_property("TradingDay", [](const CThostFtdcOptionSelfCloseField& a) {return encoding_cast(a.TradingDay);}, [](CThostFtdcOptionSelfCloseField& a, char c[]) {strcpy(a.TradingDay, c);})
		.def_readwrite("SettlementID", &CThostFtdcOptionSelfCloseField::SettlementID)
		.def_property("OptionSelfCloseSysID", [](const CThostFtdcOptionSelfCloseField& a) {return encoding_cast(a.OptionSelfCloseSysID);}, [](CThostFtdcOptionSelfCloseField& a, char c[]) {strcpy(a.OptionSelfCloseSysID, c);})
		.def_property("InsertDate", [](const CThostFtdcOptionSelfCloseField& a) {return encoding_cast(a.InsertDate);}, [](CThostFtdcOptionSelfCloseField& a, char c[]) {strcpy(a.InsertDate, c);})
		.def_property("InsertTime", [](const CThostFtdcOptionSelfCloseField& a) {return encoding_cast(a.InsertTime);}, [](CThostFtdcOptionSelfCloseField& a, char c[]) {strcpy(a.InsertTime, c);})
		.def_property("CancelTime", [](const CThostFtdcOptionSelfCloseField& a) {return encoding_cast(a.CancelTime);}, [](CThostFtdcOptionSelfCloseField& a, char c[]) {strcpy(a.CancelTime, c);})
		.def_readwrite("ExecResult", &CThostFtdcOptionSelfCloseField::ExecResult)
		.def_property("ClearingPartID", [](const CThostFtdcOptionSelfCloseField& a) {return encoding_cast(a.ClearingPartID);}, [](CThostFtdcOptionSelfCloseField& a, char c[]) {strcpy(a.ClearingPartID, c);})
		.def_readwrite("SequenceNo", &CThostFtdcOptionSelfCloseField::SequenceNo)
		.def_readwrite("FrontID", &CThostFtdcOptionSelfCloseField::FrontID)
		.def_readwrite("SessionID", &CThostFtdcOptionSelfCloseField::SessionID)
		.def_property("UserProductInfo", [](const CThostFtdcOptionSelfCloseField& a) {return encoding_cast(a.UserProductInfo);}, [](CThostFtdcOptionSelfCloseField& a, char c[]) {strcpy(a.UserProductInfo, c);})
		.def_property("StatusMsg", [](const CThostFtdcOptionSelfCloseField& a) {return encoding_cast(a.StatusMsg);}, [](CThostFtdcOptionSelfCloseField& a, char c[]) {strcpy(a.StatusMsg, c);})
		.def_property("ActiveUserID", [](const CThostFtdcOptionSelfCloseField& a) {return encoding_cast(a.ActiveUserID);}, [](CThostFtdcOptionSelfCloseField& a, char c[]) {strcpy(a.ActiveUserID, c);})
		.def_readwrite("BrokerOptionSelfCloseSeq", &CThostFtdcOptionSelfCloseField::BrokerOptionSelfCloseSeq)
		.def_property("BranchID", [](const CThostFtdcOptionSelfCloseField& a) {return encoding_cast(a.BranchID);}, [](CThostFtdcOptionSelfCloseField& a, char c[]) {strcpy(a.BranchID, c);})
		.def_property("InvestUnitID", [](const CThostFtdcOptionSelfCloseField& a) {return encoding_cast(a.InvestUnitID);}, [](CThostFtdcOptionSelfCloseField& a, char c[]) {strcpy(a.InvestUnitID, c);})
		.def_property("AccountID", [](const CThostFtdcOptionSelfCloseField& a) {return encoding_cast(a.AccountID);}, [](CThostFtdcOptionSelfCloseField& a, char c[]) {strcpy(a.AccountID, c);})
		.def_property("CurrencyID", [](const CThostFtdcOptionSelfCloseField& a) {return encoding_cast(a.CurrencyID);}, [](CThostFtdcOptionSelfCloseField& a, char c[]) {strcpy(a.CurrencyID, c);})
		.def_property("reserve3", [](const CThostFtdcOptionSelfCloseField& a) {return encoding_cast(a.reserve3);}, [](CThostFtdcOptionSelfCloseField& a, char c[]) {strcpy(a.reserve3, c);})
		.def_property("MacAddress", [](const CThostFtdcOptionSelfCloseField& a) {return encoding_cast(a.MacAddress);}, [](CThostFtdcOptionSelfCloseField& a, char c[]) {strcpy(a.MacAddress, c);})
		.def_property("InstrumentID", [](const CThostFtdcOptionSelfCloseField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcOptionSelfCloseField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def_property("ExchangeInstID", [](const CThostFtdcOptionSelfCloseField& a) {return encoding_cast(a.ExchangeInstID);}, [](CThostFtdcOptionSelfCloseField& a, char c[]) {strcpy(a.ExchangeInstID, c);})
		.def_property("IPAddress", [](const CThostFtdcOptionSelfCloseField& a) {return encoding_cast(a.IPAddress);}, [](CThostFtdcOptionSelfCloseField& a, char c[]) {strcpy(a.IPAddress, c);})
		.def("to_dict", [](const CThostFtdcOptionSelfCloseField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["reserve1"] = encoding_cast(a.reserve1); d["OptionSelfCloseRef"] = encoding_cast(a.OptionSelfCloseRef); d["UserID"] = encoding_cast(a.UserID); d["Volume"] = a.Volume; d["RequestID"] = a.RequestID; d["BusinessUnit"] = encoding_cast(a.BusinessUnit); d["HedgeFlag"] = a.HedgeFlag; d["OptSelfCloseFlag"] = a.OptSelfCloseFlag; d["OptionSelfCloseLocalID"] = encoding_cast(a.OptionSelfCloseLocalID); d["ExchangeID"] = encoding_cast(a.ExchangeID); d["ParticipantID"] = encoding_cast(a.ParticipantID); d["ClientID"] = encoding_cast(a.ClientID); d["reserve2"] = encoding_cast(a.reserve2); d["TraderID"] = encoding_cast(a.TraderID); d["InstallID"] = a.InstallID; d["OrderSubmitStatus"] = a.OrderSubmitStatus; d["NotifySequence"] = a.NotifySequence; d["TradingDay"] = encoding_cast(a.TradingDay); d["SettlementID"] = a.SettlementID; d["OptionSelfCloseSysID"] = encoding_cast(a.OptionSelfCloseSysID); d["InsertDate"] = encoding_cast(a.InsertDate); d["InsertTime"] = encoding_cast(a.InsertTime); d["CancelTime"] = encoding_cast(a.CancelTime); d["ExecResult"] = a.ExecResult; d["ClearingPartID"] = encoding_cast(a.ClearingPartID); d["SequenceNo"] = a.SequenceNo; d["FrontID"] = a.FrontID; d["SessionID"] = a.SessionID; d["UserProductInfo"] = encoding_cast(a.UserProductInfo); d["StatusMsg"] = encoding_cast(a.StatusMsg); d["ActiveUserID"] = encoding_cast(a.ActiveUserID); d["BrokerOptionSelfCloseSeq"] = a.BrokerOptionSelfCloseSeq; d["BranchID"] = encoding_cast(a.BranchID); d["InvestUnitID"] = encoding_cast(a.InvestUnitID); d["AccountID"] = encoding_cast(a.AccountID); d["CurrencyID"] = encoding_cast(a.CurrencyID); d["reserve3"] = encoding_cast(a.reserve3); d["MacAddress"] = encoding_cast(a.MacAddress); d["InstrumentID"] = encoding_cast(a.InstrumentID); d["ExchangeInstID"] = encoding_cast(a.ExchangeInstID); d["IPAddress"] = encoding_cast(a.IPAddress); return d;});

	py::class_<CThostFtdcOptionSelfCloseActionField>(m, "CThostFtdcOptionSelfCloseActionField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcOptionSelfCloseActionField& a) {return CThostFtdcOptionSelfCloseActionField(a);})
		.def_property("BrokerID", [](const CThostFtdcOptionSelfCloseActionField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcOptionSelfCloseActionField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcOptionSelfCloseActionField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcOptionSelfCloseActionField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_readwrite("OptionSelfCloseActionRef", &CThostFtdcOptionSelfCloseActionField::OptionSelfCloseActionRef)
		.def_property("OptionSelfCloseRef", [](const CThostFtdcOptionSelfCloseActionField& a) {return encoding_cast(a.OptionSelfCloseRef);}, [](CThostFtdcOptionSelfCloseActionField& a, char c[]) {strcpy(a.OptionSelfCloseRef, c);})
		.def_readwrite("RequestID", &CThostFtdcOptionSelfCloseActionField::RequestID)
		.def_readwrite("FrontID", &CThostFtdcOptionSelfCloseActionField::FrontID)
		.def_readwrite("SessionID", &CThostFtdcOptionSelfCloseActionField::SessionID)
		.def_property("ExchangeID", [](const CThostFtdcOptionSelfCloseActionField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcOptionSelfCloseActionField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("OptionSelfCloseSysID", [](const CThostFtdcOptionSelfCloseActionField& a) {return encoding_cast(a.OptionSelfCloseSysID);}, [](CThostFtdcOptionSelfCloseActionField& a, char c[]) {strcpy(a.OptionSelfCloseSysID, c);})
		.def_readwrite("ActionFlag", &CThostFtdcOptionSelfCloseActionField::ActionFlag)
		.def_property("ActionDate", [](const CThostFtdcOptionSelfCloseActionField& a) {return encoding_cast(a.ActionDate);}, [](CThostFtdcOptionSelfCloseActionField& a, char c[]) {strcpy(a.ActionDate, c);})
		.def_property("ActionTime", [](const CThostFtdcOptionSelfCloseActionField& a) {return encoding_cast(a.ActionTime);}, [](CThostFtdcOptionSelfCloseActionField& a, char c[]) {strcpy(a.ActionTime, c);})
		.def_property("TraderID", [](const CThostFtdcOptionSelfCloseActionField& a) {return encoding_cast(a.TraderID);}, [](CThostFtdcOptionSelfCloseActionField& a, char c[]) {strcpy(a.TraderID, c);})
		.def_readwrite("InstallID", &CThostFtdcOptionSelfCloseActionField::InstallID)
		.def_property("OptionSelfCloseLocalID", [](const CThostFtdcOptionSelfCloseActionField& a) {return encoding_cast(a.OptionSelfCloseLocalID);}, [](CThostFtdcOptionSelfCloseActionField& a, char c[]) {strcpy(a.OptionSelfCloseLocalID, c);})
		.def_property("ActionLocalID", [](const CThostFtdcOptionSelfCloseActionField& a) {return encoding_cast(a.ActionLocalID);}, [](CThostFtdcOptionSelfCloseActionField& a, char c[]) {strcpy(a.ActionLocalID, c);})
		.def_property("ParticipantID", [](const CThostFtdcOptionSelfCloseActionField& a) {return encoding_cast(a.ParticipantID);}, [](CThostFtdcOptionSelfCloseActionField& a, char c[]) {strcpy(a.ParticipantID, c);})
		.def_property("ClientID", [](const CThostFtdcOptionSelfCloseActionField& a) {return encoding_cast(a.ClientID);}, [](CThostFtdcOptionSelfCloseActionField& a, char c[]) {strcpy(a.ClientID, c);})
		.def_property("BusinessUnit", [](const CThostFtdcOptionSelfCloseActionField& a) {return encoding_cast(a.BusinessUnit);}, [](CThostFtdcOptionSelfCloseActionField& a, char c[]) {strcpy(a.BusinessUnit, c);})
		.def_readwrite("OrderActionStatus", &CThostFtdcOptionSelfCloseActionField::OrderActionStatus)
		.def_property("UserID", [](const CThostFtdcOptionSelfCloseActionField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcOptionSelfCloseActionField& a, char c[]) {strcpy(a.UserID, c);})
		.def_property("StatusMsg", [](const CThostFtdcOptionSelfCloseActionField& a) {return encoding_cast(a.StatusMsg);}, [](CThostFtdcOptionSelfCloseActionField& a, char c[]) {strcpy(a.StatusMsg, c);})
		.def_property("reserve1", [](const CThostFtdcOptionSelfCloseActionField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcOptionSelfCloseActionField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("BranchID", [](const CThostFtdcOptionSelfCloseActionField& a) {return encoding_cast(a.BranchID);}, [](CThostFtdcOptionSelfCloseActionField& a, char c[]) {strcpy(a.BranchID, c);})
		.def_property("InvestUnitID", [](const CThostFtdcOptionSelfCloseActionField& a) {return encoding_cast(a.InvestUnitID);}, [](CThostFtdcOptionSelfCloseActionField& a, char c[]) {strcpy(a.InvestUnitID, c);})
		.def_property("reserve2", [](const CThostFtdcOptionSelfCloseActionField& a) {return encoding_cast(a.reserve2);}, [](CThostFtdcOptionSelfCloseActionField& a, char c[]) {strcpy(a.reserve2, c);})
		.def_property("MacAddress", [](const CThostFtdcOptionSelfCloseActionField& a) {return encoding_cast(a.MacAddress);}, [](CThostFtdcOptionSelfCloseActionField& a, char c[]) {strcpy(a.MacAddress, c);})
		.def_property("InstrumentID", [](const CThostFtdcOptionSelfCloseActionField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcOptionSelfCloseActionField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def_property("IPAddress", [](const CThostFtdcOptionSelfCloseActionField& a) {return encoding_cast(a.IPAddress);}, [](CThostFtdcOptionSelfCloseActionField& a, char c[]) {strcpy(a.IPAddress, c);})
		.def("to_dict", [](const CThostFtdcOptionSelfCloseActionField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["OptionSelfCloseActionRef"] = a.OptionSelfCloseActionRef; d["OptionSelfCloseRef"] = encoding_cast(a.OptionSelfCloseRef); d["RequestID"] = a.RequestID; d["FrontID"] = a.FrontID; d["SessionID"] = a.SessionID; d["ExchangeID"] = encoding_cast(a.ExchangeID); d["OptionSelfCloseSysID"] = encoding_cast(a.OptionSelfCloseSysID); d["ActionFlag"] = a.ActionFlag; d["ActionDate"] = encoding_cast(a.ActionDate); d["ActionTime"] = encoding_cast(a.ActionTime); d["TraderID"] = encoding_cast(a.TraderID); d["InstallID"] = a.InstallID; d["OptionSelfCloseLocalID"] = encoding_cast(a.OptionSelfCloseLocalID); d["ActionLocalID"] = encoding_cast(a.ActionLocalID); d["ParticipantID"] = encoding_cast(a.ParticipantID); d["ClientID"] = encoding_cast(a.ClientID); d["BusinessUnit"] = encoding_cast(a.BusinessUnit); d["OrderActionStatus"] = a.OrderActionStatus; d["UserID"] = encoding_cast(a.UserID); d["StatusMsg"] = encoding_cast(a.StatusMsg); d["reserve1"] = encoding_cast(a.reserve1); d["BranchID"] = encoding_cast(a.BranchID); d["InvestUnitID"] = encoding_cast(a.InvestUnitID); d["reserve2"] = encoding_cast(a.reserve2); d["MacAddress"] = encoding_cast(a.MacAddress); d["InstrumentID"] = encoding_cast(a.InstrumentID); d["IPAddress"] = encoding_cast(a.IPAddress); return d;});

	py::class_<CThostFtdcQryOptionSelfCloseField>(m, "CThostFtdcQryOptionSelfCloseField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryOptionSelfCloseField& a) {return CThostFtdcQryOptionSelfCloseField(a);})
		.def_property("BrokerID", [](const CThostFtdcQryOptionSelfCloseField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcQryOptionSelfCloseField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcQryOptionSelfCloseField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcQryOptionSelfCloseField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_property("reserve1", [](const CThostFtdcQryOptionSelfCloseField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcQryOptionSelfCloseField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("ExchangeID", [](const CThostFtdcQryOptionSelfCloseField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcQryOptionSelfCloseField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("OptionSelfCloseSysID", [](const CThostFtdcQryOptionSelfCloseField& a) {return encoding_cast(a.OptionSelfCloseSysID);}, [](CThostFtdcQryOptionSelfCloseField& a, char c[]) {strcpy(a.OptionSelfCloseSysID, c);})
		.def_property("InsertTimeStart", [](const CThostFtdcQryOptionSelfCloseField& a) {return encoding_cast(a.InsertTimeStart);}, [](CThostFtdcQryOptionSelfCloseField& a, char c[]) {strcpy(a.InsertTimeStart, c);})
		.def_property("InsertTimeEnd", [](const CThostFtdcQryOptionSelfCloseField& a) {return encoding_cast(a.InsertTimeEnd);}, [](CThostFtdcQryOptionSelfCloseField& a, char c[]) {strcpy(a.InsertTimeEnd, c);})
		.def_property("InstrumentID", [](const CThostFtdcQryOptionSelfCloseField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcQryOptionSelfCloseField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def("to_dict", [](const CThostFtdcQryOptionSelfCloseField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["reserve1"] = encoding_cast(a.reserve1); d["ExchangeID"] = encoding_cast(a.ExchangeID); d["OptionSelfCloseSysID"] = encoding_cast(a.OptionSelfCloseSysID); d["InsertTimeStart"] = encoding_cast(a.InsertTimeStart); d["InsertTimeEnd"] = encoding_cast(a.InsertTimeEnd); d["InstrumentID"] = encoding_cast(a.InstrumentID); return d;});

	py::class_<CThostFtdcExchangeOptionSelfCloseField>(m, "CThostFtdcExchangeOptionSelfCloseField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcExchangeOptionSelfCloseField& a) {return CThostFtdcExchangeOptionSelfCloseField(a);})
		.def_readwrite("Volume", &CThostFtdcExchangeOptionSelfCloseField::Volume)
		.def_readwrite("RequestID", &CThostFtdcExchangeOptionSelfCloseField::RequestID)
		.def_property("BusinessUnit", [](const CThostFtdcExchangeOptionSelfCloseField& a) {return encoding_cast(a.BusinessUnit);}, [](CThostFtdcExchangeOptionSelfCloseField& a, char c[]) {strcpy(a.BusinessUnit, c);})
		.def_readwrite("HedgeFlag", &CThostFtdcExchangeOptionSelfCloseField::HedgeFlag)
		.def_readwrite("OptSelfCloseFlag", &CThostFtdcExchangeOptionSelfCloseField::OptSelfCloseFlag)
		.def_property("OptionSelfCloseLocalID", [](const CThostFtdcExchangeOptionSelfCloseField& a) {return encoding_cast(a.OptionSelfCloseLocalID);}, [](CThostFtdcExchangeOptionSelfCloseField& a, char c[]) {strcpy(a.OptionSelfCloseLocalID, c);})
		.def_property("ExchangeID", [](const CThostFtdcExchangeOptionSelfCloseField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcExchangeOptionSelfCloseField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("ParticipantID", [](const CThostFtdcExchangeOptionSelfCloseField& a) {return encoding_cast(a.ParticipantID);}, [](CThostFtdcExchangeOptionSelfCloseField& a, char c[]) {strcpy(a.ParticipantID, c);})
		.def_property("ClientID", [](const CThostFtdcExchangeOptionSelfCloseField& a) {return encoding_cast(a.ClientID);}, [](CThostFtdcExchangeOptionSelfCloseField& a, char c[]) {strcpy(a.ClientID, c);})
		.def_property("reserve1", [](const CThostFtdcExchangeOptionSelfCloseField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcExchangeOptionSelfCloseField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("TraderID", [](const CThostFtdcExchangeOptionSelfCloseField& a) {return encoding_cast(a.TraderID);}, [](CThostFtdcExchangeOptionSelfCloseField& a, char c[]) {strcpy(a.TraderID, c);})
		.def_readwrite("InstallID", &CThostFtdcExchangeOptionSelfCloseField::InstallID)
		.def_readwrite("OrderSubmitStatus", &CThostFtdcExchangeOptionSelfCloseField::OrderSubmitStatus)
		.def_readwrite("NotifySequence", &CThostFtdcExchangeOptionSelfCloseField::NotifySequence)
		.def_property("TradingDay", [](const CThostFtdcExchangeOptionSelfCloseField& a) {return encoding_cast(a.TradingDay);}, [](CThostFtdcExchangeOptionSelfCloseField& a, char c[]) {strcpy(a.TradingDay, c);})
		.def_readwrite("SettlementID", &CThostFtdcExchangeOptionSelfCloseField::SettlementID)
		.def_property("OptionSelfCloseSysID", [](const CThostFtdcExchangeOptionSelfCloseField& a) {return encoding_cast(a.OptionSelfCloseSysID);}, [](CThostFtdcExchangeOptionSelfCloseField& a, char c[]) {strcpy(a.OptionSelfCloseSysID, c);})
		.def_property("InsertDate", [](const CThostFtdcExchangeOptionSelfCloseField& a) {return encoding_cast(a.InsertDate);}, [](CThostFtdcExchangeOptionSelfCloseField& a, char c[]) {strcpy(a.InsertDate, c);})
		.def_property("InsertTime", [](const CThostFtdcExchangeOptionSelfCloseField& a) {return encoding_cast(a.InsertTime);}, [](CThostFtdcExchangeOptionSelfCloseField& a, char c[]) {strcpy(a.InsertTime, c);})
		.def_property("CancelTime", [](const CThostFtdcExchangeOptionSelfCloseField& a) {return encoding_cast(a.CancelTime);}, [](CThostFtdcExchangeOptionSelfCloseField& a, char c[]) {strcpy(a.CancelTime, c);})
		.def_readwrite("ExecResult", &CThostFtdcExchangeOptionSelfCloseField::ExecResult)
		.def_property("ClearingPartID", [](const CThostFtdcExchangeOptionSelfCloseField& a) {return encoding_cast(a.ClearingPartID);}, [](CThostFtdcExchangeOptionSelfCloseField& a, char c[]) {strcpy(a.ClearingPartID, c);})
		.def_readwrite("SequenceNo", &CThostFtdcExchangeOptionSelfCloseField::SequenceNo)
		.def_property("BranchID", [](const CThostFtdcExchangeOptionSelfCloseField& a) {return encoding_cast(a.BranchID);}, [](CThostFtdcExchangeOptionSelfCloseField& a, char c[]) {strcpy(a.BranchID, c);})
		.def_property("reserve2", [](const CThostFtdcExchangeOptionSelfCloseField& a) {return encoding_cast(a.reserve2);}, [](CThostFtdcExchangeOptionSelfCloseField& a, char c[]) {strcpy(a.reserve2, c);})
		.def_property("MacAddress", [](const CThostFtdcExchangeOptionSelfCloseField& a) {return encoding_cast(a.MacAddress);}, [](CThostFtdcExchangeOptionSelfCloseField& a, char c[]) {strcpy(a.MacAddress, c);})
		.def_property("ExchangeInstID", [](const CThostFtdcExchangeOptionSelfCloseField& a) {return encoding_cast(a.ExchangeInstID);}, [](CThostFtdcExchangeOptionSelfCloseField& a, char c[]) {strcpy(a.ExchangeInstID, c);})
		.def_property("IPAddress", [](const CThostFtdcExchangeOptionSelfCloseField& a) {return encoding_cast(a.IPAddress);}, [](CThostFtdcExchangeOptionSelfCloseField& a, char c[]) {strcpy(a.IPAddress, c);})
		.def("to_dict", [](const CThostFtdcExchangeOptionSelfCloseField& a) {py::dict d; d["Volume"] = a.Volume; d["RequestID"] = a.RequestID; d["BusinessUnit"] = encoding_cast(a.BusinessUnit); d["HedgeFlag"] = a.HedgeFlag; d["OptSelfCloseFlag"] = a.OptSelfCloseFlag; d["OptionSelfCloseLocalID"] = encoding_cast(a.OptionSelfCloseLocalID); d["ExchangeID"] = encoding_cast(a.ExchangeID); d["ParticipantID"] = encoding_cast(a.ParticipantID); d["ClientID"] = encoding_cast(a.ClientID); d["reserve1"] = encoding_cast(a.reserve1); d["TraderID"] = encoding_cast(a.TraderID); d["InstallID"] = a.InstallID; d["OrderSubmitStatus"] = a.OrderSubmitStatus; d["NotifySequence"] = a.NotifySequence; d["TradingDay"] = encoding_cast(a.TradingDay); d["SettlementID"] = a.SettlementID; d["OptionSelfCloseSysID"] = encoding_cast(a.OptionSelfCloseSysID); d["InsertDate"] = encoding_cast(a.InsertDate); d["InsertTime"] = encoding_cast(a.InsertTime); d["CancelTime"] = encoding_cast(a.CancelTime); d["ExecResult"] = a.ExecResult; d["ClearingPartID"] = encoding_cast(a.ClearingPartID); d["SequenceNo"] = a.SequenceNo; d["BranchID"] = encoding_cast(a.BranchID); d["reserve2"] = encoding_cast(a.reserve2); d["MacAddress"] = encoding_cast(a.MacAddress); d["ExchangeInstID"] = encoding_cast(a.ExchangeInstID); d["IPAddress"] = encoding_cast(a.IPAddress); return d;});

	py::class_<CThostFtdcQryOptionSelfCloseActionField>(m, "CThostFtdcQryOptionSelfCloseActionField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryOptionSelfCloseActionField& a) {return CThostFtdcQryOptionSelfCloseActionField(a);})
		.def_property("BrokerID", [](const CThostFtdcQryOptionSelfCloseActionField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcQryOptionSelfCloseActionField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcQryOptionSelfCloseActionField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcQryOptionSelfCloseActionField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_property("ExchangeID", [](const CThostFtdcQryOptionSelfCloseActionField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcQryOptionSelfCloseActionField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def("to_dict", [](const CThostFtdcQryOptionSelfCloseActionField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["ExchangeID"] = encoding_cast(a.ExchangeID); return d;});

	py::class_<CThostFtdcExchangeOptionSelfCloseActionField>(m, "CThostFtdcExchangeOptionSelfCloseActionField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcExchangeOptionSelfCloseActionField& a) {return CThostFtdcExchangeOptionSelfCloseActionField(a);})
		.def_property("ExchangeID", [](const CThostFtdcExchangeOptionSelfCloseActionField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcExchangeOptionSelfCloseActionField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("OptionSelfCloseSysID", [](const CThostFtdcExchangeOptionSelfCloseActionField& a) {return encoding_cast(a.OptionSelfCloseSysID);}, [](CThostFtdcExchangeOptionSelfCloseActionField& a, char c[]) {strcpy(a.OptionSelfCloseSysID, c);})
		.def_readwrite("ActionFlag", &CThostFtdcExchangeOptionSelfCloseActionField::ActionFlag)
		.def_property("ActionDate", [](const CThostFtdcExchangeOptionSelfCloseActionField& a) {return encoding_cast(a.ActionDate);}, [](CThostFtdcExchangeOptionSelfCloseActionField& a, char c[]) {strcpy(a.ActionDate, c);})
		.def_property("ActionTime", [](const CThostFtdcExchangeOptionSelfCloseActionField& a) {return encoding_cast(a.ActionTime);}, [](CThostFtdcExchangeOptionSelfCloseActionField& a, char c[]) {strcpy(a.ActionTime, c);})
		.def_property("TraderID", [](const CThostFtdcExchangeOptionSelfCloseActionField& a) {return encoding_cast(a.TraderID);}, [](CThostFtdcExchangeOptionSelfCloseActionField& a, char c[]) {strcpy(a.TraderID, c);})
		.def_readwrite("InstallID", &CThostFtdcExchangeOptionSelfCloseActionField::InstallID)
		.def_property("OptionSelfCloseLocalID", [](const CThostFtdcExchangeOptionSelfCloseActionField& a) {return encoding_cast(a.OptionSelfCloseLocalID);}, [](CThostFtdcExchangeOptionSelfCloseActionField& a, char c[]) {strcpy(a.OptionSelfCloseLocalID, c);})
		.def_property("ActionLocalID", [](const CThostFtdcExchangeOptionSelfCloseActionField& a) {return encoding_cast(a.ActionLocalID);}, [](CThostFtdcExchangeOptionSelfCloseActionField& a, char c[]) {strcpy(a.ActionLocalID, c);})
		.def_property("ParticipantID", [](const CThostFtdcExchangeOptionSelfCloseActionField& a) {return encoding_cast(a.ParticipantID);}, [](CThostFtdcExchangeOptionSelfCloseActionField& a, char c[]) {strcpy(a.ParticipantID, c);})
		.def_property("ClientID", [](const CThostFtdcExchangeOptionSelfCloseActionField& a) {return encoding_cast(a.ClientID);}, [](CThostFtdcExchangeOptionSelfCloseActionField& a, char c[]) {strcpy(a.ClientID, c);})
		.def_property("BusinessUnit", [](const CThostFtdcExchangeOptionSelfCloseActionField& a) {return encoding_cast(a.BusinessUnit);}, [](CThostFtdcExchangeOptionSelfCloseActionField& a, char c[]) {strcpy(a.BusinessUnit, c);})
		.def_readwrite("OrderActionStatus", &CThostFtdcExchangeOptionSelfCloseActionField::OrderActionStatus)
		.def_property("UserID", [](const CThostFtdcExchangeOptionSelfCloseActionField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcExchangeOptionSelfCloseActionField& a, char c[]) {strcpy(a.UserID, c);})
		.def_property("BranchID", [](const CThostFtdcExchangeOptionSelfCloseActionField& a) {return encoding_cast(a.BranchID);}, [](CThostFtdcExchangeOptionSelfCloseActionField& a, char c[]) {strcpy(a.BranchID, c);})
		.def_property("reserve1", [](const CThostFtdcExchangeOptionSelfCloseActionField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcExchangeOptionSelfCloseActionField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("MacAddress", [](const CThostFtdcExchangeOptionSelfCloseActionField& a) {return encoding_cast(a.MacAddress);}, [](CThostFtdcExchangeOptionSelfCloseActionField& a, char c[]) {strcpy(a.MacAddress, c);})
		.def_property("reserve2", [](const CThostFtdcExchangeOptionSelfCloseActionField& a) {return encoding_cast(a.reserve2);}, [](CThostFtdcExchangeOptionSelfCloseActionField& a, char c[]) {strcpy(a.reserve2, c);})
		.def_readwrite("OptSelfCloseFlag", &CThostFtdcExchangeOptionSelfCloseActionField::OptSelfCloseFlag)
		.def_property("IPAddress", [](const CThostFtdcExchangeOptionSelfCloseActionField& a) {return encoding_cast(a.IPAddress);}, [](CThostFtdcExchangeOptionSelfCloseActionField& a, char c[]) {strcpy(a.IPAddress, c);})
		.def_property("ExchangeInstID", [](const CThostFtdcExchangeOptionSelfCloseActionField& a) {return encoding_cast(a.ExchangeInstID);}, [](CThostFtdcExchangeOptionSelfCloseActionField& a, char c[]) {strcpy(a.ExchangeInstID, c);})
		.def("to_dict", [](const CThostFtdcExchangeOptionSelfCloseActionField& a) {py::dict d; d["ExchangeID"] = encoding_cast(a.ExchangeID); d["OptionSelfCloseSysID"] = encoding_cast(a.OptionSelfCloseSysID); d["ActionFlag"] = a.ActionFlag; d["ActionDate"] = encoding_cast(a.ActionDate); d["ActionTime"] = encoding_cast(a.ActionTime); d["TraderID"] = encoding_cast(a.TraderID); d["InstallID"] = a.InstallID; d["OptionSelfCloseLocalID"] = encoding_cast(a.OptionSelfCloseLocalID); d["ActionLocalID"] = encoding_cast(a.ActionLocalID); d["ParticipantID"] = encoding_cast(a.ParticipantID); d["ClientID"] = encoding_cast(a.ClientID); d["BusinessUnit"] = encoding_cast(a.BusinessUnit); d["OrderActionStatus"] = a.OrderActionStatus; d["UserID"] = encoding_cast(a.UserID); d["BranchID"] = encoding_cast(a.BranchID); d["reserve1"] = encoding_cast(a.reserve1); d["MacAddress"] = encoding_cast(a.MacAddress); d["reserve2"] = encoding_cast(a.reserve2); d["OptSelfCloseFlag"] = a.OptSelfCloseFlag; d["IPAddress"] = encoding_cast(a.IPAddress); d["ExchangeInstID"] = encoding_cast(a.ExchangeInstID); return d;});

	py::class_<CThostFtdcSyncDelaySwapField>(m, "CThostFtdcSyncDelaySwapField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcSyncDelaySwapField& a) {return CThostFtdcSyncDelaySwapField(a);})
		.def_property("DelaySwapSeqNo", [](const CThostFtdcSyncDelaySwapField& a) {return encoding_cast(a.DelaySwapSeqNo);}, [](CThostFtdcSyncDelaySwapField& a, char c[]) {strcpy(a.DelaySwapSeqNo, c);})
		.def_property("BrokerID", [](const CThostFtdcSyncDelaySwapField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcSyncDelaySwapField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcSyncDelaySwapField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcSyncDelaySwapField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_property("FromCurrencyID", [](const CThostFtdcSyncDelaySwapField& a) {return encoding_cast(a.FromCurrencyID);}, [](CThostFtdcSyncDelaySwapField& a, char c[]) {strcpy(a.FromCurrencyID, c);})
		.def_readwrite("FromAmount", &CThostFtdcSyncDelaySwapField::FromAmount)
		.def_readwrite("FromFrozenSwap", &CThostFtdcSyncDelaySwapField::FromFrozenSwap)
		.def_readwrite("FromRemainSwap", &CThostFtdcSyncDelaySwapField::FromRemainSwap)
		.def_property("ToCurrencyID", [](const CThostFtdcSyncDelaySwapField& a) {return encoding_cast(a.ToCurrencyID);}, [](CThostFtdcSyncDelaySwapField& a, char c[]) {strcpy(a.ToCurrencyID, c);})
		.def_readwrite("ToAmount", &CThostFtdcSyncDelaySwapField::ToAmount)
		.def_readwrite("IsManualSwap", &CThostFtdcSyncDelaySwapField::IsManualSwap)
		.def_readwrite("IsAllRemainSetZero", &CThostFtdcSyncDelaySwapField::IsAllRemainSetZero)
		.def("to_dict", [](const CThostFtdcSyncDelaySwapField& a) {py::dict d; d["DelaySwapSeqNo"] = encoding_cast(a.DelaySwapSeqNo); d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["FromCurrencyID"] = encoding_cast(a.FromCurrencyID); d["FromAmount"] = a.FromAmount; d["FromFrozenSwap"] = a.FromFrozenSwap; d["FromRemainSwap"] = a.FromRemainSwap; d["ToCurrencyID"] = encoding_cast(a.ToCurrencyID); d["ToAmount"] = a.ToAmount; d["IsManualSwap"] = a.IsManualSwap; d["IsAllRemainSetZero"] = a.IsAllRemainSetZero; return d;});

	py::class_<CThostFtdcQrySyncDelaySwapField>(m, "CThostFtdcQrySyncDelaySwapField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQrySyncDelaySwapField& a) {return CThostFtdcQrySyncDelaySwapField(a);})
		.def_property("BrokerID", [](const CThostFtdcQrySyncDelaySwapField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcQrySyncDelaySwapField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("DelaySwapSeqNo", [](const CThostFtdcQrySyncDelaySwapField& a) {return encoding_cast(a.DelaySwapSeqNo);}, [](CThostFtdcQrySyncDelaySwapField& a, char c[]) {strcpy(a.DelaySwapSeqNo, c);})
		.def("to_dict", [](const CThostFtdcQrySyncDelaySwapField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["DelaySwapSeqNo"] = encoding_cast(a.DelaySwapSeqNo); return d;});

	py::class_<CThostFtdcInvestUnitField>(m, "CThostFtdcInvestUnitField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcInvestUnitField& a) {return CThostFtdcInvestUnitField(a);})
		.def_property("BrokerID", [](const CThostFtdcInvestUnitField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcInvestUnitField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcInvestUnitField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcInvestUnitField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_property("InvestUnitID", [](const CThostFtdcInvestUnitField& a) {return encoding_cast(a.InvestUnitID);}, [](CThostFtdcInvestUnitField& a, char c[]) {strcpy(a.InvestUnitID, c);})
		.def_property("InvestorUnitName", [](const CThostFtdcInvestUnitField& a) {return encoding_cast(a.InvestorUnitName);}, [](CThostFtdcInvestUnitField& a, char c[]) {strcpy(a.InvestorUnitName, c);})
		.def_property("InvestorGroupID", [](const CThostFtdcInvestUnitField& a) {return encoding_cast(a.InvestorGroupID);}, [](CThostFtdcInvestUnitField& a, char c[]) {strcpy(a.InvestorGroupID, c);})
		.def_property("CommModelID", [](const CThostFtdcInvestUnitField& a) {return encoding_cast(a.CommModelID);}, [](CThostFtdcInvestUnitField& a, char c[]) {strcpy(a.CommModelID, c);})
		.def_property("MarginModelID", [](const CThostFtdcInvestUnitField& a) {return encoding_cast(a.MarginModelID);}, [](CThostFtdcInvestUnitField& a, char c[]) {strcpy(a.MarginModelID, c);})
		.def_property("AccountID", [](const CThostFtdcInvestUnitField& a) {return encoding_cast(a.AccountID);}, [](CThostFtdcInvestUnitField& a, char c[]) {strcpy(a.AccountID, c);})
		.def_property("CurrencyID", [](const CThostFtdcInvestUnitField& a) {return encoding_cast(a.CurrencyID);}, [](CThostFtdcInvestUnitField& a, char c[]) {strcpy(a.CurrencyID, c);})
		.def("to_dict", [](const CThostFtdcInvestUnitField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["InvestUnitID"] = encoding_cast(a.InvestUnitID); d["InvestorUnitName"] = encoding_cast(a.InvestorUnitName); d["InvestorGroupID"] = encoding_cast(a.InvestorGroupID); d["CommModelID"] = encoding_cast(a.CommModelID); d["MarginModelID"] = encoding_cast(a.MarginModelID); d["AccountID"] = encoding_cast(a.AccountID); d["CurrencyID"] = encoding_cast(a.CurrencyID); return d;});

	py::class_<CThostFtdcQryInvestUnitField>(m, "CThostFtdcQryInvestUnitField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryInvestUnitField& a) {return CThostFtdcQryInvestUnitField(a);})
		.def_property("BrokerID", [](const CThostFtdcQryInvestUnitField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcQryInvestUnitField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcQryInvestUnitField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcQryInvestUnitField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_property("InvestUnitID", [](const CThostFtdcQryInvestUnitField& a) {return encoding_cast(a.InvestUnitID);}, [](CThostFtdcQryInvestUnitField& a, char c[]) {strcpy(a.InvestUnitID, c);})
		.def("to_dict", [](const CThostFtdcQryInvestUnitField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["InvestUnitID"] = encoding_cast(a.InvestUnitID); return d;});

	py::class_<CThostFtdcSecAgentCheckModeField>(m, "CThostFtdcSecAgentCheckModeField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcSecAgentCheckModeField& a) {return CThostFtdcSecAgentCheckModeField(a);})
		.def_property("InvestorID", [](const CThostFtdcSecAgentCheckModeField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcSecAgentCheckModeField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_property("BrokerID", [](const CThostFtdcSecAgentCheckModeField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcSecAgentCheckModeField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("CurrencyID", [](const CThostFtdcSecAgentCheckModeField& a) {return encoding_cast(a.CurrencyID);}, [](CThostFtdcSecAgentCheckModeField& a, char c[]) {strcpy(a.CurrencyID, c);})
		.def_property("BrokerSecAgentID", [](const CThostFtdcSecAgentCheckModeField& a) {return encoding_cast(a.BrokerSecAgentID);}, [](CThostFtdcSecAgentCheckModeField& a, char c[]) {strcpy(a.BrokerSecAgentID, c);})
		.def_readwrite("CheckSelfAccount", &CThostFtdcSecAgentCheckModeField::CheckSelfAccount)
		.def("to_dict", [](const CThostFtdcSecAgentCheckModeField& a) {py::dict d; d["InvestorID"] = encoding_cast(a.InvestorID); d["BrokerID"] = encoding_cast(a.BrokerID); d["CurrencyID"] = encoding_cast(a.CurrencyID); d["BrokerSecAgentID"] = encoding_cast(a.BrokerSecAgentID); d["CheckSelfAccount"] = a.CheckSelfAccount; return d;});

	py::class_<CThostFtdcSecAgentTradeInfoField>(m, "CThostFtdcSecAgentTradeInfoField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcSecAgentTradeInfoField& a) {return CThostFtdcSecAgentTradeInfoField(a);})
		.def_property("BrokerID", [](const CThostFtdcSecAgentTradeInfoField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcSecAgentTradeInfoField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("BrokerSecAgentID", [](const CThostFtdcSecAgentTradeInfoField& a) {return encoding_cast(a.BrokerSecAgentID);}, [](CThostFtdcSecAgentTradeInfoField& a, char c[]) {strcpy(a.BrokerSecAgentID, c);})
		.def_property("InvestorID", [](const CThostFtdcSecAgentTradeInfoField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcSecAgentTradeInfoField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_property("LongCustomerName", [](const CThostFtdcSecAgentTradeInfoField& a) {return encoding_cast(a.LongCustomerName);}, [](CThostFtdcSecAgentTradeInfoField& a, char c[]) {strcpy(a.LongCustomerName, c);})
		.def("to_dict", [](const CThostFtdcSecAgentTradeInfoField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["BrokerSecAgentID"] = encoding_cast(a.BrokerSecAgentID); d["InvestorID"] = encoding_cast(a.InvestorID); d["LongCustomerName"] = encoding_cast(a.LongCustomerName); return d;});

	py::class_<CThostFtdcMarketDataField>(m, "CThostFtdcMarketDataField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcMarketDataField& a) {return CThostFtdcMarketDataField(a);})
		.def_property("TradingDay", [](const CThostFtdcMarketDataField& a) {return encoding_cast(a.TradingDay);}, [](CThostFtdcMarketDataField& a, char c[]) {strcpy(a.TradingDay, c);})
		.def_property("reserve1", [](const CThostFtdcMarketDataField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcMarketDataField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("ExchangeID", [](const CThostFtdcMarketDataField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcMarketDataField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("reserve2", [](const CThostFtdcMarketDataField& a) {return encoding_cast(a.reserve2);}, [](CThostFtdcMarketDataField& a, char c[]) {strcpy(a.reserve2, c);})
		.def_readwrite("LastPrice", &CThostFtdcMarketDataField::LastPrice)
		.def_readwrite("PreSettlementPrice", &CThostFtdcMarketDataField::PreSettlementPrice)
		.def_readwrite("PreClosePrice", &CThostFtdcMarketDataField::PreClosePrice)
		.def_readwrite("PreOpenInterest", &CThostFtdcMarketDataField::PreOpenInterest)
		.def_readwrite("OpenPrice", &CThostFtdcMarketDataField::OpenPrice)
		.def_readwrite("HighestPrice", &CThostFtdcMarketDataField::HighestPrice)
		.def_readwrite("LowestPrice", &CThostFtdcMarketDataField::LowestPrice)
		.def_readwrite("Volume", &CThostFtdcMarketDataField::Volume)
		.def_readwrite("Turnover", &CThostFtdcMarketDataField::Turnover)
		.def_readwrite("OpenInterest", &CThostFtdcMarketDataField::OpenInterest)
		.def_readwrite("ClosePrice", &CThostFtdcMarketDataField::ClosePrice)
		.def_readwrite("SettlementPrice", &CThostFtdcMarketDataField::SettlementPrice)
		.def_readwrite("UpperLimitPrice", &CThostFtdcMarketDataField::UpperLimitPrice)
		.def_readwrite("LowerLimitPrice", &CThostFtdcMarketDataField::LowerLimitPrice)
		.def_readwrite("PreDelta", &CThostFtdcMarketDataField::PreDelta)
		.def_readwrite("CurrDelta", &CThostFtdcMarketDataField::CurrDelta)
		.def_property("UpdateTime", [](const CThostFtdcMarketDataField& a) {return encoding_cast(a.UpdateTime);}, [](CThostFtdcMarketDataField& a, char c[]) {strcpy(a.UpdateTime, c);})
		.def_readwrite("UpdateMillisec", &CThostFtdcMarketDataField::UpdateMillisec)
		.def_property("ActionDay", [](const CThostFtdcMarketDataField& a) {return encoding_cast(a.ActionDay);}, [](CThostFtdcMarketDataField& a, char c[]) {strcpy(a.ActionDay, c);})
		.def_property("InstrumentID", [](const CThostFtdcMarketDataField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcMarketDataField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def_property("ExchangeInstID", [](const CThostFtdcMarketDataField& a) {return encoding_cast(a.ExchangeInstID);}, [](CThostFtdcMarketDataField& a, char c[]) {strcpy(a.ExchangeInstID, c);})
		.def("to_dict", [](const CThostFtdcMarketDataField& a) {py::dict d; d["TradingDay"] = encoding_cast(a.TradingDay); d["reserve1"] = encoding_cast(a.reserve1); d["ExchangeID"] = encoding_cast(a.ExchangeID); d["reserve2"] = encoding_cast(a.reserve2); d["LastPrice"] = a.LastPrice; d["PreSettlementPrice"] = a.PreSettlementPrice; d["PreClosePrice"] = a.PreClosePrice; d["PreOpenInterest"] = a.PreOpenInterest; d["OpenPrice"] = a.OpenPrice; d["HighestPrice"] = a.HighestPrice; d["LowestPrice"] = a.LowestPrice; d["Volume"] = a.Volume; d["Turnover"] = a.Turnover; d["OpenInterest"] = a.OpenInterest; d["ClosePrice"] = a.ClosePrice; d["SettlementPrice"] = a.SettlementPrice; d["UpperLimitPrice"] = a.UpperLimitPrice; d["LowerLimitPrice"] = a.LowerLimitPrice; d["PreDelta"] = a.PreDelta; d["CurrDelta"] = a.CurrDelta; d["UpdateTime"] = encoding_cast(a.UpdateTime); d["UpdateMillisec"] = a.UpdateMillisec; d["ActionDay"] = encoding_cast(a.ActionDay); d["InstrumentID"] = encoding_cast(a.InstrumentID); d["ExchangeInstID"] = encoding_cast(a.ExchangeInstID); return d;});

	py::class_<CThostFtdcMarketDataBaseField>(m, "CThostFtdcMarketDataBaseField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcMarketDataBaseField& a) {return CThostFtdcMarketDataBaseField(a);})
		.def_property("TradingDay", [](const CThostFtdcMarketDataBaseField& a) {return encoding_cast(a.TradingDay);}, [](CThostFtdcMarketDataBaseField& a, char c[]) {strcpy(a.TradingDay, c);})
		.def_readwrite("PreSettlementPrice", &CThostFtdcMarketDataBaseField::PreSettlementPrice)
		.def_readwrite("PreClosePrice", &CThostFtdcMarketDataBaseField::PreClosePrice)
		.def_readwrite("PreOpenInterest", &CThostFtdcMarketDataBaseField::PreOpenInterest)
		.def_readwrite("PreDelta", &CThostFtdcMarketDataBaseField::PreDelta)
		.def("to_dict", [](const CThostFtdcMarketDataBaseField& a) {py::dict d; d["TradingDay"] = encoding_cast(a.TradingDay); d["PreSettlementPrice"] = a.PreSettlementPrice; d["PreClosePrice"] = a.PreClosePrice; d["PreOpenInterest"] = a.PreOpenInterest; d["PreDelta"] = a.PreDelta; return d;});

	py::class_<CThostFtdcMarketDataStaticField>(m, "CThostFtdcMarketDataStaticField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcMarketDataStaticField& a) {return CThostFtdcMarketDataStaticField(a);})
		.def_readwrite("OpenPrice", &CThostFtdcMarketDataStaticField::OpenPrice)
		.def_readwrite("HighestPrice", &CThostFtdcMarketDataStaticField::HighestPrice)
		.def_readwrite("LowestPrice", &CThostFtdcMarketDataStaticField::LowestPrice)
		.def_readwrite("ClosePrice", &CThostFtdcMarketDataStaticField::ClosePrice)
		.def_readwrite("UpperLimitPrice", &CThostFtdcMarketDataStaticField::UpperLimitPrice)
		.def_readwrite("LowerLimitPrice", &CThostFtdcMarketDataStaticField::LowerLimitPrice)
		.def_readwrite("SettlementPrice", &CThostFtdcMarketDataStaticField::SettlementPrice)
		.def_readwrite("CurrDelta", &CThostFtdcMarketDataStaticField::CurrDelta)
		.def("to_dict", [](const CThostFtdcMarketDataStaticField& a) {py::dict d; d["OpenPrice"] = a.OpenPrice; d["HighestPrice"] = a.HighestPrice; d["LowestPrice"] = a.LowestPrice; d["ClosePrice"] = a.ClosePrice; d["UpperLimitPrice"] = a.UpperLimitPrice; d["LowerLimitPrice"] = a.LowerLimitPrice; d["SettlementPrice"] = a.SettlementPrice; d["CurrDelta"] = a.CurrDelta; return d;});

	py::class_<CThostFtdcMarketDataLastMatchField>(m, "CThostFtdcMarketDataLastMatchField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcMarketDataLastMatchField& a) {return CThostFtdcMarketDataLastMatchField(a);})
		.def_readwrite("LastPrice", &CThostFtdcMarketDataLastMatchField::LastPrice)
		.def_readwrite("Volume", &CThostFtdcMarketDataLastMatchField::Volume)
		.def_readwrite("Turnover", &CThostFtdcMarketDataLastMatchField::Turnover)
		.def_readwrite("OpenInterest", &CThostFtdcMarketDataLastMatchField::OpenInterest)
		.def("to_dict", [](const CThostFtdcMarketDataLastMatchField& a) {py::dict d; d["LastPrice"] = a.LastPrice; d["Volume"] = a.Volume; d["Turnover"] = a.Turnover; d["OpenInterest"] = a.OpenInterest; return d;});

	py::class_<CThostFtdcMarketDataBestPriceField>(m, "CThostFtdcMarketDataBestPriceField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcMarketDataBestPriceField& a) {return CThostFtdcMarketDataBestPriceField(a);})
		.def_readwrite("BidPrice1", &CThostFtdcMarketDataBestPriceField::BidPrice1)
		.def_readwrite("BidVolume1", &CThostFtdcMarketDataBestPriceField::BidVolume1)
		.def_readwrite("AskPrice1", &CThostFtdcMarketDataBestPriceField::AskPrice1)
		.def_readwrite("AskVolume1", &CThostFtdcMarketDataBestPriceField::AskVolume1)
		.def("to_dict", [](const CThostFtdcMarketDataBestPriceField& a) {py::dict d; d["BidPrice1"] = a.BidPrice1; d["BidVolume1"] = a.BidVolume1; d["AskPrice1"] = a.AskPrice1; d["AskVolume1"] = a.AskVolume1; return d;});

	py::class_<CThostFtdcMarketDataBid23Field>(m, "CThostFtdcMarketDataBid23Field")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcMarketDataBid23Field& a) {return CThostFtdcMarketDataBid23Field(a);})
		.def_readwrite("BidPrice2", &CThostFtdcMarketDataBid23Field::BidPrice2)
		.def_readwrite("BidVolume2", &CThostFtdcMarketDataBid23Field::BidVolume2)
		.def_readwrite("BidPrice3", &CThostFtdcMarketDataBid23Field::BidPrice3)
		.def_readwrite("BidVolume3", &CThostFtdcMarketDataBid23Field::BidVolume3)
		.def("to_dict", [](const CThostFtdcMarketDataBid23Field& a) {py::dict d; d["BidPrice2"] = a.BidPrice2; d["BidVolume2"] = a.BidVolume2; d["BidPrice3"] = a.BidPrice3; d["BidVolume3"] = a.BidVolume3; return d;});

	py::class_<CThostFtdcMarketDataAsk23Field>(m, "CThostFtdcMarketDataAsk23Field")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcMarketDataAsk23Field& a) {return CThostFtdcMarketDataAsk23Field(a);})
		.def_readwrite("AskPrice2", &CThostFtdcMarketDataAsk23Field::AskPrice2)
		.def_readwrite("AskVolume2", &CThostFtdcMarketDataAsk23Field::AskVolume2)
		.def_readwrite("AskPrice3", &CThostFtdcMarketDataAsk23Field::AskPrice3)
		.def_readwrite("AskVolume3", &CThostFtdcMarketDataAsk23Field::AskVolume3)
		.def("to_dict", [](const CThostFtdcMarketDataAsk23Field& a) {py::dict d; d["AskPrice2"] = a.AskPrice2; d["AskVolume2"] = a.AskVolume2; d["AskPrice3"] = a.AskPrice3; d["AskVolume3"] = a.AskVolume3; return d;});

	py::class_<CThostFtdcMarketDataBid45Field>(m, "CThostFtdcMarketDataBid45Field")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcMarketDataBid45Field& a) {return CThostFtdcMarketDataBid45Field(a);})
		.def_readwrite("BidPrice4", &CThostFtdcMarketDataBid45Field::BidPrice4)
		.def_readwrite("BidVolume4", &CThostFtdcMarketDataBid45Field::BidVolume4)
		.def_readwrite("BidPrice5", &CThostFtdcMarketDataBid45Field::BidPrice5)
		.def_readwrite("BidVolume5", &CThostFtdcMarketDataBid45Field::BidVolume5)
		.def("to_dict", [](const CThostFtdcMarketDataBid45Field& a) {py::dict d; d["BidPrice4"] = a.BidPrice4; d["BidVolume4"] = a.BidVolume4; d["BidPrice5"] = a.BidPrice5; d["BidVolume5"] = a.BidVolume5; return d;});

	py::class_<CThostFtdcMarketDataAsk45Field>(m, "CThostFtdcMarketDataAsk45Field")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcMarketDataAsk45Field& a) {return CThostFtdcMarketDataAsk45Field(a);})
		.def_readwrite("AskPrice4", &CThostFtdcMarketDataAsk45Field::AskPrice4)
		.def_readwrite("AskVolume4", &CThostFtdcMarketDataAsk45Field::AskVolume4)
		.def_readwrite("AskPrice5", &CThostFtdcMarketDataAsk45Field::AskPrice5)
		.def_readwrite("AskVolume5", &CThostFtdcMarketDataAsk45Field::AskVolume5)
		.def("to_dict", [](const CThostFtdcMarketDataAsk45Field& a) {py::dict d; d["AskPrice4"] = a.AskPrice4; d["AskVolume4"] = a.AskVolume4; d["AskPrice5"] = a.AskPrice5; d["AskVolume5"] = a.AskVolume5; return d;});

	py::class_<CThostFtdcMarketDataUpdateTimeField>(m, "CThostFtdcMarketDataUpdateTimeField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcMarketDataUpdateTimeField& a) {return CThostFtdcMarketDataUpdateTimeField(a);})
		.def_property("reserve1", [](const CThostFtdcMarketDataUpdateTimeField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcMarketDataUpdateTimeField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("UpdateTime", [](const CThostFtdcMarketDataUpdateTimeField& a) {return encoding_cast(a.UpdateTime);}, [](CThostFtdcMarketDataUpdateTimeField& a, char c[]) {strcpy(a.UpdateTime, c);})
		.def_readwrite("UpdateMillisec", &CThostFtdcMarketDataUpdateTimeField::UpdateMillisec)
		.def_property("ActionDay", [](const CThostFtdcMarketDataUpdateTimeField& a) {return encoding_cast(a.ActionDay);}, [](CThostFtdcMarketDataUpdateTimeField& a, char c[]) {strcpy(a.ActionDay, c);})
		.def_property("InstrumentID", [](const CThostFtdcMarketDataUpdateTimeField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcMarketDataUpdateTimeField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def("to_dict", [](const CThostFtdcMarketDataUpdateTimeField& a) {py::dict d; d["reserve1"] = encoding_cast(a.reserve1); d["UpdateTime"] = encoding_cast(a.UpdateTime); d["UpdateMillisec"] = a.UpdateMillisec; d["ActionDay"] = encoding_cast(a.ActionDay); d["InstrumentID"] = encoding_cast(a.InstrumentID); return d;});

	py::class_<CThostFtdcMarketDataExchangeField>(m, "CThostFtdcMarketDataExchangeField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcMarketDataExchangeField& a) {return CThostFtdcMarketDataExchangeField(a);})
		.def_property("ExchangeID", [](const CThostFtdcMarketDataExchangeField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcMarketDataExchangeField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def("to_dict", [](const CThostFtdcMarketDataExchangeField& a) {py::dict d; d["ExchangeID"] = encoding_cast(a.ExchangeID); return d;});

	py::class_<CThostFtdcSpecificInstrumentField>(m, "CThostFtdcSpecificInstrumentField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcSpecificInstrumentField& a) {return CThostFtdcSpecificInstrumentField(a);})
		.def_property("reserve1", [](const CThostFtdcSpecificInstrumentField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcSpecificInstrumentField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("InstrumentID", [](const CThostFtdcSpecificInstrumentField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcSpecificInstrumentField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def("to_dict", [](const CThostFtdcSpecificInstrumentField& a) {py::dict d; d["reserve1"] = encoding_cast(a.reserve1); d["InstrumentID"] = encoding_cast(a.InstrumentID); return d;});

	py::class_<CThostFtdcInstrumentStatusField>(m, "CThostFtdcInstrumentStatusField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcInstrumentStatusField& a) {return CThostFtdcInstrumentStatusField(a);})
		.def_property("ExchangeID", [](const CThostFtdcInstrumentStatusField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcInstrumentStatusField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("reserve1", [](const CThostFtdcInstrumentStatusField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcInstrumentStatusField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("SettlementGroupID", [](const CThostFtdcInstrumentStatusField& a) {return encoding_cast(a.SettlementGroupID);}, [](CThostFtdcInstrumentStatusField& a, char c[]) {strcpy(a.SettlementGroupID, c);})
		.def_property("reserve2", [](const CThostFtdcInstrumentStatusField& a) {return encoding_cast(a.reserve2);}, [](CThostFtdcInstrumentStatusField& a, char c[]) {strcpy(a.reserve2, c);})
		.def_readwrite("InstrumentStatus", &CThostFtdcInstrumentStatusField::InstrumentStatus)
		.def_readwrite("TradingSegmentSN", &CThostFtdcInstrumentStatusField::TradingSegmentSN)
		.def_property("EnterTime", [](const CThostFtdcInstrumentStatusField& a) {return encoding_cast(a.EnterTime);}, [](CThostFtdcInstrumentStatusField& a, char c[]) {strcpy(a.EnterTime, c);})
		.def_readwrite("EnterReason", &CThostFtdcInstrumentStatusField::EnterReason)
		.def_property("ExchangeInstID", [](const CThostFtdcInstrumentStatusField& a) {return encoding_cast(a.ExchangeInstID);}, [](CThostFtdcInstrumentStatusField& a, char c[]) {strcpy(a.ExchangeInstID, c);})
		.def_property("InstrumentID", [](const CThostFtdcInstrumentStatusField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcInstrumentStatusField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def("to_dict", [](const CThostFtdcInstrumentStatusField& a) {py::dict d; d["ExchangeID"] = encoding_cast(a.ExchangeID); d["reserve1"] = encoding_cast(a.reserve1); d["SettlementGroupID"] = encoding_cast(a.SettlementGroupID); d["reserve2"] = encoding_cast(a.reserve2); d["InstrumentStatus"] = a.InstrumentStatus; d["TradingSegmentSN"] = a.TradingSegmentSN; d["EnterTime"] = encoding_cast(a.EnterTime); d["EnterReason"] = a.EnterReason; d["ExchangeInstID"] = encoding_cast(a.ExchangeInstID); d["InstrumentID"] = encoding_cast(a.InstrumentID); return d;});

	py::class_<CThostFtdcQryInstrumentStatusField>(m, "CThostFtdcQryInstrumentStatusField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryInstrumentStatusField& a) {return CThostFtdcQryInstrumentStatusField(a);})
		.def_property("ExchangeID", [](const CThostFtdcQryInstrumentStatusField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcQryInstrumentStatusField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("reserve1", [](const CThostFtdcQryInstrumentStatusField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcQryInstrumentStatusField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("ExchangeInstID", [](const CThostFtdcQryInstrumentStatusField& a) {return encoding_cast(a.ExchangeInstID);}, [](CThostFtdcQryInstrumentStatusField& a, char c[]) {strcpy(a.ExchangeInstID, c);})
		.def("to_dict", [](const CThostFtdcQryInstrumentStatusField& a) {py::dict d; d["ExchangeID"] = encoding_cast(a.ExchangeID); d["reserve1"] = encoding_cast(a.reserve1); d["ExchangeInstID"] = encoding_cast(a.ExchangeInstID); return d;});

	py::class_<CThostFtdcInvestorAccountField>(m, "CThostFtdcInvestorAccountField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcInvestorAccountField& a) {return CThostFtdcInvestorAccountField(a);})
		.def_property("BrokerID", [](const CThostFtdcInvestorAccountField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcInvestorAccountField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcInvestorAccountField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcInvestorAccountField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_property("AccountID", [](const CThostFtdcInvestorAccountField& a) {return encoding_cast(a.AccountID);}, [](CThostFtdcInvestorAccountField& a, char c[]) {strcpy(a.AccountID, c);})
		.def_property("CurrencyID", [](const CThostFtdcInvestorAccountField& a) {return encoding_cast(a.CurrencyID);}, [](CThostFtdcInvestorAccountField& a, char c[]) {strcpy(a.CurrencyID, c);})
		.def("to_dict", [](const CThostFtdcInvestorAccountField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["AccountID"] = encoding_cast(a.AccountID); d["CurrencyID"] = encoding_cast(a.CurrencyID); return d;});

	py::class_<CThostFtdcPositionProfitAlgorithmField>(m, "CThostFtdcPositionProfitAlgorithmField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcPositionProfitAlgorithmField& a) {return CThostFtdcPositionProfitAlgorithmField(a);})
		.def_property("BrokerID", [](const CThostFtdcPositionProfitAlgorithmField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcPositionProfitAlgorithmField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("AccountID", [](const CThostFtdcPositionProfitAlgorithmField& a) {return encoding_cast(a.AccountID);}, [](CThostFtdcPositionProfitAlgorithmField& a, char c[]) {strcpy(a.AccountID, c);})
		.def_readwrite("Algorithm", &CThostFtdcPositionProfitAlgorithmField::Algorithm)
		.def_property("Memo", [](const CThostFtdcPositionProfitAlgorithmField& a) {return encoding_cast(a.Memo);}, [](CThostFtdcPositionProfitAlgorithmField& a, char c[]) {strcpy(a.Memo, c);})
		.def_property("CurrencyID", [](const CThostFtdcPositionProfitAlgorithmField& a) {return encoding_cast(a.CurrencyID);}, [](CThostFtdcPositionProfitAlgorithmField& a, char c[]) {strcpy(a.CurrencyID, c);})
		.def("to_dict", [](const CThostFtdcPositionProfitAlgorithmField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["AccountID"] = encoding_cast(a.AccountID); d["Algorithm"] = a.Algorithm; d["Memo"] = encoding_cast(a.Memo); d["CurrencyID"] = encoding_cast(a.CurrencyID); return d;});

	py::class_<CThostFtdcDiscountField>(m, "CThostFtdcDiscountField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcDiscountField& a) {return CThostFtdcDiscountField(a);})
		.def_property("BrokerID", [](const CThostFtdcDiscountField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcDiscountField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_readwrite("InvestorRange", &CThostFtdcDiscountField::InvestorRange)
		.def_property("InvestorID", [](const CThostFtdcDiscountField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcDiscountField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_readwrite("Discount", &CThostFtdcDiscountField::Discount)
		.def("to_dict", [](const CThostFtdcDiscountField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorRange"] = a.InvestorRange; d["InvestorID"] = encoding_cast(a.InvestorID); d["Discount"] = a.Discount; return d;});

	py::class_<CThostFtdcQryTransferBankField>(m, "CThostFtdcQryTransferBankField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryTransferBankField& a) {return CThostFtdcQryTransferBankField(a);})
		.def_property("BankID", [](const CThostFtdcQryTransferBankField& a) {return encoding_cast(a.BankID);}, [](CThostFtdcQryTransferBankField& a, char c[]) {strcpy(a.BankID, c);})
		.def_property("BankBrchID", [](const CThostFtdcQryTransferBankField& a) {return encoding_cast(a.BankBrchID);}, [](CThostFtdcQryTransferBankField& a, char c[]) {strcpy(a.BankBrchID, c);})
		.def("to_dict", [](const CThostFtdcQryTransferBankField& a) {py::dict d; d["BankID"] = encoding_cast(a.BankID); d["BankBrchID"] = encoding_cast(a.BankBrchID); return d;});

	py::class_<CThostFtdcTransferBankField>(m, "CThostFtdcTransferBankField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcTransferBankField& a) {return CThostFtdcTransferBankField(a);})
		.def_property("BankID", [](const CThostFtdcTransferBankField& a) {return encoding_cast(a.BankID);}, [](CThostFtdcTransferBankField& a, char c[]) {strcpy(a.BankID, c);})
		.def_property("BankBrchID", [](const CThostFtdcTransferBankField& a) {return encoding_cast(a.BankBrchID);}, [](CThostFtdcTransferBankField& a, char c[]) {strcpy(a.BankBrchID, c);})
		.def_property("BankName", [](const CThostFtdcTransferBankField& a) {return encoding_cast(a.BankName);}, [](CThostFtdcTransferBankField& a, char c[]) {strcpy(a.BankName, c);})
		.def_readwrite("IsActive", &CThostFtdcTransferBankField::IsActive)
		.def("to_dict", [](const CThostFtdcTransferBankField& a) {py::dict d; d["BankID"] = encoding_cast(a.BankID); d["BankBrchID"] = encoding_cast(a.BankBrchID); d["BankName"] = encoding_cast(a.BankName); d["IsActive"] = a.IsActive; return d;});

	py::class_<CThostFtdcQryInvestorPositionDetailField>(m, "CThostFtdcQryInvestorPositionDetailField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryInvestorPositionDetailField& a) {return CThostFtdcQryInvestorPositionDetailField(a);})
		.def_property("BrokerID", [](const CThostFtdcQryInvestorPositionDetailField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcQryInvestorPositionDetailField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcQryInvestorPositionDetailField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcQryInvestorPositionDetailField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_property("reserve1", [](const CThostFtdcQryInvestorPositionDetailField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcQryInvestorPositionDetailField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("ExchangeID", [](const CThostFtdcQryInvestorPositionDetailField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcQryInvestorPositionDetailField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("InvestUnitID", [](const CThostFtdcQryInvestorPositionDetailField& a) {return encoding_cast(a.InvestUnitID);}, [](CThostFtdcQryInvestorPositionDetailField& a, char c[]) {strcpy(a.InvestUnitID, c);})
		.def_property("InstrumentID", [](const CThostFtdcQryInvestorPositionDetailField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcQryInvestorPositionDetailField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def("to_dict", [](const CThostFtdcQryInvestorPositionDetailField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["reserve1"] = encoding_cast(a.reserve1); d["ExchangeID"] = encoding_cast(a.ExchangeID); d["InvestUnitID"] = encoding_cast(a.InvestUnitID); d["InstrumentID"] = encoding_cast(a.InstrumentID); return d;});

	py::class_<CThostFtdcInvestorPositionDetailField>(m, "CThostFtdcInvestorPositionDetailField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcInvestorPositionDetailField& a) {return CThostFtdcInvestorPositionDetailField(a);})
		.def_property("reserve1", [](const CThostFtdcInvestorPositionDetailField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcInvestorPositionDetailField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("BrokerID", [](const CThostFtdcInvestorPositionDetailField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcInvestorPositionDetailField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcInvestorPositionDetailField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcInvestorPositionDetailField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_readwrite("HedgeFlag", &CThostFtdcInvestorPositionDetailField::HedgeFlag)
		.def_readwrite("Direction", &CThostFtdcInvestorPositionDetailField::Direction)
		.def_property("OpenDate", [](const CThostFtdcInvestorPositionDetailField& a) {return encoding_cast(a.OpenDate);}, [](CThostFtdcInvestorPositionDetailField& a, char c[]) {strcpy(a.OpenDate, c);})
		.def_property("TradeID", [](const CThostFtdcInvestorPositionDetailField& a) {return encoding_cast(a.TradeID);}, [](CThostFtdcInvestorPositionDetailField& a, char c[]) {strcpy(a.TradeID, c);})
		.def_readwrite("Volume", &CThostFtdcInvestorPositionDetailField::Volume)
		.def_readwrite("OpenPrice", &CThostFtdcInvestorPositionDetailField::OpenPrice)
		.def_property("TradingDay", [](const CThostFtdcInvestorPositionDetailField& a) {return encoding_cast(a.TradingDay);}, [](CThostFtdcInvestorPositionDetailField& a, char c[]) {strcpy(a.TradingDay, c);})
		.def_readwrite("SettlementID", &CThostFtdcInvestorPositionDetailField::SettlementID)
		.def_readwrite("TradeType", &CThostFtdcInvestorPositionDetailField::TradeType)
		.def_property("reserve2", [](const CThostFtdcInvestorPositionDetailField& a) {return encoding_cast(a.reserve2);}, [](CThostFtdcInvestorPositionDetailField& a, char c[]) {strcpy(a.reserve2, c);})
		.def_property("ExchangeID", [](const CThostFtdcInvestorPositionDetailField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcInvestorPositionDetailField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_readwrite("CloseProfitByDate", &CThostFtdcInvestorPositionDetailField::CloseProfitByDate)
		.def_readwrite("CloseProfitByTrade", &CThostFtdcInvestorPositionDetailField::CloseProfitByTrade)
		.def_readwrite("PositionProfitByDate", &CThostFtdcInvestorPositionDetailField::PositionProfitByDate)
		.def_readwrite("PositionProfitByTrade", &CThostFtdcInvestorPositionDetailField::PositionProfitByTrade)
		.def_readwrite("Margin", &CThostFtdcInvestorPositionDetailField::Margin)
		.def_readwrite("ExchMargin", &CThostFtdcInvestorPositionDetailField::ExchMargin)
		.def_readwrite("MarginRateByMoney", &CThostFtdcInvestorPositionDetailField::MarginRateByMoney)
		.def_readwrite("MarginRateByVolume", &CThostFtdcInvestorPositionDetailField::MarginRateByVolume)
		.def_readwrite("LastSettlementPrice", &CThostFtdcInvestorPositionDetailField::LastSettlementPrice)
		.def_readwrite("SettlementPrice", &CThostFtdcInvestorPositionDetailField::SettlementPrice)
		.def_readwrite("CloseVolume", &CThostFtdcInvestorPositionDetailField::CloseVolume)
		.def_readwrite("CloseAmount", &CThostFtdcInvestorPositionDetailField::CloseAmount)
		.def_readwrite("TimeFirstVolume", &CThostFtdcInvestorPositionDetailField::TimeFirstVolume)
		.def_property("InvestUnitID", [](const CThostFtdcInvestorPositionDetailField& a) {return encoding_cast(a.InvestUnitID);}, [](CThostFtdcInvestorPositionDetailField& a, char c[]) {strcpy(a.InvestUnitID, c);})
		.def_readwrite("SpecPosiType", &CThostFtdcInvestorPositionDetailField::SpecPosiType)
		.def_property("InstrumentID", [](const CThostFtdcInvestorPositionDetailField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcInvestorPositionDetailField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def_property("CombInstrumentID", [](const CThostFtdcInvestorPositionDetailField& a) {return encoding_cast(a.CombInstrumentID);}, [](CThostFtdcInvestorPositionDetailField& a, char c[]) {strcpy(a.CombInstrumentID, c);})
		.def("to_dict", [](const CThostFtdcInvestorPositionDetailField& a) {py::dict d; d["reserve1"] = encoding_cast(a.reserve1); d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["HedgeFlag"] = a.HedgeFlag; d["Direction"] = a.Direction; d["OpenDate"] = encoding_cast(a.OpenDate); d["TradeID"] = encoding_cast(a.TradeID); d["Volume"] = a.Volume; d["OpenPrice"] = a.OpenPrice; d["TradingDay"] = encoding_cast(a.TradingDay); d["SettlementID"] = a.SettlementID; d["TradeType"] = a.TradeType; d["reserve2"] = encoding_cast(a.reserve2); d["ExchangeID"] = encoding_cast(a.ExchangeID); d["CloseProfitByDate"] = a.CloseProfitByDate; d["CloseProfitByTrade"] = a.CloseProfitByTrade; d["PositionProfitByDate"] = a.PositionProfitByDate; d["PositionProfitByTrade"] = a.PositionProfitByTrade; d["Margin"] = a.Margin; d["ExchMargin"] = a.ExchMargin; d["MarginRateByMoney"] = a.MarginRateByMoney; d["MarginRateByVolume"] = a.MarginRateByVolume; d["LastSettlementPrice"] = a.LastSettlementPrice; d["SettlementPrice"] = a.SettlementPrice; d["CloseVolume"] = a.CloseVolume; d["CloseAmount"] = a.CloseAmount; d["TimeFirstVolume"] = a.TimeFirstVolume; d["InvestUnitID"] = encoding_cast(a.InvestUnitID); d["SpecPosiType"] = a.SpecPosiType; d["InstrumentID"] = encoding_cast(a.InstrumentID); d["CombInstrumentID"] = encoding_cast(a.CombInstrumentID); return d;});

	py::class_<CThostFtdcTradingAccountPasswordField>(m, "CThostFtdcTradingAccountPasswordField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcTradingAccountPasswordField& a) {return CThostFtdcTradingAccountPasswordField(a);})
		.def_property("BrokerID", [](const CThostFtdcTradingAccountPasswordField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcTradingAccountPasswordField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("AccountID", [](const CThostFtdcTradingAccountPasswordField& a) {return encoding_cast(a.AccountID);}, [](CThostFtdcTradingAccountPasswordField& a, char c[]) {strcpy(a.AccountID, c);})
		.def_property("Password", [](const CThostFtdcTradingAccountPasswordField& a) {return encoding_cast(a.Password);}, [](CThostFtdcTradingAccountPasswordField& a, char c[]) {strcpy(a.Password, c);})
		.def_property("CurrencyID", [](const CThostFtdcTradingAccountPasswordField& a) {return encoding_cast(a.CurrencyID);}, [](CThostFtdcTradingAccountPasswordField& a, char c[]) {strcpy(a.CurrencyID, c);})
		.def("to_dict", [](const CThostFtdcTradingAccountPasswordField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["AccountID"] = encoding_cast(a.AccountID); d["Password"] = encoding_cast(a.Password); d["CurrencyID"] = encoding_cast(a.CurrencyID); return d;});

	py::class_<CThostFtdcMDTraderOfferField>(m, "CThostFtdcMDTraderOfferField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcMDTraderOfferField& a) {return CThostFtdcMDTraderOfferField(a);})
		.def_property("ExchangeID", [](const CThostFtdcMDTraderOfferField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcMDTraderOfferField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("TraderID", [](const CThostFtdcMDTraderOfferField& a) {return encoding_cast(a.TraderID);}, [](CThostFtdcMDTraderOfferField& a, char c[]) {strcpy(a.TraderID, c);})
		.def_property("ParticipantID", [](const CThostFtdcMDTraderOfferField& a) {return encoding_cast(a.ParticipantID);}, [](CThostFtdcMDTraderOfferField& a, char c[]) {strcpy(a.ParticipantID, c);})
		.def_property("Password", [](const CThostFtdcMDTraderOfferField& a) {return encoding_cast(a.Password);}, [](CThostFtdcMDTraderOfferField& a, char c[]) {strcpy(a.Password, c);})
		.def_readwrite("InstallID", &CThostFtdcMDTraderOfferField::InstallID)
		.def_property("OrderLocalID", [](const CThostFtdcMDTraderOfferField& a) {return encoding_cast(a.OrderLocalID);}, [](CThostFtdcMDTraderOfferField& a, char c[]) {strcpy(a.OrderLocalID, c);})
		.def_readwrite("TraderConnectStatus", &CThostFtdcMDTraderOfferField::TraderConnectStatus)
		.def_property("ConnectRequestDate", [](const CThostFtdcMDTraderOfferField& a) {return encoding_cast(a.ConnectRequestDate);}, [](CThostFtdcMDTraderOfferField& a, char c[]) {strcpy(a.ConnectRequestDate, c);})
		.def_property("ConnectRequestTime", [](const CThostFtdcMDTraderOfferField& a) {return encoding_cast(a.ConnectRequestTime);}, [](CThostFtdcMDTraderOfferField& a, char c[]) {strcpy(a.ConnectRequestTime, c);})
		.def_property("LastReportDate", [](const CThostFtdcMDTraderOfferField& a) {return encoding_cast(a.LastReportDate);}, [](CThostFtdcMDTraderOfferField& a, char c[]) {strcpy(a.LastReportDate, c);})
		.def_property("LastReportTime", [](const CThostFtdcMDTraderOfferField& a) {return encoding_cast(a.LastReportTime);}, [](CThostFtdcMDTraderOfferField& a, char c[]) {strcpy(a.LastReportTime, c);})
		.def_property("ConnectDate", [](const CThostFtdcMDTraderOfferField& a) {return encoding_cast(a.ConnectDate);}, [](CThostFtdcMDTraderOfferField& a, char c[]) {strcpy(a.ConnectDate, c);})
		.def_property("ConnectTime", [](const CThostFtdcMDTraderOfferField& a) {return encoding_cast(a.ConnectTime);}, [](CThostFtdcMDTraderOfferField& a, char c[]) {strcpy(a.ConnectTime, c);})
		.def_property("StartDate", [](const CThostFtdcMDTraderOfferField& a) {return encoding_cast(a.StartDate);}, [](CThostFtdcMDTraderOfferField& a, char c[]) {strcpy(a.StartDate, c);})
		.def_property("StartTime", [](const CThostFtdcMDTraderOfferField& a) {return encoding_cast(a.StartTime);}, [](CThostFtdcMDTraderOfferField& a, char c[]) {strcpy(a.StartTime, c);})
		.def_property("TradingDay", [](const CThostFtdcMDTraderOfferField& a) {return encoding_cast(a.TradingDay);}, [](CThostFtdcMDTraderOfferField& a, char c[]) {strcpy(a.TradingDay, c);})
		.def_property("BrokerID", [](const CThostFtdcMDTraderOfferField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcMDTraderOfferField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("MaxTradeID", [](const CThostFtdcMDTraderOfferField& a) {return encoding_cast(a.MaxTradeID);}, [](CThostFtdcMDTraderOfferField& a, char c[]) {strcpy(a.MaxTradeID, c);})
		.def_property("MaxOrderMessageReference", [](const CThostFtdcMDTraderOfferField& a) {return encoding_cast(a.MaxOrderMessageReference);}, [](CThostFtdcMDTraderOfferField& a, char c[]) {strcpy(a.MaxOrderMessageReference, c);})
		.def("to_dict", [](const CThostFtdcMDTraderOfferField& a) {py::dict d; d["ExchangeID"] = encoding_cast(a.ExchangeID); d["TraderID"] = encoding_cast(a.TraderID); d["ParticipantID"] = encoding_cast(a.ParticipantID); d["Password"] = encoding_cast(a.Password); d["InstallID"] = a.InstallID; d["OrderLocalID"] = encoding_cast(a.OrderLocalID); d["TraderConnectStatus"] = a.TraderConnectStatus; d["ConnectRequestDate"] = encoding_cast(a.ConnectRequestDate); d["ConnectRequestTime"] = encoding_cast(a.ConnectRequestTime); d["LastReportDate"] = encoding_cast(a.LastReportDate); d["LastReportTime"] = encoding_cast(a.LastReportTime); d["ConnectDate"] = encoding_cast(a.ConnectDate); d["ConnectTime"] = encoding_cast(a.ConnectTime); d["StartDate"] = encoding_cast(a.StartDate); d["StartTime"] = encoding_cast(a.StartTime); d["TradingDay"] = encoding_cast(a.TradingDay); d["BrokerID"] = encoding_cast(a.BrokerID); d["MaxTradeID"] = encoding_cast(a.MaxTradeID); d["MaxOrderMessageReference"] = encoding_cast(a.MaxOrderMessageReference); return d;});

	py::class_<CThostFtdcQryMDTraderOfferField>(m, "CThostFtdcQryMDTraderOfferField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryMDTraderOfferField& a) {return CThostFtdcQryMDTraderOfferField(a);})
		.def_property("ExchangeID", [](const CThostFtdcQryMDTraderOfferField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcQryMDTraderOfferField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("ParticipantID", [](const CThostFtdcQryMDTraderOfferField& a) {return encoding_cast(a.ParticipantID);}, [](CThostFtdcQryMDTraderOfferField& a, char c[]) {strcpy(a.ParticipantID, c);})
		.def_property("TraderID", [](const CThostFtdcQryMDTraderOfferField& a) {return encoding_cast(a.TraderID);}, [](CThostFtdcQryMDTraderOfferField& a, char c[]) {strcpy(a.TraderID, c);})
		.def("to_dict", [](const CThostFtdcQryMDTraderOfferField& a) {py::dict d; d["ExchangeID"] = encoding_cast(a.ExchangeID); d["ParticipantID"] = encoding_cast(a.ParticipantID); d["TraderID"] = encoding_cast(a.TraderID); return d;});

	py::class_<CThostFtdcQryNoticeField>(m, "CThostFtdcQryNoticeField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryNoticeField& a) {return CThostFtdcQryNoticeField(a);})
		.def_property("BrokerID", [](const CThostFtdcQryNoticeField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcQryNoticeField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def("to_dict", [](const CThostFtdcQryNoticeField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); return d;});

	py::class_<CThostFtdcNoticeField>(m, "CThostFtdcNoticeField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcNoticeField& a) {return CThostFtdcNoticeField(a);})
		.def_property("BrokerID", [](const CThostFtdcNoticeField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcNoticeField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("Content", [](const CThostFtdcNoticeField& a) {return encoding_cast(a.Content);}, [](CThostFtdcNoticeField& a, char c[]) {strcpy(a.Content, c);})
		.def_property("SequenceLabel", [](const CThostFtdcNoticeField& a) {return encoding_cast(a.SequenceLabel);}, [](CThostFtdcNoticeField& a, char c[]) {strcpy(a.SequenceLabel, c);})
		.def("to_dict", [](const CThostFtdcNoticeField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["Content"] = encoding_cast(a.Content); d["SequenceLabel"] = encoding_cast(a.SequenceLabel); return d;});

	py::class_<CThostFtdcUserRightField>(m, "CThostFtdcUserRightField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcUserRightField& a) {return CThostFtdcUserRightField(a);})
		.def_property("BrokerID", [](const CThostFtdcUserRightField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcUserRightField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("UserID", [](const CThostFtdcUserRightField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcUserRightField& a, char c[]) {strcpy(a.UserID, c);})
		.def_readwrite("UserRightType", &CThostFtdcUserRightField::UserRightType)
		.def_readwrite("IsForbidden", &CThostFtdcUserRightField::IsForbidden)
		.def("to_dict", [](const CThostFtdcUserRightField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["UserID"] = encoding_cast(a.UserID); d["UserRightType"] = a.UserRightType; d["IsForbidden"] = a.IsForbidden; return d;});

	py::class_<CThostFtdcQrySettlementInfoConfirmField>(m, "CThostFtdcQrySettlementInfoConfirmField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQrySettlementInfoConfirmField& a) {return CThostFtdcQrySettlementInfoConfirmField(a);})
		.def_property("BrokerID", [](const CThostFtdcQrySettlementInfoConfirmField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcQrySettlementInfoConfirmField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcQrySettlementInfoConfirmField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcQrySettlementInfoConfirmField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_property("AccountID", [](const CThostFtdcQrySettlementInfoConfirmField& a) {return encoding_cast(a.AccountID);}, [](CThostFtdcQrySettlementInfoConfirmField& a, char c[]) {strcpy(a.AccountID, c);})
		.def_property("CurrencyID", [](const CThostFtdcQrySettlementInfoConfirmField& a) {return encoding_cast(a.CurrencyID);}, [](CThostFtdcQrySettlementInfoConfirmField& a, char c[]) {strcpy(a.CurrencyID, c);})
		.def("to_dict", [](const CThostFtdcQrySettlementInfoConfirmField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["AccountID"] = encoding_cast(a.AccountID); d["CurrencyID"] = encoding_cast(a.CurrencyID); return d;});

	py::class_<CThostFtdcLoadSettlementInfoField>(m, "CThostFtdcLoadSettlementInfoField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcLoadSettlementInfoField& a) {return CThostFtdcLoadSettlementInfoField(a);})
		.def_property("BrokerID", [](const CThostFtdcLoadSettlementInfoField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcLoadSettlementInfoField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def("to_dict", [](const CThostFtdcLoadSettlementInfoField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); return d;});

	py::class_<CThostFtdcBrokerWithdrawAlgorithmField>(m, "CThostFtdcBrokerWithdrawAlgorithmField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcBrokerWithdrawAlgorithmField& a) {return CThostFtdcBrokerWithdrawAlgorithmField(a);})
		.def_property("BrokerID", [](const CThostFtdcBrokerWithdrawAlgorithmField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcBrokerWithdrawAlgorithmField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_readwrite("WithdrawAlgorithm", &CThostFtdcBrokerWithdrawAlgorithmField::WithdrawAlgorithm)
		.def_readwrite("UsingRatio", &CThostFtdcBrokerWithdrawAlgorithmField::UsingRatio)
		.def_readwrite("IncludeCloseProfit", &CThostFtdcBrokerWithdrawAlgorithmField::IncludeCloseProfit)
		.def_readwrite("AllWithoutTrade", &CThostFtdcBrokerWithdrawAlgorithmField::AllWithoutTrade)
		.def_readwrite("AvailIncludeCloseProfit", &CThostFtdcBrokerWithdrawAlgorithmField::AvailIncludeCloseProfit)
		.def_readwrite("IsBrokerUserEvent", &CThostFtdcBrokerWithdrawAlgorithmField::IsBrokerUserEvent)
		.def_property("CurrencyID", [](const CThostFtdcBrokerWithdrawAlgorithmField& a) {return encoding_cast(a.CurrencyID);}, [](CThostFtdcBrokerWithdrawAlgorithmField& a, char c[]) {strcpy(a.CurrencyID, c);})
		.def_readwrite("FundMortgageRatio", &CThostFtdcBrokerWithdrawAlgorithmField::FundMortgageRatio)
		.def_readwrite("BalanceAlgorithm", &CThostFtdcBrokerWithdrawAlgorithmField::BalanceAlgorithm)
		.def("to_dict", [](const CThostFtdcBrokerWithdrawAlgorithmField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["WithdrawAlgorithm"] = a.WithdrawAlgorithm; d["UsingRatio"] = a.UsingRatio; d["IncludeCloseProfit"] = a.IncludeCloseProfit; d["AllWithoutTrade"] = a.AllWithoutTrade; d["AvailIncludeCloseProfit"] = a.AvailIncludeCloseProfit; d["IsBrokerUserEvent"] = a.IsBrokerUserEvent; d["CurrencyID"] = encoding_cast(a.CurrencyID); d["FundMortgageRatio"] = a.FundMortgageRatio; d["BalanceAlgorithm"] = a.BalanceAlgorithm; return d;});

	py::class_<CThostFtdcTradingAccountPasswordUpdateV1Field>(m, "CThostFtdcTradingAccountPasswordUpdateV1Field")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcTradingAccountPasswordUpdateV1Field& a) {return CThostFtdcTradingAccountPasswordUpdateV1Field(a);})
		.def_property("BrokerID", [](const CThostFtdcTradingAccountPasswordUpdateV1Field& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcTradingAccountPasswordUpdateV1Field& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcTradingAccountPasswordUpdateV1Field& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcTradingAccountPasswordUpdateV1Field& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_property("OldPassword", [](const CThostFtdcTradingAccountPasswordUpdateV1Field& a) {return encoding_cast(a.OldPassword);}, [](CThostFtdcTradingAccountPasswordUpdateV1Field& a, char c[]) {strcpy(a.OldPassword, c);})
		.def_property("NewPassword", [](const CThostFtdcTradingAccountPasswordUpdateV1Field& a) {return encoding_cast(a.NewPassword);}, [](CThostFtdcTradingAccountPasswordUpdateV1Field& a, char c[]) {strcpy(a.NewPassword, c);})
		.def("to_dict", [](const CThostFtdcTradingAccountPasswordUpdateV1Field& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["OldPassword"] = encoding_cast(a.OldPassword); d["NewPassword"] = encoding_cast(a.NewPassword); return d;});

	py::class_<CThostFtdcTradingAccountPasswordUpdateField>(m, "CThostFtdcTradingAccountPasswordUpdateField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcTradingAccountPasswordUpdateField& a) {return CThostFtdcTradingAccountPasswordUpdateField(a);})
		.def_property("BrokerID", [](const CThostFtdcTradingAccountPasswordUpdateField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcTradingAccountPasswordUpdateField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("AccountID", [](const CThostFtdcTradingAccountPasswordUpdateField& a) {return encoding_cast(a.AccountID);}, [](CThostFtdcTradingAccountPasswordUpdateField& a, char c[]) {strcpy(a.AccountID, c);})
		.def_property("OldPassword", [](const CThostFtdcTradingAccountPasswordUpdateField& a) {return encoding_cast(a.OldPassword);}, [](CThostFtdcTradingAccountPasswordUpdateField& a, char c[]) {strcpy(a.OldPassword, c);})
		.def_property("NewPassword", [](const CThostFtdcTradingAccountPasswordUpdateField& a) {return encoding_cast(a.NewPassword);}, [](CThostFtdcTradingAccountPasswordUpdateField& a, char c[]) {strcpy(a.NewPassword, c);})
		.def_property("CurrencyID", [](const CThostFtdcTradingAccountPasswordUpdateField& a) {return encoding_cast(a.CurrencyID);}, [](CThostFtdcTradingAccountPasswordUpdateField& a, char c[]) {strcpy(a.CurrencyID, c);})
		.def("to_dict", [](const CThostFtdcTradingAccountPasswordUpdateField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["AccountID"] = encoding_cast(a.AccountID); d["OldPassword"] = encoding_cast(a.OldPassword); d["NewPassword"] = encoding_cast(a.NewPassword); d["CurrencyID"] = encoding_cast(a.CurrencyID); return d;});

	py::class_<CThostFtdcQryCombinationLegField>(m, "CThostFtdcQryCombinationLegField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryCombinationLegField& a) {return CThostFtdcQryCombinationLegField(a);})
		.def_property("reserve1", [](const CThostFtdcQryCombinationLegField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcQryCombinationLegField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_readwrite("LegID", &CThostFtdcQryCombinationLegField::LegID)
		.def_property("reserve2", [](const CThostFtdcQryCombinationLegField& a) {return encoding_cast(a.reserve2);}, [](CThostFtdcQryCombinationLegField& a, char c[]) {strcpy(a.reserve2, c);})
		.def_property("CombInstrumentID", [](const CThostFtdcQryCombinationLegField& a) {return encoding_cast(a.CombInstrumentID);}, [](CThostFtdcQryCombinationLegField& a, char c[]) {strcpy(a.CombInstrumentID, c);})
		.def_property("LegInstrumentID", [](const CThostFtdcQryCombinationLegField& a) {return encoding_cast(a.LegInstrumentID);}, [](CThostFtdcQryCombinationLegField& a, char c[]) {strcpy(a.LegInstrumentID, c);})
		.def("to_dict", [](const CThostFtdcQryCombinationLegField& a) {py::dict d; d["reserve1"] = encoding_cast(a.reserve1); d["LegID"] = a.LegID; d["reserve2"] = encoding_cast(a.reserve2); d["CombInstrumentID"] = encoding_cast(a.CombInstrumentID); d["LegInstrumentID"] = encoding_cast(a.LegInstrumentID); return d;});

	py::class_<CThostFtdcQrySyncStatusField>(m, "CThostFtdcQrySyncStatusField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQrySyncStatusField& a) {return CThostFtdcQrySyncStatusField(a);})
		.def_property("TradingDay", [](const CThostFtdcQrySyncStatusField& a) {return encoding_cast(a.TradingDay);}, [](CThostFtdcQrySyncStatusField& a, char c[]) {strcpy(a.TradingDay, c);})
		.def("to_dict", [](const CThostFtdcQrySyncStatusField& a) {py::dict d; d["TradingDay"] = encoding_cast(a.TradingDay); return d;});

	py::class_<CThostFtdcCombinationLegField>(m, "CThostFtdcCombinationLegField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcCombinationLegField& a) {return CThostFtdcCombinationLegField(a);})
		.def_property("reserve1", [](const CThostFtdcCombinationLegField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcCombinationLegField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_readwrite("LegID", &CThostFtdcCombinationLegField::LegID)
		.def_property("reserve2", [](const CThostFtdcCombinationLegField& a) {return encoding_cast(a.reserve2);}, [](CThostFtdcCombinationLegField& a, char c[]) {strcpy(a.reserve2, c);})
		.def_readwrite("Direction", &CThostFtdcCombinationLegField::Direction)
		.def_readwrite("LegMultiple", &CThostFtdcCombinationLegField::LegMultiple)
		.def_readwrite("ImplyLevel", &CThostFtdcCombinationLegField::ImplyLevel)
		.def_property("CombInstrumentID", [](const CThostFtdcCombinationLegField& a) {return encoding_cast(a.CombInstrumentID);}, [](CThostFtdcCombinationLegField& a, char c[]) {strcpy(a.CombInstrumentID, c);})
		.def_property("LegInstrumentID", [](const CThostFtdcCombinationLegField& a) {return encoding_cast(a.LegInstrumentID);}, [](CThostFtdcCombinationLegField& a, char c[]) {strcpy(a.LegInstrumentID, c);})
		.def("to_dict", [](const CThostFtdcCombinationLegField& a) {py::dict d; d["reserve1"] = encoding_cast(a.reserve1); d["LegID"] = a.LegID; d["reserve2"] = encoding_cast(a.reserve2); d["Direction"] = a.Direction; d["LegMultiple"] = a.LegMultiple; d["ImplyLevel"] = a.ImplyLevel; d["CombInstrumentID"] = encoding_cast(a.CombInstrumentID); d["LegInstrumentID"] = encoding_cast(a.LegInstrumentID); return d;});

	py::class_<CThostFtdcSyncStatusField>(m, "CThostFtdcSyncStatusField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcSyncStatusField& a) {return CThostFtdcSyncStatusField(a);})
		.def_property("TradingDay", [](const CThostFtdcSyncStatusField& a) {return encoding_cast(a.TradingDay);}, [](CThostFtdcSyncStatusField& a, char c[]) {strcpy(a.TradingDay, c);})
		.def_readwrite("DataSyncStatus", &CThostFtdcSyncStatusField::DataSyncStatus)
		.def("to_dict", [](const CThostFtdcSyncStatusField& a) {py::dict d; d["TradingDay"] = encoding_cast(a.TradingDay); d["DataSyncStatus"] = a.DataSyncStatus; return d;});

	py::class_<CThostFtdcQryLinkManField>(m, "CThostFtdcQryLinkManField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryLinkManField& a) {return CThostFtdcQryLinkManField(a);})
		.def_property("BrokerID", [](const CThostFtdcQryLinkManField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcQryLinkManField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcQryLinkManField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcQryLinkManField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def("to_dict", [](const CThostFtdcQryLinkManField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); return d;});

	py::class_<CThostFtdcLinkManField>(m, "CThostFtdcLinkManField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcLinkManField& a) {return CThostFtdcLinkManField(a);})
		.def_property("BrokerID", [](const CThostFtdcLinkManField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcLinkManField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcLinkManField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcLinkManField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_readwrite("PersonType", &CThostFtdcLinkManField::PersonType)
		.def_readwrite("IdentifiedCardType", &CThostFtdcLinkManField::IdentifiedCardType)
		.def_property("IdentifiedCardNo", [](const CThostFtdcLinkManField& a) {return encoding_cast(a.IdentifiedCardNo);}, [](CThostFtdcLinkManField& a, char c[]) {strcpy(a.IdentifiedCardNo, c);})
		.def_property("PersonName", [](const CThostFtdcLinkManField& a) {return encoding_cast(a.PersonName);}, [](CThostFtdcLinkManField& a, char c[]) {strcpy(a.PersonName, c);})
		.def_property("Telephone", [](const CThostFtdcLinkManField& a) {return encoding_cast(a.Telephone);}, [](CThostFtdcLinkManField& a, char c[]) {strcpy(a.Telephone, c);})
		.def_property("Address", [](const CThostFtdcLinkManField& a) {return encoding_cast(a.Address);}, [](CThostFtdcLinkManField& a, char c[]) {strcpy(a.Address, c);})
		.def_property("ZipCode", [](const CThostFtdcLinkManField& a) {return encoding_cast(a.ZipCode);}, [](CThostFtdcLinkManField& a, char c[]) {strcpy(a.ZipCode, c);})
		.def_readwrite("Priority", &CThostFtdcLinkManField::Priority)
		.def_property("UOAZipCode", [](const CThostFtdcLinkManField& a) {return encoding_cast(a.UOAZipCode);}, [](CThostFtdcLinkManField& a, char c[]) {strcpy(a.UOAZipCode, c);})
		.def_property("PersonFullName", [](const CThostFtdcLinkManField& a) {return encoding_cast(a.PersonFullName);}, [](CThostFtdcLinkManField& a, char c[]) {strcpy(a.PersonFullName, c);})
		.def("to_dict", [](const CThostFtdcLinkManField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["PersonType"] = a.PersonType; d["IdentifiedCardType"] = a.IdentifiedCardType; d["IdentifiedCardNo"] = encoding_cast(a.IdentifiedCardNo); d["PersonName"] = encoding_cast(a.PersonName); d["Telephone"] = encoding_cast(a.Telephone); d["Address"] = encoding_cast(a.Address); d["ZipCode"] = encoding_cast(a.ZipCode); d["Priority"] = a.Priority; d["UOAZipCode"] = encoding_cast(a.UOAZipCode); d["PersonFullName"] = encoding_cast(a.PersonFullName); return d;});

	py::class_<CThostFtdcQryBrokerUserEventField>(m, "CThostFtdcQryBrokerUserEventField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryBrokerUserEventField& a) {return CThostFtdcQryBrokerUserEventField(a);})
		.def_property("BrokerID", [](const CThostFtdcQryBrokerUserEventField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcQryBrokerUserEventField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("UserID", [](const CThostFtdcQryBrokerUserEventField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcQryBrokerUserEventField& a, char c[]) {strcpy(a.UserID, c);})
		.def_readwrite("UserEventType", &CThostFtdcQryBrokerUserEventField::UserEventType)
		.def("to_dict", [](const CThostFtdcQryBrokerUserEventField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["UserID"] = encoding_cast(a.UserID); d["UserEventType"] = a.UserEventType; return d;});

	py::class_<CThostFtdcBrokerUserEventField>(m, "CThostFtdcBrokerUserEventField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcBrokerUserEventField& a) {return CThostFtdcBrokerUserEventField(a);})
		.def_property("BrokerID", [](const CThostFtdcBrokerUserEventField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcBrokerUserEventField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("UserID", [](const CThostFtdcBrokerUserEventField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcBrokerUserEventField& a, char c[]) {strcpy(a.UserID, c);})
		.def_readwrite("UserEventType", &CThostFtdcBrokerUserEventField::UserEventType)
		.def_readwrite("EventSequenceNo", &CThostFtdcBrokerUserEventField::EventSequenceNo)
		.def_property("EventDate", [](const CThostFtdcBrokerUserEventField& a) {return encoding_cast(a.EventDate);}, [](CThostFtdcBrokerUserEventField& a, char c[]) {strcpy(a.EventDate, c);})
		.def_property("EventTime", [](const CThostFtdcBrokerUserEventField& a) {return encoding_cast(a.EventTime);}, [](CThostFtdcBrokerUserEventField& a, char c[]) {strcpy(a.EventTime, c);})
		.def_property("UserEventInfo", [](const CThostFtdcBrokerUserEventField& a) {return encoding_cast(a.UserEventInfo);}, [](CThostFtdcBrokerUserEventField& a, char c[]) {strcpy(a.UserEventInfo, c);})
		.def_property("InvestorID", [](const CThostFtdcBrokerUserEventField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcBrokerUserEventField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_property("reserve1", [](const CThostFtdcBrokerUserEventField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcBrokerUserEventField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("InstrumentID", [](const CThostFtdcBrokerUserEventField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcBrokerUserEventField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def("to_dict", [](const CThostFtdcBrokerUserEventField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["UserID"] = encoding_cast(a.UserID); d["UserEventType"] = a.UserEventType; d["EventSequenceNo"] = a.EventSequenceNo; d["EventDate"] = encoding_cast(a.EventDate); d["EventTime"] = encoding_cast(a.EventTime); d["UserEventInfo"] = encoding_cast(a.UserEventInfo); d["InvestorID"] = encoding_cast(a.InvestorID); d["reserve1"] = encoding_cast(a.reserve1); d["InstrumentID"] = encoding_cast(a.InstrumentID); return d;});

	py::class_<CThostFtdcQryContractBankField>(m, "CThostFtdcQryContractBankField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryContractBankField& a) {return CThostFtdcQryContractBankField(a);})
		.def_property("BrokerID", [](const CThostFtdcQryContractBankField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcQryContractBankField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("BankID", [](const CThostFtdcQryContractBankField& a) {return encoding_cast(a.BankID);}, [](CThostFtdcQryContractBankField& a, char c[]) {strcpy(a.BankID, c);})
		.def_property("BankBrchID", [](const CThostFtdcQryContractBankField& a) {return encoding_cast(a.BankBrchID);}, [](CThostFtdcQryContractBankField& a, char c[]) {strcpy(a.BankBrchID, c);})
		.def("to_dict", [](const CThostFtdcQryContractBankField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["BankID"] = encoding_cast(a.BankID); d["BankBrchID"] = encoding_cast(a.BankBrchID); return d;});

	py::class_<CThostFtdcContractBankField>(m, "CThostFtdcContractBankField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcContractBankField& a) {return CThostFtdcContractBankField(a);})
		.def_property("BrokerID", [](const CThostFtdcContractBankField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcContractBankField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("BankID", [](const CThostFtdcContractBankField& a) {return encoding_cast(a.BankID);}, [](CThostFtdcContractBankField& a, char c[]) {strcpy(a.BankID, c);})
		.def_property("BankBrchID", [](const CThostFtdcContractBankField& a) {return encoding_cast(a.BankBrchID);}, [](CThostFtdcContractBankField& a, char c[]) {strcpy(a.BankBrchID, c);})
		.def_property("BankName", [](const CThostFtdcContractBankField& a) {return encoding_cast(a.BankName);}, [](CThostFtdcContractBankField& a, char c[]) {strcpy(a.BankName, c);})
		.def("to_dict", [](const CThostFtdcContractBankField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["BankID"] = encoding_cast(a.BankID); d["BankBrchID"] = encoding_cast(a.BankBrchID); d["BankName"] = encoding_cast(a.BankName); return d;});

	py::class_<CThostFtdcInvestorPositionCombineDetailField>(m, "CThostFtdcInvestorPositionCombineDetailField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcInvestorPositionCombineDetailField& a) {return CThostFtdcInvestorPositionCombineDetailField(a);})
		.def_property("TradingDay", [](const CThostFtdcInvestorPositionCombineDetailField& a) {return encoding_cast(a.TradingDay);}, [](CThostFtdcInvestorPositionCombineDetailField& a, char c[]) {strcpy(a.TradingDay, c);})
		.def_property("OpenDate", [](const CThostFtdcInvestorPositionCombineDetailField& a) {return encoding_cast(a.OpenDate);}, [](CThostFtdcInvestorPositionCombineDetailField& a, char c[]) {strcpy(a.OpenDate, c);})
		.def_property("ExchangeID", [](const CThostFtdcInvestorPositionCombineDetailField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcInvestorPositionCombineDetailField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_readwrite("SettlementID", &CThostFtdcInvestorPositionCombineDetailField::SettlementID)
		.def_property("BrokerID", [](const CThostFtdcInvestorPositionCombineDetailField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcInvestorPositionCombineDetailField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcInvestorPositionCombineDetailField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcInvestorPositionCombineDetailField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_property("ComTradeID", [](const CThostFtdcInvestorPositionCombineDetailField& a) {return encoding_cast(a.ComTradeID);}, [](CThostFtdcInvestorPositionCombineDetailField& a, char c[]) {strcpy(a.ComTradeID, c);})
		.def_property("TradeID", [](const CThostFtdcInvestorPositionCombineDetailField& a) {return encoding_cast(a.TradeID);}, [](CThostFtdcInvestorPositionCombineDetailField& a, char c[]) {strcpy(a.TradeID, c);})
		.def_property("reserve1", [](const CThostFtdcInvestorPositionCombineDetailField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcInvestorPositionCombineDetailField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_readwrite("HedgeFlag", &CThostFtdcInvestorPositionCombineDetailField::HedgeFlag)
		.def_readwrite("Direction", &CThostFtdcInvestorPositionCombineDetailField::Direction)
		.def_readwrite("TotalAmt", &CThostFtdcInvestorPositionCombineDetailField::TotalAmt)
		.def_readwrite("Margin", &CThostFtdcInvestorPositionCombineDetailField::Margin)
		.def_readwrite("ExchMargin", &CThostFtdcInvestorPositionCombineDetailField::ExchMargin)
		.def_readwrite("MarginRateByMoney", &CThostFtdcInvestorPositionCombineDetailField::MarginRateByMoney)
		.def_readwrite("MarginRateByVolume", &CThostFtdcInvestorPositionCombineDetailField::MarginRateByVolume)
		.def_readwrite("LegID", &CThostFtdcInvestorPositionCombineDetailField::LegID)
		.def_readwrite("LegMultiple", &CThostFtdcInvestorPositionCombineDetailField::LegMultiple)
		.def_property("reserve2", [](const CThostFtdcInvestorPositionCombineDetailField& a) {return encoding_cast(a.reserve2);}, [](CThostFtdcInvestorPositionCombineDetailField& a, char c[]) {strcpy(a.reserve2, c);})
		.def_readwrite("TradeGroupID", &CThostFtdcInvestorPositionCombineDetailField::TradeGroupID)
		.def_property("InvestUnitID", [](const CThostFtdcInvestorPositionCombineDetailField& a) {return encoding_cast(a.InvestUnitID);}, [](CThostFtdcInvestorPositionCombineDetailField& a, char c[]) {strcpy(a.InvestUnitID, c);})
		.def_property("InstrumentID", [](const CThostFtdcInvestorPositionCombineDetailField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcInvestorPositionCombineDetailField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def_property("CombInstrumentID", [](const CThostFtdcInvestorPositionCombineDetailField& a) {return encoding_cast(a.CombInstrumentID);}, [](CThostFtdcInvestorPositionCombineDetailField& a, char c[]) {strcpy(a.CombInstrumentID, c);})
		.def("to_dict", [](const CThostFtdcInvestorPositionCombineDetailField& a) {py::dict d; d["TradingDay"] = encoding_cast(a.TradingDay); d["OpenDate"] = encoding_cast(a.OpenDate); d["ExchangeID"] = encoding_cast(a.ExchangeID); d["SettlementID"] = a.SettlementID; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["ComTradeID"] = encoding_cast(a.ComTradeID); d["TradeID"] = encoding_cast(a.TradeID); d["reserve1"] = encoding_cast(a.reserve1); d["HedgeFlag"] = a.HedgeFlag; d["Direction"] = a.Direction; d["TotalAmt"] = a.TotalAmt; d["Margin"] = a.Margin; d["ExchMargin"] = a.ExchMargin; d["MarginRateByMoney"] = a.MarginRateByMoney; d["MarginRateByVolume"] = a.MarginRateByVolume; d["LegID"] = a.LegID; d["LegMultiple"] = a.LegMultiple; d["reserve2"] = encoding_cast(a.reserve2); d["TradeGroupID"] = a.TradeGroupID; d["InvestUnitID"] = encoding_cast(a.InvestUnitID); d["InstrumentID"] = encoding_cast(a.InstrumentID); d["CombInstrumentID"] = encoding_cast(a.CombInstrumentID); return d;});

	py::class_<CThostFtdcParkedOrderField>(m, "CThostFtdcParkedOrderField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcParkedOrderField& a) {return CThostFtdcParkedOrderField(a);})
		.def_property("BrokerID", [](const CThostFtdcParkedOrderField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcParkedOrderField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcParkedOrderField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcParkedOrderField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_property("reserve1", [](const CThostFtdcParkedOrderField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcParkedOrderField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("OrderRef", [](const CThostFtdcParkedOrderField& a) {return encoding_cast(a.OrderRef);}, [](CThostFtdcParkedOrderField& a, char c[]) {strcpy(a.OrderRef, c);})
		.def_property("UserID", [](const CThostFtdcParkedOrderField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcParkedOrderField& a, char c[]) {strcpy(a.UserID, c);})
		.def_readwrite("OrderPriceType", &CThostFtdcParkedOrderField::OrderPriceType)
		.def_readwrite("Direction", &CThostFtdcParkedOrderField::Direction)
		.def_property("CombOffsetFlag", [](const CThostFtdcParkedOrderField& a) {return encoding_cast(a.CombOffsetFlag);}, [](CThostFtdcParkedOrderField& a, char c[]) {strcpy(a.CombOffsetFlag, c);})
		.def_property("CombHedgeFlag", [](const CThostFtdcParkedOrderField& a) {return encoding_cast(a.CombHedgeFlag);}, [](CThostFtdcParkedOrderField& a, char c[]) {strcpy(a.CombHedgeFlag, c);})
		.def_readwrite("LimitPrice", &CThostFtdcParkedOrderField::LimitPrice)
		.def_readwrite("VolumeTotalOriginal", &CThostFtdcParkedOrderField::VolumeTotalOriginal)
		.def_readwrite("TimeCondition", &CThostFtdcParkedOrderField::TimeCondition)
		.def_property("GTDDate", [](const CThostFtdcParkedOrderField& a) {return encoding_cast(a.GTDDate);}, [](CThostFtdcParkedOrderField& a, char c[]) {strcpy(a.GTDDate, c);})
		.def_readwrite("VolumeCondition", &CThostFtdcParkedOrderField::VolumeCondition)
		.def_readwrite("MinVolume", &CThostFtdcParkedOrderField::MinVolume)
		.def_readwrite("ContingentCondition", &CThostFtdcParkedOrderField::ContingentCondition)
		.def_readwrite("StopPrice", &CThostFtdcParkedOrderField::StopPrice)
		.def_readwrite("ForceCloseReason", &CThostFtdcParkedOrderField::ForceCloseReason)
		.def_readwrite("IsAutoSuspend", &CThostFtdcParkedOrderField::IsAutoSuspend)
		.def_property("BusinessUnit", [](const CThostFtdcParkedOrderField& a) {return encoding_cast(a.BusinessUnit);}, [](CThostFtdcParkedOrderField& a, char c[]) {strcpy(a.BusinessUnit, c);})
		.def_readwrite("RequestID", &CThostFtdcParkedOrderField::RequestID)
		.def_readwrite("UserForceClose", &CThostFtdcParkedOrderField::UserForceClose)
		.def_property("ExchangeID", [](const CThostFtdcParkedOrderField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcParkedOrderField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("ParkedOrderID", [](const CThostFtdcParkedOrderField& a) {return encoding_cast(a.ParkedOrderID);}, [](CThostFtdcParkedOrderField& a, char c[]) {strcpy(a.ParkedOrderID, c);})
		.def_readwrite("UserType", &CThostFtdcParkedOrderField::UserType)
		.def_readwrite("Status", &CThostFtdcParkedOrderField::Status)
		.def_readwrite("ErrorID", &CThostFtdcParkedOrderField::ErrorID)
		.def_property("ErrorMsg", [](const CThostFtdcParkedOrderField& a) {return encoding_cast(a.ErrorMsg);}, [](CThostFtdcParkedOrderField& a, char c[]) {strcpy(a.ErrorMsg, c);})
		.def_readwrite("IsSwapOrder", &CThostFtdcParkedOrderField::IsSwapOrder)
		.def_property("AccountID", [](const CThostFtdcParkedOrderField& a) {return encoding_cast(a.AccountID);}, [](CThostFtdcParkedOrderField& a, char c[]) {strcpy(a.AccountID, c);})
		.def_property("CurrencyID", [](const CThostFtdcParkedOrderField& a) {return encoding_cast(a.CurrencyID);}, [](CThostFtdcParkedOrderField& a, char c[]) {strcpy(a.CurrencyID, c);})
		.def_property("ClientID", [](const CThostFtdcParkedOrderField& a) {return encoding_cast(a.ClientID);}, [](CThostFtdcParkedOrderField& a, char c[]) {strcpy(a.ClientID, c);})
		.def_property("InvestUnitID", [](const CThostFtdcParkedOrderField& a) {return encoding_cast(a.InvestUnitID);}, [](CThostFtdcParkedOrderField& a, char c[]) {strcpy(a.InvestUnitID, c);})
		.def_property("reserve2", [](const CThostFtdcParkedOrderField& a) {return encoding_cast(a.reserve2);}, [](CThostFtdcParkedOrderField& a, char c[]) {strcpy(a.reserve2, c);})
		.def_property("MacAddress", [](const CThostFtdcParkedOrderField& a) {return encoding_cast(a.MacAddress);}, [](CThostFtdcParkedOrderField& a, char c[]) {strcpy(a.MacAddress, c);})
		.def_property("InstrumentID", [](const CThostFtdcParkedOrderField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcParkedOrderField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def_property("IPAddress", [](const CThostFtdcParkedOrderField& a) {return encoding_cast(a.IPAddress);}, [](CThostFtdcParkedOrderField& a, char c[]) {strcpy(a.IPAddress, c);})
		.def("to_dict", [](const CThostFtdcParkedOrderField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["reserve1"] = encoding_cast(a.reserve1); d["OrderRef"] = encoding_cast(a.OrderRef); d["UserID"] = encoding_cast(a.UserID); d["OrderPriceType"] = a.OrderPriceType; d["Direction"] = a.Direction; d["CombOffsetFlag"] = encoding_cast(a.CombOffsetFlag); d["CombHedgeFlag"] = encoding_cast(a.CombHedgeFlag); d["LimitPrice"] = a.LimitPrice; d["VolumeTotalOriginal"] = a.VolumeTotalOriginal; d["TimeCondition"] = a.TimeCondition; d["GTDDate"] = encoding_cast(a.GTDDate); d["VolumeCondition"] = a.VolumeCondition; d["MinVolume"] = a.MinVolume; d["ContingentCondition"] = a.ContingentCondition; d["StopPrice"] = a.StopPrice; d["ForceCloseReason"] = a.ForceCloseReason; d["IsAutoSuspend"] = a.IsAutoSuspend; d["BusinessUnit"] = encoding_cast(a.BusinessUnit); d["RequestID"] = a.RequestID; d["UserForceClose"] = a.UserForceClose; d["ExchangeID"] = encoding_cast(a.ExchangeID); d["ParkedOrderID"] = encoding_cast(a.ParkedOrderID); d["UserType"] = a.UserType; d["Status"] = a.Status; d["ErrorID"] = a.ErrorID; d["ErrorMsg"] = encoding_cast(a.ErrorMsg); d["IsSwapOrder"] = a.IsSwapOrder; d["AccountID"] = encoding_cast(a.AccountID); d["CurrencyID"] = encoding_cast(a.CurrencyID); d["ClientID"] = encoding_cast(a.ClientID); d["InvestUnitID"] = encoding_cast(a.InvestUnitID); d["reserve2"] = encoding_cast(a.reserve2); d["MacAddress"] = encoding_cast(a.MacAddress); d["InstrumentID"] = encoding_cast(a.InstrumentID); d["IPAddress"] = encoding_cast(a.IPAddress); return d;});

	py::class_<CThostFtdcParkedOrderActionField>(m, "CThostFtdcParkedOrderActionField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcParkedOrderActionField& a) {return CThostFtdcParkedOrderActionField(a);})
		.def_property("BrokerID", [](const CThostFtdcParkedOrderActionField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcParkedOrderActionField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcParkedOrderActionField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcParkedOrderActionField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_readwrite("OrderActionRef", &CThostFtdcParkedOrderActionField::OrderActionRef)
		.def_property("OrderRef", [](const CThostFtdcParkedOrderActionField& a) {return encoding_cast(a.OrderRef);}, [](CThostFtdcParkedOrderActionField& a, char c[]) {strcpy(a.OrderRef, c);})
		.def_readwrite("RequestID", &CThostFtdcParkedOrderActionField::RequestID)
		.def_readwrite("FrontID", &CThostFtdcParkedOrderActionField::FrontID)
		.def_readwrite("SessionID", &CThostFtdcParkedOrderActionField::SessionID)
		.def_property("ExchangeID", [](const CThostFtdcParkedOrderActionField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcParkedOrderActionField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("OrderSysID", [](const CThostFtdcParkedOrderActionField& a) {return encoding_cast(a.OrderSysID);}, [](CThostFtdcParkedOrderActionField& a, char c[]) {strcpy(a.OrderSysID, c);})
		.def_readwrite("ActionFlag", &CThostFtdcParkedOrderActionField::ActionFlag)
		.def_readwrite("LimitPrice", &CThostFtdcParkedOrderActionField::LimitPrice)
		.def_readwrite("VolumeChange", &CThostFtdcParkedOrderActionField::VolumeChange)
		.def_property("UserID", [](const CThostFtdcParkedOrderActionField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcParkedOrderActionField& a, char c[]) {strcpy(a.UserID, c);})
		.def_property("reserve1", [](const CThostFtdcParkedOrderActionField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcParkedOrderActionField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("ParkedOrderActionID", [](const CThostFtdcParkedOrderActionField& a) {return encoding_cast(a.ParkedOrderActionID);}, [](CThostFtdcParkedOrderActionField& a, char c[]) {strcpy(a.ParkedOrderActionID, c);})
		.def_readwrite("UserType", &CThostFtdcParkedOrderActionField::UserType)
		.def_readwrite("Status", &CThostFtdcParkedOrderActionField::Status)
		.def_readwrite("ErrorID", &CThostFtdcParkedOrderActionField::ErrorID)
		.def_property("ErrorMsg", [](const CThostFtdcParkedOrderActionField& a) {return encoding_cast(a.ErrorMsg);}, [](CThostFtdcParkedOrderActionField& a, char c[]) {strcpy(a.ErrorMsg, c);})
		.def_property("InvestUnitID", [](const CThostFtdcParkedOrderActionField& a) {return encoding_cast(a.InvestUnitID);}, [](CThostFtdcParkedOrderActionField& a, char c[]) {strcpy(a.InvestUnitID, c);})
		.def_property("reserve2", [](const CThostFtdcParkedOrderActionField& a) {return encoding_cast(a.reserve2);}, [](CThostFtdcParkedOrderActionField& a, char c[]) {strcpy(a.reserve2, c);})
		.def_property("MacAddress", [](const CThostFtdcParkedOrderActionField& a) {return encoding_cast(a.MacAddress);}, [](CThostFtdcParkedOrderActionField& a, char c[]) {strcpy(a.MacAddress, c);})
		.def_property("InstrumentID", [](const CThostFtdcParkedOrderActionField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcParkedOrderActionField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def_property("IPAddress", [](const CThostFtdcParkedOrderActionField& a) {return encoding_cast(a.IPAddress);}, [](CThostFtdcParkedOrderActionField& a, char c[]) {strcpy(a.IPAddress, c);})
		.def("to_dict", [](const CThostFtdcParkedOrderActionField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["OrderActionRef"] = a.OrderActionRef; d["OrderRef"] = encoding_cast(a.OrderRef); d["RequestID"] = a.RequestID; d["FrontID"] = a.FrontID; d["SessionID"] = a.SessionID; d["ExchangeID"] = encoding_cast(a.ExchangeID); d["OrderSysID"] = encoding_cast(a.OrderSysID); d["ActionFlag"] = a.ActionFlag; d["LimitPrice"] = a.LimitPrice; d["VolumeChange"] = a.VolumeChange; d["UserID"] = encoding_cast(a.UserID); d["reserve1"] = encoding_cast(a.reserve1); d["ParkedOrderActionID"] = encoding_cast(a.ParkedOrderActionID); d["UserType"] = a.UserType; d["Status"] = a.Status; d["ErrorID"] = a.ErrorID; d["ErrorMsg"] = encoding_cast(a.ErrorMsg); d["InvestUnitID"] = encoding_cast(a.InvestUnitID); d["reserve2"] = encoding_cast(a.reserve2); d["MacAddress"] = encoding_cast(a.MacAddress); d["InstrumentID"] = encoding_cast(a.InstrumentID); d["IPAddress"] = encoding_cast(a.IPAddress); return d;});

	py::class_<CThostFtdcQryParkedOrderField>(m, "CThostFtdcQryParkedOrderField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryParkedOrderField& a) {return CThostFtdcQryParkedOrderField(a);})
		.def_property("BrokerID", [](const CThostFtdcQryParkedOrderField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcQryParkedOrderField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcQryParkedOrderField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcQryParkedOrderField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_property("reserve1", [](const CThostFtdcQryParkedOrderField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcQryParkedOrderField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("ExchangeID", [](const CThostFtdcQryParkedOrderField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcQryParkedOrderField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("InvestUnitID", [](const CThostFtdcQryParkedOrderField& a) {return encoding_cast(a.InvestUnitID);}, [](CThostFtdcQryParkedOrderField& a, char c[]) {strcpy(a.InvestUnitID, c);})
		.def_property("InstrumentID", [](const CThostFtdcQryParkedOrderField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcQryParkedOrderField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def("to_dict", [](const CThostFtdcQryParkedOrderField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["reserve1"] = encoding_cast(a.reserve1); d["ExchangeID"] = encoding_cast(a.ExchangeID); d["InvestUnitID"] = encoding_cast(a.InvestUnitID); d["InstrumentID"] = encoding_cast(a.InstrumentID); return d;});

	py::class_<CThostFtdcQryParkedOrderActionField>(m, "CThostFtdcQryParkedOrderActionField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryParkedOrderActionField& a) {return CThostFtdcQryParkedOrderActionField(a);})
		.def_property("BrokerID", [](const CThostFtdcQryParkedOrderActionField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcQryParkedOrderActionField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcQryParkedOrderActionField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcQryParkedOrderActionField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_property("reserve1", [](const CThostFtdcQryParkedOrderActionField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcQryParkedOrderActionField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("ExchangeID", [](const CThostFtdcQryParkedOrderActionField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcQryParkedOrderActionField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("InvestUnitID", [](const CThostFtdcQryParkedOrderActionField& a) {return encoding_cast(a.InvestUnitID);}, [](CThostFtdcQryParkedOrderActionField& a, char c[]) {strcpy(a.InvestUnitID, c);})
		.def_property("InstrumentID", [](const CThostFtdcQryParkedOrderActionField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcQryParkedOrderActionField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def("to_dict", [](const CThostFtdcQryParkedOrderActionField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["reserve1"] = encoding_cast(a.reserve1); d["ExchangeID"] = encoding_cast(a.ExchangeID); d["InvestUnitID"] = encoding_cast(a.InvestUnitID); d["InstrumentID"] = encoding_cast(a.InstrumentID); return d;});

	py::class_<CThostFtdcRemoveParkedOrderField>(m, "CThostFtdcRemoveParkedOrderField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcRemoveParkedOrderField& a) {return CThostFtdcRemoveParkedOrderField(a);})
		.def_property("BrokerID", [](const CThostFtdcRemoveParkedOrderField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcRemoveParkedOrderField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcRemoveParkedOrderField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcRemoveParkedOrderField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_property("ParkedOrderID", [](const CThostFtdcRemoveParkedOrderField& a) {return encoding_cast(a.ParkedOrderID);}, [](CThostFtdcRemoveParkedOrderField& a, char c[]) {strcpy(a.ParkedOrderID, c);})
		.def_property("InvestUnitID", [](const CThostFtdcRemoveParkedOrderField& a) {return encoding_cast(a.InvestUnitID);}, [](CThostFtdcRemoveParkedOrderField& a, char c[]) {strcpy(a.InvestUnitID, c);})
		.def("to_dict", [](const CThostFtdcRemoveParkedOrderField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["ParkedOrderID"] = encoding_cast(a.ParkedOrderID); d["InvestUnitID"] = encoding_cast(a.InvestUnitID); return d;});

	py::class_<CThostFtdcRemoveParkedOrderActionField>(m, "CThostFtdcRemoveParkedOrderActionField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcRemoveParkedOrderActionField& a) {return CThostFtdcRemoveParkedOrderActionField(a);})
		.def_property("BrokerID", [](const CThostFtdcRemoveParkedOrderActionField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcRemoveParkedOrderActionField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcRemoveParkedOrderActionField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcRemoveParkedOrderActionField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_property("ParkedOrderActionID", [](const CThostFtdcRemoveParkedOrderActionField& a) {return encoding_cast(a.ParkedOrderActionID);}, [](CThostFtdcRemoveParkedOrderActionField& a, char c[]) {strcpy(a.ParkedOrderActionID, c);})
		.def_property("InvestUnitID", [](const CThostFtdcRemoveParkedOrderActionField& a) {return encoding_cast(a.InvestUnitID);}, [](CThostFtdcRemoveParkedOrderActionField& a, char c[]) {strcpy(a.InvestUnitID, c);})
		.def("to_dict", [](const CThostFtdcRemoveParkedOrderActionField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["ParkedOrderActionID"] = encoding_cast(a.ParkedOrderActionID); d["InvestUnitID"] = encoding_cast(a.InvestUnitID); return d;});

	py::class_<CThostFtdcInvestorWithdrawAlgorithmField>(m, "CThostFtdcInvestorWithdrawAlgorithmField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcInvestorWithdrawAlgorithmField& a) {return CThostFtdcInvestorWithdrawAlgorithmField(a);})
		.def_property("BrokerID", [](const CThostFtdcInvestorWithdrawAlgorithmField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcInvestorWithdrawAlgorithmField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_readwrite("InvestorRange", &CThostFtdcInvestorWithdrawAlgorithmField::InvestorRange)
		.def_property("InvestorID", [](const CThostFtdcInvestorWithdrawAlgorithmField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcInvestorWithdrawAlgorithmField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_readwrite("UsingRatio", &CThostFtdcInvestorWithdrawAlgorithmField::UsingRatio)
		.def_property("CurrencyID", [](const CThostFtdcInvestorWithdrawAlgorithmField& a) {return encoding_cast(a.CurrencyID);}, [](CThostFtdcInvestorWithdrawAlgorithmField& a, char c[]) {strcpy(a.CurrencyID, c);})
		.def_readwrite("FundMortgageRatio", &CThostFtdcInvestorWithdrawAlgorithmField::FundMortgageRatio)
		.def("to_dict", [](const CThostFtdcInvestorWithdrawAlgorithmField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorRange"] = a.InvestorRange; d["InvestorID"] = encoding_cast(a.InvestorID); d["UsingRatio"] = a.UsingRatio; d["CurrencyID"] = encoding_cast(a.CurrencyID); d["FundMortgageRatio"] = a.FundMortgageRatio; return d;});

	py::class_<CThostFtdcQryInvestorPositionCombineDetailField>(m, "CThostFtdcQryInvestorPositionCombineDetailField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryInvestorPositionCombineDetailField& a) {return CThostFtdcQryInvestorPositionCombineDetailField(a);})
		.def_property("BrokerID", [](const CThostFtdcQryInvestorPositionCombineDetailField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcQryInvestorPositionCombineDetailField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcQryInvestorPositionCombineDetailField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcQryInvestorPositionCombineDetailField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_property("reserve1", [](const CThostFtdcQryInvestorPositionCombineDetailField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcQryInvestorPositionCombineDetailField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("ExchangeID", [](const CThostFtdcQryInvestorPositionCombineDetailField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcQryInvestorPositionCombineDetailField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("InvestUnitID", [](const CThostFtdcQryInvestorPositionCombineDetailField& a) {return encoding_cast(a.InvestUnitID);}, [](CThostFtdcQryInvestorPositionCombineDetailField& a, char c[]) {strcpy(a.InvestUnitID, c);})
		.def_property("CombInstrumentID", [](const CThostFtdcQryInvestorPositionCombineDetailField& a) {return encoding_cast(a.CombInstrumentID);}, [](CThostFtdcQryInvestorPositionCombineDetailField& a, char c[]) {strcpy(a.CombInstrumentID, c);})
		.def("to_dict", [](const CThostFtdcQryInvestorPositionCombineDetailField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["reserve1"] = encoding_cast(a.reserve1); d["ExchangeID"] = encoding_cast(a.ExchangeID); d["InvestUnitID"] = encoding_cast(a.InvestUnitID); d["CombInstrumentID"] = encoding_cast(a.CombInstrumentID); return d;});

	py::class_<CThostFtdcMarketDataAveragePriceField>(m, "CThostFtdcMarketDataAveragePriceField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcMarketDataAveragePriceField& a) {return CThostFtdcMarketDataAveragePriceField(a);})
		.def_readwrite("AveragePrice", &CThostFtdcMarketDataAveragePriceField::AveragePrice)
		.def("to_dict", [](const CThostFtdcMarketDataAveragePriceField& a) {py::dict d; d["AveragePrice"] = a.AveragePrice; return d;});

	py::class_<CThostFtdcVerifyInvestorPasswordField>(m, "CThostFtdcVerifyInvestorPasswordField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcVerifyInvestorPasswordField& a) {return CThostFtdcVerifyInvestorPasswordField(a);})
		.def_property("BrokerID", [](const CThostFtdcVerifyInvestorPasswordField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcVerifyInvestorPasswordField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcVerifyInvestorPasswordField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcVerifyInvestorPasswordField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_property("Password", [](const CThostFtdcVerifyInvestorPasswordField& a) {return encoding_cast(a.Password);}, [](CThostFtdcVerifyInvestorPasswordField& a, char c[]) {strcpy(a.Password, c);})
		.def("to_dict", [](const CThostFtdcVerifyInvestorPasswordField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["Password"] = encoding_cast(a.Password); return d;});

	py::class_<CThostFtdcUserIPField>(m, "CThostFtdcUserIPField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcUserIPField& a) {return CThostFtdcUserIPField(a);})
		.def_property("BrokerID", [](const CThostFtdcUserIPField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcUserIPField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("UserID", [](const CThostFtdcUserIPField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcUserIPField& a, char c[]) {strcpy(a.UserID, c);})
		.def_property("reserve1", [](const CThostFtdcUserIPField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcUserIPField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("reserve2", [](const CThostFtdcUserIPField& a) {return encoding_cast(a.reserve2);}, [](CThostFtdcUserIPField& a, char c[]) {strcpy(a.reserve2, c);})
		.def_property("MacAddress", [](const CThostFtdcUserIPField& a) {return encoding_cast(a.MacAddress);}, [](CThostFtdcUserIPField& a, char c[]) {strcpy(a.MacAddress, c);})
		.def_property("IPAddress", [](const CThostFtdcUserIPField& a) {return encoding_cast(a.IPAddress);}, [](CThostFtdcUserIPField& a, char c[]) {strcpy(a.IPAddress, c);})
		.def_property("IPMask", [](const CThostFtdcUserIPField& a) {return encoding_cast(a.IPMask);}, [](CThostFtdcUserIPField& a, char c[]) {strcpy(a.IPMask, c);})
		.def("to_dict", [](const CThostFtdcUserIPField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["UserID"] = encoding_cast(a.UserID); d["reserve1"] = encoding_cast(a.reserve1); d["reserve2"] = encoding_cast(a.reserve2); d["MacAddress"] = encoding_cast(a.MacAddress); d["IPAddress"] = encoding_cast(a.IPAddress); d["IPMask"] = encoding_cast(a.IPMask); return d;});

	py::class_<CThostFtdcTradingNoticeInfoField>(m, "CThostFtdcTradingNoticeInfoField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcTradingNoticeInfoField& a) {return CThostFtdcTradingNoticeInfoField(a);})
		.def_property("BrokerID", [](const CThostFtdcTradingNoticeInfoField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcTradingNoticeInfoField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcTradingNoticeInfoField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcTradingNoticeInfoField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_property("SendTime", [](const CThostFtdcTradingNoticeInfoField& a) {return encoding_cast(a.SendTime);}, [](CThostFtdcTradingNoticeInfoField& a, char c[]) {strcpy(a.SendTime, c);})
		.def_property("FieldContent", [](const CThostFtdcTradingNoticeInfoField& a) {return encoding_cast(a.FieldContent);}, [](CThostFtdcTradingNoticeInfoField& a, char c[]) {strcpy(a.FieldContent, c);})
		.def_readwrite("SequenceSeries", &CThostFtdcTradingNoticeInfoField::SequenceSeries)
		.def_readwrite("SequenceNo", &CThostFtdcTradingNoticeInfoField::SequenceNo)
		.def_property("InvestUnitID", [](const CThostFtdcTradingNoticeInfoField& a) {return encoding_cast(a.InvestUnitID);}, [](CThostFtdcTradingNoticeInfoField& a, char c[]) {strcpy(a.InvestUnitID, c);})
		.def("to_dict", [](const CThostFtdcTradingNoticeInfoField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["SendTime"] = encoding_cast(a.SendTime); d["FieldContent"] = encoding_cast(a.FieldContent); d["SequenceSeries"] = a.SequenceSeries; d["SequenceNo"] = a.SequenceNo; d["InvestUnitID"] = encoding_cast(a.InvestUnitID); return d;});

	py::class_<CThostFtdcTradingNoticeField>(m, "CThostFtdcTradingNoticeField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcTradingNoticeField& a) {return CThostFtdcTradingNoticeField(a);})
		.def_property("BrokerID", [](const CThostFtdcTradingNoticeField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcTradingNoticeField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_readwrite("InvestorRange", &CThostFtdcTradingNoticeField::InvestorRange)
		.def_property("InvestorID", [](const CThostFtdcTradingNoticeField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcTradingNoticeField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_readwrite("SequenceSeries", &CThostFtdcTradingNoticeField::SequenceSeries)
		.def_property("UserID", [](const CThostFtdcTradingNoticeField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcTradingNoticeField& a, char c[]) {strcpy(a.UserID, c);})
		.def_property("SendTime", [](const CThostFtdcTradingNoticeField& a) {return encoding_cast(a.SendTime);}, [](CThostFtdcTradingNoticeField& a, char c[]) {strcpy(a.SendTime, c);})
		.def_readwrite("SequenceNo", &CThostFtdcTradingNoticeField::SequenceNo)
		.def_property("FieldContent", [](const CThostFtdcTradingNoticeField& a) {return encoding_cast(a.FieldContent);}, [](CThostFtdcTradingNoticeField& a, char c[]) {strcpy(a.FieldContent, c);})
		.def_property("InvestUnitID", [](const CThostFtdcTradingNoticeField& a) {return encoding_cast(a.InvestUnitID);}, [](CThostFtdcTradingNoticeField& a, char c[]) {strcpy(a.InvestUnitID, c);})
		.def("to_dict", [](const CThostFtdcTradingNoticeField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorRange"] = a.InvestorRange; d["InvestorID"] = encoding_cast(a.InvestorID); d["SequenceSeries"] = a.SequenceSeries; d["UserID"] = encoding_cast(a.UserID); d["SendTime"] = encoding_cast(a.SendTime); d["SequenceNo"] = a.SequenceNo; d["FieldContent"] = encoding_cast(a.FieldContent); d["InvestUnitID"] = encoding_cast(a.InvestUnitID); return d;});

	py::class_<CThostFtdcQryTradingNoticeField>(m, "CThostFtdcQryTradingNoticeField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryTradingNoticeField& a) {return CThostFtdcQryTradingNoticeField(a);})
		.def_property("BrokerID", [](const CThostFtdcQryTradingNoticeField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcQryTradingNoticeField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcQryTradingNoticeField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcQryTradingNoticeField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_property("InvestUnitID", [](const CThostFtdcQryTradingNoticeField& a) {return encoding_cast(a.InvestUnitID);}, [](CThostFtdcQryTradingNoticeField& a, char c[]) {strcpy(a.InvestUnitID, c);})
		.def("to_dict", [](const CThostFtdcQryTradingNoticeField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["InvestUnitID"] = encoding_cast(a.InvestUnitID); return d;});

	py::class_<CThostFtdcQryErrOrderField>(m, "CThostFtdcQryErrOrderField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryErrOrderField& a) {return CThostFtdcQryErrOrderField(a);})
		.def_property("BrokerID", [](const CThostFtdcQryErrOrderField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcQryErrOrderField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcQryErrOrderField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcQryErrOrderField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def("to_dict", [](const CThostFtdcQryErrOrderField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); return d;});

	py::class_<CThostFtdcErrOrderField>(m, "CThostFtdcErrOrderField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcErrOrderField& a) {return CThostFtdcErrOrderField(a);})
		.def_property("BrokerID", [](const CThostFtdcErrOrderField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcErrOrderField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcErrOrderField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcErrOrderField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_property("reserve1", [](const CThostFtdcErrOrderField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcErrOrderField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("OrderRef", [](const CThostFtdcErrOrderField& a) {return encoding_cast(a.OrderRef);}, [](CThostFtdcErrOrderField& a, char c[]) {strcpy(a.OrderRef, c);})
		.def_property("UserID", [](const CThostFtdcErrOrderField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcErrOrderField& a, char c[]) {strcpy(a.UserID, c);})
		.def_readwrite("OrderPriceType", &CThostFtdcErrOrderField::OrderPriceType)
		.def_readwrite("Direction", &CThostFtdcErrOrderField::Direction)
		.def_property("CombOffsetFlag", [](const CThostFtdcErrOrderField& a) {return encoding_cast(a.CombOffsetFlag);}, [](CThostFtdcErrOrderField& a, char c[]) {strcpy(a.CombOffsetFlag, c);})
		.def_property("CombHedgeFlag", [](const CThostFtdcErrOrderField& a) {return encoding_cast(a.CombHedgeFlag);}, [](CThostFtdcErrOrderField& a, char c[]) {strcpy(a.CombHedgeFlag, c);})
		.def_readwrite("LimitPrice", &CThostFtdcErrOrderField::LimitPrice)
		.def_readwrite("VolumeTotalOriginal", &CThostFtdcErrOrderField::VolumeTotalOriginal)
		.def_readwrite("TimeCondition", &CThostFtdcErrOrderField::TimeCondition)
		.def_property("GTDDate", [](const CThostFtdcErrOrderField& a) {return encoding_cast(a.GTDDate);}, [](CThostFtdcErrOrderField& a, char c[]) {strcpy(a.GTDDate, c);})
		.def_readwrite("VolumeCondition", &CThostFtdcErrOrderField::VolumeCondition)
		.def_readwrite("MinVolume", &CThostFtdcErrOrderField::MinVolume)
		.def_readwrite("ContingentCondition", &CThostFtdcErrOrderField::ContingentCondition)
		.def_readwrite("StopPrice", &CThostFtdcErrOrderField::StopPrice)
		.def_readwrite("ForceCloseReason", &CThostFtdcErrOrderField::ForceCloseReason)
		.def_readwrite("IsAutoSuspend", &CThostFtdcErrOrderField::IsAutoSuspend)
		.def_property("BusinessUnit", [](const CThostFtdcErrOrderField& a) {return encoding_cast(a.BusinessUnit);}, [](CThostFtdcErrOrderField& a, char c[]) {strcpy(a.BusinessUnit, c);})
		.def_readwrite("RequestID", &CThostFtdcErrOrderField::RequestID)
		.def_readwrite("UserForceClose", &CThostFtdcErrOrderField::UserForceClose)
		.def_readwrite("ErrorID", &CThostFtdcErrOrderField::ErrorID)
		.def_property("ErrorMsg", [](const CThostFtdcErrOrderField& a) {return encoding_cast(a.ErrorMsg);}, [](CThostFtdcErrOrderField& a, char c[]) {strcpy(a.ErrorMsg, c);})
		.def_readwrite("IsSwapOrder", &CThostFtdcErrOrderField::IsSwapOrder)
		.def_property("ExchangeID", [](const CThostFtdcErrOrderField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcErrOrderField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("InvestUnitID", [](const CThostFtdcErrOrderField& a) {return encoding_cast(a.InvestUnitID);}, [](CThostFtdcErrOrderField& a, char c[]) {strcpy(a.InvestUnitID, c);})
		.def_property("AccountID", [](const CThostFtdcErrOrderField& a) {return encoding_cast(a.AccountID);}, [](CThostFtdcErrOrderField& a, char c[]) {strcpy(a.AccountID, c);})
		.def_property("CurrencyID", [](const CThostFtdcErrOrderField& a) {return encoding_cast(a.CurrencyID);}, [](CThostFtdcErrOrderField& a, char c[]) {strcpy(a.CurrencyID, c);})
		.def_property("ClientID", [](const CThostFtdcErrOrderField& a) {return encoding_cast(a.ClientID);}, [](CThostFtdcErrOrderField& a, char c[]) {strcpy(a.ClientID, c);})
		.def_property("reserve2", [](const CThostFtdcErrOrderField& a) {return encoding_cast(a.reserve2);}, [](CThostFtdcErrOrderField& a, char c[]) {strcpy(a.reserve2, c);})
		.def_property("MacAddress", [](const CThostFtdcErrOrderField& a) {return encoding_cast(a.MacAddress);}, [](CThostFtdcErrOrderField& a, char c[]) {strcpy(a.MacAddress, c);})
		.def_property("InstrumentID", [](const CThostFtdcErrOrderField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcErrOrderField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def_property("IPAddress", [](const CThostFtdcErrOrderField& a) {return encoding_cast(a.IPAddress);}, [](CThostFtdcErrOrderField& a, char c[]) {strcpy(a.IPAddress, c);})
		.def("to_dict", [](const CThostFtdcErrOrderField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["reserve1"] = encoding_cast(a.reserve1); d["OrderRef"] = encoding_cast(a.OrderRef); d["UserID"] = encoding_cast(a.UserID); d["OrderPriceType"] = a.OrderPriceType; d["Direction"] = a.Direction; d["CombOffsetFlag"] = encoding_cast(a.CombOffsetFlag); d["CombHedgeFlag"] = encoding_cast(a.CombHedgeFlag); d["LimitPrice"] = a.LimitPrice; d["VolumeTotalOriginal"] = a.VolumeTotalOriginal; d["TimeCondition"] = a.TimeCondition; d["GTDDate"] = encoding_cast(a.GTDDate); d["VolumeCondition"] = a.VolumeCondition; d["MinVolume"] = a.MinVolume; d["ContingentCondition"] = a.ContingentCondition; d["StopPrice"] = a.StopPrice; d["ForceCloseReason"] = a.ForceCloseReason; d["IsAutoSuspend"] = a.IsAutoSuspend; d["BusinessUnit"] = encoding_cast(a.BusinessUnit); d["RequestID"] = a.RequestID; d["UserForceClose"] = a.UserForceClose; d["ErrorID"] = a.ErrorID; d["ErrorMsg"] = encoding_cast(a.ErrorMsg); d["IsSwapOrder"] = a.IsSwapOrder; d["ExchangeID"] = encoding_cast(a.ExchangeID); d["InvestUnitID"] = encoding_cast(a.InvestUnitID); d["AccountID"] = encoding_cast(a.AccountID); d["CurrencyID"] = encoding_cast(a.CurrencyID); d["ClientID"] = encoding_cast(a.ClientID); d["reserve2"] = encoding_cast(a.reserve2); d["MacAddress"] = encoding_cast(a.MacAddress); d["InstrumentID"] = encoding_cast(a.InstrumentID); d["IPAddress"] = encoding_cast(a.IPAddress); return d;});

	py::class_<CThostFtdcErrorConditionalOrderField>(m, "CThostFtdcErrorConditionalOrderField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcErrorConditionalOrderField& a) {return CThostFtdcErrorConditionalOrderField(a);})
		.def_property("BrokerID", [](const CThostFtdcErrorConditionalOrderField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcErrorConditionalOrderField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcErrorConditionalOrderField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcErrorConditionalOrderField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_property("reserve1", [](const CThostFtdcErrorConditionalOrderField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcErrorConditionalOrderField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("OrderRef", [](const CThostFtdcErrorConditionalOrderField& a) {return encoding_cast(a.OrderRef);}, [](CThostFtdcErrorConditionalOrderField& a, char c[]) {strcpy(a.OrderRef, c);})
		.def_property("UserID", [](const CThostFtdcErrorConditionalOrderField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcErrorConditionalOrderField& a, char c[]) {strcpy(a.UserID, c);})
		.def_readwrite("OrderPriceType", &CThostFtdcErrorConditionalOrderField::OrderPriceType)
		.def_readwrite("Direction", &CThostFtdcErrorConditionalOrderField::Direction)
		.def_property("CombOffsetFlag", [](const CThostFtdcErrorConditionalOrderField& a) {return encoding_cast(a.CombOffsetFlag);}, [](CThostFtdcErrorConditionalOrderField& a, char c[]) {strcpy(a.CombOffsetFlag, c);})
		.def_property("CombHedgeFlag", [](const CThostFtdcErrorConditionalOrderField& a) {return encoding_cast(a.CombHedgeFlag);}, [](CThostFtdcErrorConditionalOrderField& a, char c[]) {strcpy(a.CombHedgeFlag, c);})
		.def_readwrite("LimitPrice", &CThostFtdcErrorConditionalOrderField::LimitPrice)
		.def_readwrite("VolumeTotalOriginal", &CThostFtdcErrorConditionalOrderField::VolumeTotalOriginal)
		.def_readwrite("TimeCondition", &CThostFtdcErrorConditionalOrderField::TimeCondition)
		.def_property("GTDDate", [](const CThostFtdcErrorConditionalOrderField& a) {return encoding_cast(a.GTDDate);}, [](CThostFtdcErrorConditionalOrderField& a, char c[]) {strcpy(a.GTDDate, c);})
		.def_readwrite("VolumeCondition", &CThostFtdcErrorConditionalOrderField::VolumeCondition)
		.def_readwrite("MinVolume", &CThostFtdcErrorConditionalOrderField::MinVolume)
		.def_readwrite("ContingentCondition", &CThostFtdcErrorConditionalOrderField::ContingentCondition)
		.def_readwrite("StopPrice", &CThostFtdcErrorConditionalOrderField::StopPrice)
		.def_readwrite("ForceCloseReason", &CThostFtdcErrorConditionalOrderField::ForceCloseReason)
		.def_readwrite("IsAutoSuspend", &CThostFtdcErrorConditionalOrderField::IsAutoSuspend)
		.def_property("BusinessUnit", [](const CThostFtdcErrorConditionalOrderField& a) {return encoding_cast(a.BusinessUnit);}, [](CThostFtdcErrorConditionalOrderField& a, char c[]) {strcpy(a.BusinessUnit, c);})
		.def_readwrite("RequestID", &CThostFtdcErrorConditionalOrderField::RequestID)
		.def_property("OrderLocalID", [](const CThostFtdcErrorConditionalOrderField& a) {return encoding_cast(a.OrderLocalID);}, [](CThostFtdcErrorConditionalOrderField& a, char c[]) {strcpy(a.OrderLocalID, c);})
		.def_property("ExchangeID", [](const CThostFtdcErrorConditionalOrderField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcErrorConditionalOrderField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("ParticipantID", [](const CThostFtdcErrorConditionalOrderField& a) {return encoding_cast(a.ParticipantID);}, [](CThostFtdcErrorConditionalOrderField& a, char c[]) {strcpy(a.ParticipantID, c);})
		.def_property("ClientID", [](const CThostFtdcErrorConditionalOrderField& a) {return encoding_cast(a.ClientID);}, [](CThostFtdcErrorConditionalOrderField& a, char c[]) {strcpy(a.ClientID, c);})
		.def_property("reserve2", [](const CThostFtdcErrorConditionalOrderField& a) {return encoding_cast(a.reserve2);}, [](CThostFtdcErrorConditionalOrderField& a, char c[]) {strcpy(a.reserve2, c);})
		.def_property("TraderID", [](const CThostFtdcErrorConditionalOrderField& a) {return encoding_cast(a.TraderID);}, [](CThostFtdcErrorConditionalOrderField& a, char c[]) {strcpy(a.TraderID, c);})
		.def_readwrite("InstallID", &CThostFtdcErrorConditionalOrderField::InstallID)
		.def_readwrite("OrderSubmitStatus", &CThostFtdcErrorConditionalOrderField::OrderSubmitStatus)
		.def_readwrite("NotifySequence", &CThostFtdcErrorConditionalOrderField::NotifySequence)
		.def_property("TradingDay", [](const CThostFtdcErrorConditionalOrderField& a) {return encoding_cast(a.TradingDay);}, [](CThostFtdcErrorConditionalOrderField& a, char c[]) {strcpy(a.TradingDay, c);})
		.def_readwrite("SettlementID", &CThostFtdcErrorConditionalOrderField::SettlementID)
		.def_property("OrderSysID", [](const CThostFtdcErrorConditionalOrderField& a) {return encoding_cast(a.OrderSysID);}, [](CThostFtdcErrorConditionalOrderField& a, char c[]) {strcpy(a.OrderSysID, c);})
		.def_readwrite("OrderSource", &CThostFtdcErrorConditionalOrderField::OrderSource)
		.def_readwrite("OrderStatus", &CThostFtdcErrorConditionalOrderField::OrderStatus)
		.def_readwrite("OrderType", &CThostFtdcErrorConditionalOrderField::OrderType)
		.def_readwrite("VolumeTraded", &CThostFtdcErrorConditionalOrderField::VolumeTraded)
		.def_readwrite("VolumeTotal", &CThostFtdcErrorConditionalOrderField::VolumeTotal)
		.def_property("InsertDate", [](const CThostFtdcErrorConditionalOrderField& a) {return encoding_cast(a.InsertDate);}, [](CThostFtdcErrorConditionalOrderField& a, char c[]) {strcpy(a.InsertDate, c);})
		.def_property("InsertTime", [](const CThostFtdcErrorConditionalOrderField& a) {return encoding_cast(a.InsertTime);}, [](CThostFtdcErrorConditionalOrderField& a, char c[]) {strcpy(a.InsertTime, c);})
		.def_property("ActiveTime", [](const CThostFtdcErrorConditionalOrderField& a) {return encoding_cast(a.ActiveTime);}, [](CThostFtdcErrorConditionalOrderField& a, char c[]) {strcpy(a.ActiveTime, c);})
		.def_property("SuspendTime", [](const CThostFtdcErrorConditionalOrderField& a) {return encoding_cast(a.SuspendTime);}, [](CThostFtdcErrorConditionalOrderField& a, char c[]) {strcpy(a.SuspendTime, c);})
		.def_property("UpdateTime", [](const CThostFtdcErrorConditionalOrderField& a) {return encoding_cast(a.UpdateTime);}, [](CThostFtdcErrorConditionalOrderField& a, char c[]) {strcpy(a.UpdateTime, c);})
		.def_property("CancelTime", [](const CThostFtdcErrorConditionalOrderField& a) {return encoding_cast(a.CancelTime);}, [](CThostFtdcErrorConditionalOrderField& a, char c[]) {strcpy(a.CancelTime, c);})
		.def_property("ActiveTraderID", [](const CThostFtdcErrorConditionalOrderField& a) {return encoding_cast(a.ActiveTraderID);}, [](CThostFtdcErrorConditionalOrderField& a, char c[]) {strcpy(a.ActiveTraderID, c);})
		.def_property("ClearingPartID", [](const CThostFtdcErrorConditionalOrderField& a) {return encoding_cast(a.ClearingPartID);}, [](CThostFtdcErrorConditionalOrderField& a, char c[]) {strcpy(a.ClearingPartID, c);})
		.def_readwrite("SequenceNo", &CThostFtdcErrorConditionalOrderField::SequenceNo)
		.def_readwrite("FrontID", &CThostFtdcErrorConditionalOrderField::FrontID)
		.def_readwrite("SessionID", &CThostFtdcErrorConditionalOrderField::SessionID)
		.def_property("UserProductInfo", [](const CThostFtdcErrorConditionalOrderField& a) {return encoding_cast(a.UserProductInfo);}, [](CThostFtdcErrorConditionalOrderField& a, char c[]) {strcpy(a.UserProductInfo, c);})
		.def_property("StatusMsg", [](const CThostFtdcErrorConditionalOrderField& a) {return encoding_cast(a.StatusMsg);}, [](CThostFtdcErrorConditionalOrderField& a, char c[]) {strcpy(a.StatusMsg, c);})
		.def_readwrite("UserForceClose", &CThostFtdcErrorConditionalOrderField::UserForceClose)
		.def_property("ActiveUserID", [](const CThostFtdcErrorConditionalOrderField& a) {return encoding_cast(a.ActiveUserID);}, [](CThostFtdcErrorConditionalOrderField& a, char c[]) {strcpy(a.ActiveUserID, c);})
		.def_readwrite("BrokerOrderSeq", &CThostFtdcErrorConditionalOrderField::BrokerOrderSeq)
		.def_property("RelativeOrderSysID", [](const CThostFtdcErrorConditionalOrderField& a) {return encoding_cast(a.RelativeOrderSysID);}, [](CThostFtdcErrorConditionalOrderField& a, char c[]) {strcpy(a.RelativeOrderSysID, c);})
		.def_readwrite("ZCETotalTradedVolume", &CThostFtdcErrorConditionalOrderField::ZCETotalTradedVolume)
		.def_readwrite("ErrorID", &CThostFtdcErrorConditionalOrderField::ErrorID)
		.def_property("ErrorMsg", [](const CThostFtdcErrorConditionalOrderField& a) {return encoding_cast(a.ErrorMsg);}, [](CThostFtdcErrorConditionalOrderField& a, char c[]) {strcpy(a.ErrorMsg, c);})
		.def_readwrite("IsSwapOrder", &CThostFtdcErrorConditionalOrderField::IsSwapOrder)
		.def_property("BranchID", [](const CThostFtdcErrorConditionalOrderField& a) {return encoding_cast(a.BranchID);}, [](CThostFtdcErrorConditionalOrderField& a, char c[]) {strcpy(a.BranchID, c);})
		.def_property("InvestUnitID", [](const CThostFtdcErrorConditionalOrderField& a) {return encoding_cast(a.InvestUnitID);}, [](CThostFtdcErrorConditionalOrderField& a, char c[]) {strcpy(a.InvestUnitID, c);})
		.def_property("AccountID", [](const CThostFtdcErrorConditionalOrderField& a) {return encoding_cast(a.AccountID);}, [](CThostFtdcErrorConditionalOrderField& a, char c[]) {strcpy(a.AccountID, c);})
		.def_property("CurrencyID", [](const CThostFtdcErrorConditionalOrderField& a) {return encoding_cast(a.CurrencyID);}, [](CThostFtdcErrorConditionalOrderField& a, char c[]) {strcpy(a.CurrencyID, c);})
		.def_property("reserve3", [](const CThostFtdcErrorConditionalOrderField& a) {return encoding_cast(a.reserve3);}, [](CThostFtdcErrorConditionalOrderField& a, char c[]) {strcpy(a.reserve3, c);})
		.def_property("MacAddress", [](const CThostFtdcErrorConditionalOrderField& a) {return encoding_cast(a.MacAddress);}, [](CThostFtdcErrorConditionalOrderField& a, char c[]) {strcpy(a.MacAddress, c);})
		.def_property("InstrumentID", [](const CThostFtdcErrorConditionalOrderField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcErrorConditionalOrderField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def_property("ExchangeInstID", [](const CThostFtdcErrorConditionalOrderField& a) {return encoding_cast(a.ExchangeInstID);}, [](CThostFtdcErrorConditionalOrderField& a, char c[]) {strcpy(a.ExchangeInstID, c);})
		.def_property("IPAddress", [](const CThostFtdcErrorConditionalOrderField& a) {return encoding_cast(a.IPAddress);}, [](CThostFtdcErrorConditionalOrderField& a, char c[]) {strcpy(a.IPAddress, c);})
		.def("to_dict", [](const CThostFtdcErrorConditionalOrderField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["reserve1"] = encoding_cast(a.reserve1); d["OrderRef"] = encoding_cast(a.OrderRef); d["UserID"] = encoding_cast(a.UserID); d["OrderPriceType"] = a.OrderPriceType; d["Direction"] = a.Direction; d["CombOffsetFlag"] = encoding_cast(a.CombOffsetFlag); d["CombHedgeFlag"] = encoding_cast(a.CombHedgeFlag); d["LimitPrice"] = a.LimitPrice; d["VolumeTotalOriginal"] = a.VolumeTotalOriginal; d["TimeCondition"] = a.TimeCondition; d["GTDDate"] = encoding_cast(a.GTDDate); d["VolumeCondition"] = a.VolumeCondition; d["MinVolume"] = a.MinVolume; d["ContingentCondition"] = a.ContingentCondition; d["StopPrice"] = a.StopPrice; d["ForceCloseReason"] = a.ForceCloseReason; d["IsAutoSuspend"] = a.IsAutoSuspend; d["BusinessUnit"] = encoding_cast(a.BusinessUnit); d["RequestID"] = a.RequestID; d["OrderLocalID"] = encoding_cast(a.OrderLocalID); d["ExchangeID"] = encoding_cast(a.ExchangeID); d["ParticipantID"] = encoding_cast(a.ParticipantID); d["ClientID"] = encoding_cast(a.ClientID); d["reserve2"] = encoding_cast(a.reserve2); d["TraderID"] = encoding_cast(a.TraderID); d["InstallID"] = a.InstallID; d["OrderSubmitStatus"] = a.OrderSubmitStatus; d["NotifySequence"] = a.NotifySequence; d["TradingDay"] = encoding_cast(a.TradingDay); d["SettlementID"] = a.SettlementID; d["OrderSysID"] = encoding_cast(a.OrderSysID); d["OrderSource"] = a.OrderSource; d["OrderStatus"] = a.OrderStatus; d["OrderType"] = a.OrderType; d["VolumeTraded"] = a.VolumeTraded; d["VolumeTotal"] = a.VolumeTotal; d["InsertDate"] = encoding_cast(a.InsertDate); d["InsertTime"] = encoding_cast(a.InsertTime); d["ActiveTime"] = encoding_cast(a.ActiveTime); d["SuspendTime"] = encoding_cast(a.SuspendTime); d["UpdateTime"] = encoding_cast(a.UpdateTime); d["CancelTime"] = encoding_cast(a.CancelTime); d["ActiveTraderID"] = encoding_cast(a.ActiveTraderID); d["ClearingPartID"] = encoding_cast(a.ClearingPartID); d["SequenceNo"] = a.SequenceNo; d["FrontID"] = a.FrontID; d["SessionID"] = a.SessionID; d["UserProductInfo"] = encoding_cast(a.UserProductInfo); d["StatusMsg"] = encoding_cast(a.StatusMsg); d["UserForceClose"] = a.UserForceClose; d["ActiveUserID"] = encoding_cast(a.ActiveUserID); d["BrokerOrderSeq"] = a.BrokerOrderSeq; d["RelativeOrderSysID"] = encoding_cast(a.RelativeOrderSysID); d["ZCETotalTradedVolume"] = a.ZCETotalTradedVolume; d["ErrorID"] = a.ErrorID; d["ErrorMsg"] = encoding_cast(a.ErrorMsg); d["IsSwapOrder"] = a.IsSwapOrder; d["BranchID"] = encoding_cast(a.BranchID); d["InvestUnitID"] = encoding_cast(a.InvestUnitID); d["AccountID"] = encoding_cast(a.AccountID); d["CurrencyID"] = encoding_cast(a.CurrencyID); d["reserve3"] = encoding_cast(a.reserve3); d["MacAddress"] = encoding_cast(a.MacAddress); d["InstrumentID"] = encoding_cast(a.InstrumentID); d["ExchangeInstID"] = encoding_cast(a.ExchangeInstID); d["IPAddress"] = encoding_cast(a.IPAddress); return d;});

	py::class_<CThostFtdcQryErrOrderActionField>(m, "CThostFtdcQryErrOrderActionField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryErrOrderActionField& a) {return CThostFtdcQryErrOrderActionField(a);})
		.def_property("BrokerID", [](const CThostFtdcQryErrOrderActionField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcQryErrOrderActionField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcQryErrOrderActionField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcQryErrOrderActionField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def("to_dict", [](const CThostFtdcQryErrOrderActionField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); return d;});

	py::class_<CThostFtdcErrOrderActionField>(m, "CThostFtdcErrOrderActionField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcErrOrderActionField& a) {return CThostFtdcErrOrderActionField(a);})
		.def_property("BrokerID", [](const CThostFtdcErrOrderActionField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcErrOrderActionField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcErrOrderActionField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcErrOrderActionField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_readwrite("OrderActionRef", &CThostFtdcErrOrderActionField::OrderActionRef)
		.def_property("OrderRef", [](const CThostFtdcErrOrderActionField& a) {return encoding_cast(a.OrderRef);}, [](CThostFtdcErrOrderActionField& a, char c[]) {strcpy(a.OrderRef, c);})
		.def_readwrite("RequestID", &CThostFtdcErrOrderActionField::RequestID)
		.def_readwrite("FrontID", &CThostFtdcErrOrderActionField::FrontID)
		.def_readwrite("SessionID", &CThostFtdcErrOrderActionField::SessionID)
		.def_property("ExchangeID", [](const CThostFtdcErrOrderActionField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcErrOrderActionField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("OrderSysID", [](const CThostFtdcErrOrderActionField& a) {return encoding_cast(a.OrderSysID);}, [](CThostFtdcErrOrderActionField& a, char c[]) {strcpy(a.OrderSysID, c);})
		.def_readwrite("ActionFlag", &CThostFtdcErrOrderActionField::ActionFlag)
		.def_readwrite("LimitPrice", &CThostFtdcErrOrderActionField::LimitPrice)
		.def_readwrite("VolumeChange", &CThostFtdcErrOrderActionField::VolumeChange)
		.def_property("ActionDate", [](const CThostFtdcErrOrderActionField& a) {return encoding_cast(a.ActionDate);}, [](CThostFtdcErrOrderActionField& a, char c[]) {strcpy(a.ActionDate, c);})
		.def_property("ActionTime", [](const CThostFtdcErrOrderActionField& a) {return encoding_cast(a.ActionTime);}, [](CThostFtdcErrOrderActionField& a, char c[]) {strcpy(a.ActionTime, c);})
		.def_property("TraderID", [](const CThostFtdcErrOrderActionField& a) {return encoding_cast(a.TraderID);}, [](CThostFtdcErrOrderActionField& a, char c[]) {strcpy(a.TraderID, c);})
		.def_readwrite("InstallID", &CThostFtdcErrOrderActionField::InstallID)
		.def_property("OrderLocalID", [](const CThostFtdcErrOrderActionField& a) {return encoding_cast(a.OrderLocalID);}, [](CThostFtdcErrOrderActionField& a, char c[]) {strcpy(a.OrderLocalID, c);})
		.def_property("ActionLocalID", [](const CThostFtdcErrOrderActionField& a) {return encoding_cast(a.ActionLocalID);}, [](CThostFtdcErrOrderActionField& a, char c[]) {strcpy(a.ActionLocalID, c);})
		.def_property("ParticipantID", [](const CThostFtdcErrOrderActionField& a) {return encoding_cast(a.ParticipantID);}, [](CThostFtdcErrOrderActionField& a, char c[]) {strcpy(a.ParticipantID, c);})
		.def_property("ClientID", [](const CThostFtdcErrOrderActionField& a) {return encoding_cast(a.ClientID);}, [](CThostFtdcErrOrderActionField& a, char c[]) {strcpy(a.ClientID, c);})
		.def_property("BusinessUnit", [](const CThostFtdcErrOrderActionField& a) {return encoding_cast(a.BusinessUnit);}, [](CThostFtdcErrOrderActionField& a, char c[]) {strcpy(a.BusinessUnit, c);})
		.def_readwrite("OrderActionStatus", &CThostFtdcErrOrderActionField::OrderActionStatus)
		.def_property("UserID", [](const CThostFtdcErrOrderActionField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcErrOrderActionField& a, char c[]) {strcpy(a.UserID, c);})
		.def_property("StatusMsg", [](const CThostFtdcErrOrderActionField& a) {return encoding_cast(a.StatusMsg);}, [](CThostFtdcErrOrderActionField& a, char c[]) {strcpy(a.StatusMsg, c);})
		.def_property("reserve1", [](const CThostFtdcErrOrderActionField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcErrOrderActionField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("BranchID", [](const CThostFtdcErrOrderActionField& a) {return encoding_cast(a.BranchID);}, [](CThostFtdcErrOrderActionField& a, char c[]) {strcpy(a.BranchID, c);})
		.def_property("InvestUnitID", [](const CThostFtdcErrOrderActionField& a) {return encoding_cast(a.InvestUnitID);}, [](CThostFtdcErrOrderActionField& a, char c[]) {strcpy(a.InvestUnitID, c);})
		.def_property("reserve2", [](const CThostFtdcErrOrderActionField& a) {return encoding_cast(a.reserve2);}, [](CThostFtdcErrOrderActionField& a, char c[]) {strcpy(a.reserve2, c);})
		.def_property("MacAddress", [](const CThostFtdcErrOrderActionField& a) {return encoding_cast(a.MacAddress);}, [](CThostFtdcErrOrderActionField& a, char c[]) {strcpy(a.MacAddress, c);})
		.def_readwrite("ErrorID", &CThostFtdcErrOrderActionField::ErrorID)
		.def_property("ErrorMsg", [](const CThostFtdcErrOrderActionField& a) {return encoding_cast(a.ErrorMsg);}, [](CThostFtdcErrOrderActionField& a, char c[]) {strcpy(a.ErrorMsg, c);})
		.def_property("InstrumentID", [](const CThostFtdcErrOrderActionField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcErrOrderActionField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def_property("IPAddress", [](const CThostFtdcErrOrderActionField& a) {return encoding_cast(a.IPAddress);}, [](CThostFtdcErrOrderActionField& a, char c[]) {strcpy(a.IPAddress, c);})
		.def("to_dict", [](const CThostFtdcErrOrderActionField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["OrderActionRef"] = a.OrderActionRef; d["OrderRef"] = encoding_cast(a.OrderRef); d["RequestID"] = a.RequestID; d["FrontID"] = a.FrontID; d["SessionID"] = a.SessionID; d["ExchangeID"] = encoding_cast(a.ExchangeID); d["OrderSysID"] = encoding_cast(a.OrderSysID); d["ActionFlag"] = a.ActionFlag; d["LimitPrice"] = a.LimitPrice; d["VolumeChange"] = a.VolumeChange; d["ActionDate"] = encoding_cast(a.ActionDate); d["ActionTime"] = encoding_cast(a.ActionTime); d["TraderID"] = encoding_cast(a.TraderID); d["InstallID"] = a.InstallID; d["OrderLocalID"] = encoding_cast(a.OrderLocalID); d["ActionLocalID"] = encoding_cast(a.ActionLocalID); d["ParticipantID"] = encoding_cast(a.ParticipantID); d["ClientID"] = encoding_cast(a.ClientID); d["BusinessUnit"] = encoding_cast(a.BusinessUnit); d["OrderActionStatus"] = a.OrderActionStatus; d["UserID"] = encoding_cast(a.UserID); d["StatusMsg"] = encoding_cast(a.StatusMsg); d["reserve1"] = encoding_cast(a.reserve1); d["BranchID"] = encoding_cast(a.BranchID); d["InvestUnitID"] = encoding_cast(a.InvestUnitID); d["reserve2"] = encoding_cast(a.reserve2); d["MacAddress"] = encoding_cast(a.MacAddress); d["ErrorID"] = a.ErrorID; d["ErrorMsg"] = encoding_cast(a.ErrorMsg); d["InstrumentID"] = encoding_cast(a.InstrumentID); d["IPAddress"] = encoding_cast(a.IPAddress); return d;});

	py::class_<CThostFtdcQryExchangeSequenceField>(m, "CThostFtdcQryExchangeSequenceField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryExchangeSequenceField& a) {return CThostFtdcQryExchangeSequenceField(a);})
		.def_property("ExchangeID", [](const CThostFtdcQryExchangeSequenceField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcQryExchangeSequenceField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def("to_dict", [](const CThostFtdcQryExchangeSequenceField& a) {py::dict d; d["ExchangeID"] = encoding_cast(a.ExchangeID); return d;});

	py::class_<CThostFtdcExchangeSequenceField>(m, "CThostFtdcExchangeSequenceField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcExchangeSequenceField& a) {return CThostFtdcExchangeSequenceField(a);})
		.def_property("ExchangeID", [](const CThostFtdcExchangeSequenceField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcExchangeSequenceField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_readwrite("SequenceNo", &CThostFtdcExchangeSequenceField::SequenceNo)
		.def_readwrite("MarketStatus", &CThostFtdcExchangeSequenceField::MarketStatus)
		.def("to_dict", [](const CThostFtdcExchangeSequenceField& a) {py::dict d; d["ExchangeID"] = encoding_cast(a.ExchangeID); d["SequenceNo"] = a.SequenceNo; d["MarketStatus"] = a.MarketStatus; return d;});

	py::class_<CThostFtdcQryMaxOrderVolumeWithPriceField>(m, "CThostFtdcQryMaxOrderVolumeWithPriceField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryMaxOrderVolumeWithPriceField& a) {return CThostFtdcQryMaxOrderVolumeWithPriceField(a);})
		.def_property("BrokerID", [](const CThostFtdcQryMaxOrderVolumeWithPriceField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcQryMaxOrderVolumeWithPriceField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcQryMaxOrderVolumeWithPriceField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcQryMaxOrderVolumeWithPriceField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_property("reserve1", [](const CThostFtdcQryMaxOrderVolumeWithPriceField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcQryMaxOrderVolumeWithPriceField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_readwrite("Direction", &CThostFtdcQryMaxOrderVolumeWithPriceField::Direction)
		.def_readwrite("OffsetFlag", &CThostFtdcQryMaxOrderVolumeWithPriceField::OffsetFlag)
		.def_readwrite("HedgeFlag", &CThostFtdcQryMaxOrderVolumeWithPriceField::HedgeFlag)
		.def_readwrite("MaxVolume", &CThostFtdcQryMaxOrderVolumeWithPriceField::MaxVolume)
		.def_readwrite("Price", &CThostFtdcQryMaxOrderVolumeWithPriceField::Price)
		.def_property("ExchangeID", [](const CThostFtdcQryMaxOrderVolumeWithPriceField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcQryMaxOrderVolumeWithPriceField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("InvestUnitID", [](const CThostFtdcQryMaxOrderVolumeWithPriceField& a) {return encoding_cast(a.InvestUnitID);}, [](CThostFtdcQryMaxOrderVolumeWithPriceField& a, char c[]) {strcpy(a.InvestUnitID, c);})
		.def_property("InstrumentID", [](const CThostFtdcQryMaxOrderVolumeWithPriceField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcQryMaxOrderVolumeWithPriceField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def("to_dict", [](const CThostFtdcQryMaxOrderVolumeWithPriceField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["reserve1"] = encoding_cast(a.reserve1); d["Direction"] = a.Direction; d["OffsetFlag"] = a.OffsetFlag; d["HedgeFlag"] = a.HedgeFlag; d["MaxVolume"] = a.MaxVolume; d["Price"] = a.Price; d["ExchangeID"] = encoding_cast(a.ExchangeID); d["InvestUnitID"] = encoding_cast(a.InvestUnitID); d["InstrumentID"] = encoding_cast(a.InstrumentID); return d;});

	py::class_<CThostFtdcQryBrokerTradingParamsField>(m, "CThostFtdcQryBrokerTradingParamsField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryBrokerTradingParamsField& a) {return CThostFtdcQryBrokerTradingParamsField(a);})
		.def_property("BrokerID", [](const CThostFtdcQryBrokerTradingParamsField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcQryBrokerTradingParamsField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcQryBrokerTradingParamsField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcQryBrokerTradingParamsField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_property("CurrencyID", [](const CThostFtdcQryBrokerTradingParamsField& a) {return encoding_cast(a.CurrencyID);}, [](CThostFtdcQryBrokerTradingParamsField& a, char c[]) {strcpy(a.CurrencyID, c);})
		.def_property("AccountID", [](const CThostFtdcQryBrokerTradingParamsField& a) {return encoding_cast(a.AccountID);}, [](CThostFtdcQryBrokerTradingParamsField& a, char c[]) {strcpy(a.AccountID, c);})
		.def("to_dict", [](const CThostFtdcQryBrokerTradingParamsField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["CurrencyID"] = encoding_cast(a.CurrencyID); d["AccountID"] = encoding_cast(a.AccountID); return d;});

	py::class_<CThostFtdcBrokerTradingParamsField>(m, "CThostFtdcBrokerTradingParamsField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcBrokerTradingParamsField& a) {return CThostFtdcBrokerTradingParamsField(a);})
		.def_property("BrokerID", [](const CThostFtdcBrokerTradingParamsField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcBrokerTradingParamsField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcBrokerTradingParamsField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcBrokerTradingParamsField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_readwrite("MarginPriceType", &CThostFtdcBrokerTradingParamsField::MarginPriceType)
		.def_readwrite("Algorithm", &CThostFtdcBrokerTradingParamsField::Algorithm)
		.def_readwrite("AvailIncludeCloseProfit", &CThostFtdcBrokerTradingParamsField::AvailIncludeCloseProfit)
		.def_property("CurrencyID", [](const CThostFtdcBrokerTradingParamsField& a) {return encoding_cast(a.CurrencyID);}, [](CThostFtdcBrokerTradingParamsField& a, char c[]) {strcpy(a.CurrencyID, c);})
		.def_readwrite("OptionRoyaltyPriceType", &CThostFtdcBrokerTradingParamsField::OptionRoyaltyPriceType)
		.def_property("AccountID", [](const CThostFtdcBrokerTradingParamsField& a) {return encoding_cast(a.AccountID);}, [](CThostFtdcBrokerTradingParamsField& a, char c[]) {strcpy(a.AccountID, c);})
		.def("to_dict", [](const CThostFtdcBrokerTradingParamsField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["MarginPriceType"] = a.MarginPriceType; d["Algorithm"] = a.Algorithm; d["AvailIncludeCloseProfit"] = a.AvailIncludeCloseProfit; d["CurrencyID"] = encoding_cast(a.CurrencyID); d["OptionRoyaltyPriceType"] = a.OptionRoyaltyPriceType; d["AccountID"] = encoding_cast(a.AccountID); return d;});

	py::class_<CThostFtdcQryBrokerTradingAlgosField>(m, "CThostFtdcQryBrokerTradingAlgosField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryBrokerTradingAlgosField& a) {return CThostFtdcQryBrokerTradingAlgosField(a);})
		.def_property("BrokerID", [](const CThostFtdcQryBrokerTradingAlgosField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcQryBrokerTradingAlgosField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("ExchangeID", [](const CThostFtdcQryBrokerTradingAlgosField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcQryBrokerTradingAlgosField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("reserve1", [](const CThostFtdcQryBrokerTradingAlgosField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcQryBrokerTradingAlgosField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("InstrumentID", [](const CThostFtdcQryBrokerTradingAlgosField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcQryBrokerTradingAlgosField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def("to_dict", [](const CThostFtdcQryBrokerTradingAlgosField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["ExchangeID"] = encoding_cast(a.ExchangeID); d["reserve1"] = encoding_cast(a.reserve1); d["InstrumentID"] = encoding_cast(a.InstrumentID); return d;});

	py::class_<CThostFtdcBrokerTradingAlgosField>(m, "CThostFtdcBrokerTradingAlgosField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcBrokerTradingAlgosField& a) {return CThostFtdcBrokerTradingAlgosField(a);})
		.def_property("BrokerID", [](const CThostFtdcBrokerTradingAlgosField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcBrokerTradingAlgosField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("ExchangeID", [](const CThostFtdcBrokerTradingAlgosField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcBrokerTradingAlgosField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("reserve1", [](const CThostFtdcBrokerTradingAlgosField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcBrokerTradingAlgosField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_readwrite("HandlePositionAlgoID", &CThostFtdcBrokerTradingAlgosField::HandlePositionAlgoID)
		.def_readwrite("FindMarginRateAlgoID", &CThostFtdcBrokerTradingAlgosField::FindMarginRateAlgoID)
		.def_readwrite("HandleTradingAccountAlgoID", &CThostFtdcBrokerTradingAlgosField::HandleTradingAccountAlgoID)
		.def_property("InstrumentID", [](const CThostFtdcBrokerTradingAlgosField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcBrokerTradingAlgosField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def("to_dict", [](const CThostFtdcBrokerTradingAlgosField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["ExchangeID"] = encoding_cast(a.ExchangeID); d["reserve1"] = encoding_cast(a.reserve1); d["HandlePositionAlgoID"] = a.HandlePositionAlgoID; d["FindMarginRateAlgoID"] = a.FindMarginRateAlgoID; d["HandleTradingAccountAlgoID"] = a.HandleTradingAccountAlgoID; d["InstrumentID"] = encoding_cast(a.InstrumentID); return d;});

	py::class_<CThostFtdcQueryBrokerDepositField>(m, "CThostFtdcQueryBrokerDepositField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQueryBrokerDepositField& a) {return CThostFtdcQueryBrokerDepositField(a);})
		.def_property("BrokerID", [](const CThostFtdcQueryBrokerDepositField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcQueryBrokerDepositField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("ExchangeID", [](const CThostFtdcQueryBrokerDepositField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcQueryBrokerDepositField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def("to_dict", [](const CThostFtdcQueryBrokerDepositField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["ExchangeID"] = encoding_cast(a.ExchangeID); return d;});

	py::class_<CThostFtdcBrokerDepositField>(m, "CThostFtdcBrokerDepositField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcBrokerDepositField& a) {return CThostFtdcBrokerDepositField(a);})
		.def_property("TradingDay", [](const CThostFtdcBrokerDepositField& a) {return encoding_cast(a.TradingDay);}, [](CThostFtdcBrokerDepositField& a, char c[]) {strcpy(a.TradingDay, c);})
		.def_property("BrokerID", [](const CThostFtdcBrokerDepositField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcBrokerDepositField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("ParticipantID", [](const CThostFtdcBrokerDepositField& a) {return encoding_cast(a.ParticipantID);}, [](CThostFtdcBrokerDepositField& a, char c[]) {strcpy(a.ParticipantID, c);})
		.def_property("ExchangeID", [](const CThostFtdcBrokerDepositField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcBrokerDepositField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_readwrite("PreBalance", &CThostFtdcBrokerDepositField::PreBalance)
		.def_readwrite("CurrMargin", &CThostFtdcBrokerDepositField::CurrMargin)
		.def_readwrite("CloseProfit", &CThostFtdcBrokerDepositField::CloseProfit)
		.def_readwrite("Balance", &CThostFtdcBrokerDepositField::Balance)
		.def_readwrite("Deposit", &CThostFtdcBrokerDepositField::Deposit)
		.def_readwrite("Withdraw", &CThostFtdcBrokerDepositField::Withdraw)
		.def_readwrite("Available", &CThostFtdcBrokerDepositField::Available)
		.def_readwrite("Reserve", &CThostFtdcBrokerDepositField::Reserve)
		.def_readwrite("FrozenMargin", &CThostFtdcBrokerDepositField::FrozenMargin)
		.def("to_dict", [](const CThostFtdcBrokerDepositField& a) {py::dict d; d["TradingDay"] = encoding_cast(a.TradingDay); d["BrokerID"] = encoding_cast(a.BrokerID); d["ParticipantID"] = encoding_cast(a.ParticipantID); d["ExchangeID"] = encoding_cast(a.ExchangeID); d["PreBalance"] = a.PreBalance; d["CurrMargin"] = a.CurrMargin; d["CloseProfit"] = a.CloseProfit; d["Balance"] = a.Balance; d["Deposit"] = a.Deposit; d["Withdraw"] = a.Withdraw; d["Available"] = a.Available; d["Reserve"] = a.Reserve; d["FrozenMargin"] = a.FrozenMargin; return d;});

	py::class_<CThostFtdcQryCFMMCBrokerKeyField>(m, "CThostFtdcQryCFMMCBrokerKeyField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryCFMMCBrokerKeyField& a) {return CThostFtdcQryCFMMCBrokerKeyField(a);})
		.def_property("BrokerID", [](const CThostFtdcQryCFMMCBrokerKeyField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcQryCFMMCBrokerKeyField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def("to_dict", [](const CThostFtdcQryCFMMCBrokerKeyField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); return d;});

	py::class_<CThostFtdcCFMMCBrokerKeyField>(m, "CThostFtdcCFMMCBrokerKeyField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcCFMMCBrokerKeyField& a) {return CThostFtdcCFMMCBrokerKeyField(a);})
		.def_property("BrokerID", [](const CThostFtdcCFMMCBrokerKeyField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcCFMMCBrokerKeyField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("ParticipantID", [](const CThostFtdcCFMMCBrokerKeyField& a) {return encoding_cast(a.ParticipantID);}, [](CThostFtdcCFMMCBrokerKeyField& a, char c[]) {strcpy(a.ParticipantID, c);})
		.def_property("CreateDate", [](const CThostFtdcCFMMCBrokerKeyField& a) {return encoding_cast(a.CreateDate);}, [](CThostFtdcCFMMCBrokerKeyField& a, char c[]) {strcpy(a.CreateDate, c);})
		.def_property("CreateTime", [](const CThostFtdcCFMMCBrokerKeyField& a) {return encoding_cast(a.CreateTime);}, [](CThostFtdcCFMMCBrokerKeyField& a, char c[]) {strcpy(a.CreateTime, c);})
		.def_readwrite("KeyID", &CThostFtdcCFMMCBrokerKeyField::KeyID)
		.def_property("CurrentKey", [](const CThostFtdcCFMMCBrokerKeyField& a) {return encoding_cast(a.CurrentKey);}, [](CThostFtdcCFMMCBrokerKeyField& a, char c[]) {strcpy(a.CurrentKey, c);})
		.def_readwrite("KeyKind", &CThostFtdcCFMMCBrokerKeyField::KeyKind)
		.def("to_dict", [](const CThostFtdcCFMMCBrokerKeyField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["ParticipantID"] = encoding_cast(a.ParticipantID); d["CreateDate"] = encoding_cast(a.CreateDate); d["CreateTime"] = encoding_cast(a.CreateTime); d["KeyID"] = a.KeyID; d["CurrentKey"] = encoding_cast(a.CurrentKey); d["KeyKind"] = a.KeyKind; return d;});

	py::class_<CThostFtdcCFMMCTradingAccountKeyField>(m, "CThostFtdcCFMMCTradingAccountKeyField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcCFMMCTradingAccountKeyField& a) {return CThostFtdcCFMMCTradingAccountKeyField(a);})
		.def_property("BrokerID", [](const CThostFtdcCFMMCTradingAccountKeyField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcCFMMCTradingAccountKeyField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("ParticipantID", [](const CThostFtdcCFMMCTradingAccountKeyField& a) {return encoding_cast(a.ParticipantID);}, [](CThostFtdcCFMMCTradingAccountKeyField& a, char c[]) {strcpy(a.ParticipantID, c);})
		.def_property("AccountID", [](const CThostFtdcCFMMCTradingAccountKeyField& a) {return encoding_cast(a.AccountID);}, [](CThostFtdcCFMMCTradingAccountKeyField& a, char c[]) {strcpy(a.AccountID, c);})
		.def_readwrite("KeyID", &CThostFtdcCFMMCTradingAccountKeyField::KeyID)
		.def_property("CurrentKey", [](const CThostFtdcCFMMCTradingAccountKeyField& a) {return encoding_cast(a.CurrentKey);}, [](CThostFtdcCFMMCTradingAccountKeyField& a, char c[]) {strcpy(a.CurrentKey, c);})
		.def("to_dict", [](const CThostFtdcCFMMCTradingAccountKeyField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["ParticipantID"] = encoding_cast(a.ParticipantID); d["AccountID"] = encoding_cast(a.AccountID); d["KeyID"] = a.KeyID; d["CurrentKey"] = encoding_cast(a.CurrentKey); return d;});

	py::class_<CThostFtdcQryCFMMCTradingAccountKeyField>(m, "CThostFtdcQryCFMMCTradingAccountKeyField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryCFMMCTradingAccountKeyField& a) {return CThostFtdcQryCFMMCTradingAccountKeyField(a);})
		.def_property("BrokerID", [](const CThostFtdcQryCFMMCTradingAccountKeyField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcQryCFMMCTradingAccountKeyField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcQryCFMMCTradingAccountKeyField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcQryCFMMCTradingAccountKeyField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def("to_dict", [](const CThostFtdcQryCFMMCTradingAccountKeyField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); return d;});

	py::class_<CThostFtdcBrokerUserOTPParamField>(m, "CThostFtdcBrokerUserOTPParamField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcBrokerUserOTPParamField& a) {return CThostFtdcBrokerUserOTPParamField(a);})
		.def_property("BrokerID", [](const CThostFtdcBrokerUserOTPParamField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcBrokerUserOTPParamField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("UserID", [](const CThostFtdcBrokerUserOTPParamField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcBrokerUserOTPParamField& a, char c[]) {strcpy(a.UserID, c);})
		.def_property("OTPVendorsID", [](const CThostFtdcBrokerUserOTPParamField& a) {return encoding_cast(a.OTPVendorsID);}, [](CThostFtdcBrokerUserOTPParamField& a, char c[]) {strcpy(a.OTPVendorsID, c);})
		.def_property("SerialNumber", [](const CThostFtdcBrokerUserOTPParamField& a) {return encoding_cast(a.SerialNumber);}, [](CThostFtdcBrokerUserOTPParamField& a, char c[]) {strcpy(a.SerialNumber, c);})
		.def_property("AuthKey", [](const CThostFtdcBrokerUserOTPParamField& a) {return encoding_cast(a.AuthKey);}, [](CThostFtdcBrokerUserOTPParamField& a, char c[]) {strcpy(a.AuthKey, c);})
		.def_readwrite("LastDrift", &CThostFtdcBrokerUserOTPParamField::LastDrift)
		.def_readwrite("LastSuccess", &CThostFtdcBrokerUserOTPParamField::LastSuccess)
		.def_readwrite("OTPType", &CThostFtdcBrokerUserOTPParamField::OTPType)
		.def("to_dict", [](const CThostFtdcBrokerUserOTPParamField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["UserID"] = encoding_cast(a.UserID); d["OTPVendorsID"] = encoding_cast(a.OTPVendorsID); d["SerialNumber"] = encoding_cast(a.SerialNumber); d["AuthKey"] = encoding_cast(a.AuthKey); d["LastDrift"] = a.LastDrift; d["LastSuccess"] = a.LastSuccess; d["OTPType"] = a.OTPType; return d;});

	py::class_<CThostFtdcManualSyncBrokerUserOTPField>(m, "CThostFtdcManualSyncBrokerUserOTPField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcManualSyncBrokerUserOTPField& a) {return CThostFtdcManualSyncBrokerUserOTPField(a);})
		.def_property("BrokerID", [](const CThostFtdcManualSyncBrokerUserOTPField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcManualSyncBrokerUserOTPField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("UserID", [](const CThostFtdcManualSyncBrokerUserOTPField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcManualSyncBrokerUserOTPField& a, char c[]) {strcpy(a.UserID, c);})
		.def_readwrite("OTPType", &CThostFtdcManualSyncBrokerUserOTPField::OTPType)
		.def_property("FirstOTP", [](const CThostFtdcManualSyncBrokerUserOTPField& a) {return encoding_cast(a.FirstOTP);}, [](CThostFtdcManualSyncBrokerUserOTPField& a, char c[]) {strcpy(a.FirstOTP, c);})
		.def_property("SecondOTP", [](const CThostFtdcManualSyncBrokerUserOTPField& a) {return encoding_cast(a.SecondOTP);}, [](CThostFtdcManualSyncBrokerUserOTPField& a, char c[]) {strcpy(a.SecondOTP, c);})
		.def("to_dict", [](const CThostFtdcManualSyncBrokerUserOTPField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["UserID"] = encoding_cast(a.UserID); d["OTPType"] = a.OTPType; d["FirstOTP"] = encoding_cast(a.FirstOTP); d["SecondOTP"] = encoding_cast(a.SecondOTP); return d;});

	py::class_<CThostFtdcCommRateModelField>(m, "CThostFtdcCommRateModelField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcCommRateModelField& a) {return CThostFtdcCommRateModelField(a);})
		.def_property("BrokerID", [](const CThostFtdcCommRateModelField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcCommRateModelField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("CommModelID", [](const CThostFtdcCommRateModelField& a) {return encoding_cast(a.CommModelID);}, [](CThostFtdcCommRateModelField& a, char c[]) {strcpy(a.CommModelID, c);})
		.def_property("CommModelName", [](const CThostFtdcCommRateModelField& a) {return encoding_cast(a.CommModelName);}, [](CThostFtdcCommRateModelField& a, char c[]) {strcpy(a.CommModelName, c);})
		.def("to_dict", [](const CThostFtdcCommRateModelField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["CommModelID"] = encoding_cast(a.CommModelID); d["CommModelName"] = encoding_cast(a.CommModelName); return d;});

	py::class_<CThostFtdcQryCommRateModelField>(m, "CThostFtdcQryCommRateModelField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryCommRateModelField& a) {return CThostFtdcQryCommRateModelField(a);})
		.def_property("BrokerID", [](const CThostFtdcQryCommRateModelField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcQryCommRateModelField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("CommModelID", [](const CThostFtdcQryCommRateModelField& a) {return encoding_cast(a.CommModelID);}, [](CThostFtdcQryCommRateModelField& a, char c[]) {strcpy(a.CommModelID, c);})
		.def("to_dict", [](const CThostFtdcQryCommRateModelField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["CommModelID"] = encoding_cast(a.CommModelID); return d;});

	py::class_<CThostFtdcMarginModelField>(m, "CThostFtdcMarginModelField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcMarginModelField& a) {return CThostFtdcMarginModelField(a);})
		.def_property("BrokerID", [](const CThostFtdcMarginModelField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcMarginModelField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("MarginModelID", [](const CThostFtdcMarginModelField& a) {return encoding_cast(a.MarginModelID);}, [](CThostFtdcMarginModelField& a, char c[]) {strcpy(a.MarginModelID, c);})
		.def_property("MarginModelName", [](const CThostFtdcMarginModelField& a) {return encoding_cast(a.MarginModelName);}, [](CThostFtdcMarginModelField& a, char c[]) {strcpy(a.MarginModelName, c);})
		.def("to_dict", [](const CThostFtdcMarginModelField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["MarginModelID"] = encoding_cast(a.MarginModelID); d["MarginModelName"] = encoding_cast(a.MarginModelName); return d;});

	py::class_<CThostFtdcQryMarginModelField>(m, "CThostFtdcQryMarginModelField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryMarginModelField& a) {return CThostFtdcQryMarginModelField(a);})
		.def_property("BrokerID", [](const CThostFtdcQryMarginModelField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcQryMarginModelField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("MarginModelID", [](const CThostFtdcQryMarginModelField& a) {return encoding_cast(a.MarginModelID);}, [](CThostFtdcQryMarginModelField& a, char c[]) {strcpy(a.MarginModelID, c);})
		.def("to_dict", [](const CThostFtdcQryMarginModelField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["MarginModelID"] = encoding_cast(a.MarginModelID); return d;});

	py::class_<CThostFtdcEWarrantOffsetField>(m, "CThostFtdcEWarrantOffsetField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcEWarrantOffsetField& a) {return CThostFtdcEWarrantOffsetField(a);})
		.def_property("TradingDay", [](const CThostFtdcEWarrantOffsetField& a) {return encoding_cast(a.TradingDay);}, [](CThostFtdcEWarrantOffsetField& a, char c[]) {strcpy(a.TradingDay, c);})
		.def_property("BrokerID", [](const CThostFtdcEWarrantOffsetField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcEWarrantOffsetField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcEWarrantOffsetField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcEWarrantOffsetField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_property("ExchangeID", [](const CThostFtdcEWarrantOffsetField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcEWarrantOffsetField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("reserve1", [](const CThostFtdcEWarrantOffsetField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcEWarrantOffsetField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_readwrite("Direction", &CThostFtdcEWarrantOffsetField::Direction)
		.def_readwrite("HedgeFlag", &CThostFtdcEWarrantOffsetField::HedgeFlag)
		.def_readwrite("Volume", &CThostFtdcEWarrantOffsetField::Volume)
		.def_property("InvestUnitID", [](const CThostFtdcEWarrantOffsetField& a) {return encoding_cast(a.InvestUnitID);}, [](CThostFtdcEWarrantOffsetField& a, char c[]) {strcpy(a.InvestUnitID, c);})
		.def_property("InstrumentID", [](const CThostFtdcEWarrantOffsetField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcEWarrantOffsetField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def("to_dict", [](const CThostFtdcEWarrantOffsetField& a) {py::dict d; d["TradingDay"] = encoding_cast(a.TradingDay); d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["ExchangeID"] = encoding_cast(a.ExchangeID); d["reserve1"] = encoding_cast(a.reserve1); d["Direction"] = a.Direction; d["HedgeFlag"] = a.HedgeFlag; d["Volume"] = a.Volume; d["InvestUnitID"] = encoding_cast(a.InvestUnitID); d["InstrumentID"] = encoding_cast(a.InstrumentID); return d;});

	py::class_<CThostFtdcQryEWarrantOffsetField>(m, "CThostFtdcQryEWarrantOffsetField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryEWarrantOffsetField& a) {return CThostFtdcQryEWarrantOffsetField(a);})
		.def_property("BrokerID", [](const CThostFtdcQryEWarrantOffsetField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcQryEWarrantOffsetField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcQryEWarrantOffsetField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcQryEWarrantOffsetField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_property("ExchangeID", [](const CThostFtdcQryEWarrantOffsetField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcQryEWarrantOffsetField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("reserve1", [](const CThostFtdcQryEWarrantOffsetField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcQryEWarrantOffsetField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("InvestUnitID", [](const CThostFtdcQryEWarrantOffsetField& a) {return encoding_cast(a.InvestUnitID);}, [](CThostFtdcQryEWarrantOffsetField& a, char c[]) {strcpy(a.InvestUnitID, c);})
		.def_property("InstrumentID", [](const CThostFtdcQryEWarrantOffsetField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcQryEWarrantOffsetField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def("to_dict", [](const CThostFtdcQryEWarrantOffsetField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["ExchangeID"] = encoding_cast(a.ExchangeID); d["reserve1"] = encoding_cast(a.reserve1); d["InvestUnitID"] = encoding_cast(a.InvestUnitID); d["InstrumentID"] = encoding_cast(a.InstrumentID); return d;});

	py::class_<CThostFtdcQryInvestorProductGroupMarginField>(m, "CThostFtdcQryInvestorProductGroupMarginField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryInvestorProductGroupMarginField& a) {return CThostFtdcQryInvestorProductGroupMarginField(a);})
		.def_property("BrokerID", [](const CThostFtdcQryInvestorProductGroupMarginField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcQryInvestorProductGroupMarginField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcQryInvestorProductGroupMarginField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcQryInvestorProductGroupMarginField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_property("reserve1", [](const CThostFtdcQryInvestorProductGroupMarginField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcQryInvestorProductGroupMarginField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_readwrite("HedgeFlag", &CThostFtdcQryInvestorProductGroupMarginField::HedgeFlag)
		.def_property("ExchangeID", [](const CThostFtdcQryInvestorProductGroupMarginField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcQryInvestorProductGroupMarginField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("InvestUnitID", [](const CThostFtdcQryInvestorProductGroupMarginField& a) {return encoding_cast(a.InvestUnitID);}, [](CThostFtdcQryInvestorProductGroupMarginField& a, char c[]) {strcpy(a.InvestUnitID, c);})
		.def_property("ProductGroupID", [](const CThostFtdcQryInvestorProductGroupMarginField& a) {return encoding_cast(a.ProductGroupID);}, [](CThostFtdcQryInvestorProductGroupMarginField& a, char c[]) {strcpy(a.ProductGroupID, c);})
		.def("to_dict", [](const CThostFtdcQryInvestorProductGroupMarginField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["reserve1"] = encoding_cast(a.reserve1); d["HedgeFlag"] = a.HedgeFlag; d["ExchangeID"] = encoding_cast(a.ExchangeID); d["InvestUnitID"] = encoding_cast(a.InvestUnitID); d["ProductGroupID"] = encoding_cast(a.ProductGroupID); return d;});

	py::class_<CThostFtdcInvestorProductGroupMarginField>(m, "CThostFtdcInvestorProductGroupMarginField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcInvestorProductGroupMarginField& a) {return CThostFtdcInvestorProductGroupMarginField(a);})
		.def_property("reserve1", [](const CThostFtdcInvestorProductGroupMarginField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcInvestorProductGroupMarginField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("BrokerID", [](const CThostFtdcInvestorProductGroupMarginField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcInvestorProductGroupMarginField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcInvestorProductGroupMarginField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcInvestorProductGroupMarginField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_property("TradingDay", [](const CThostFtdcInvestorProductGroupMarginField& a) {return encoding_cast(a.TradingDay);}, [](CThostFtdcInvestorProductGroupMarginField& a, char c[]) {strcpy(a.TradingDay, c);})
		.def_readwrite("SettlementID", &CThostFtdcInvestorProductGroupMarginField::SettlementID)
		.def_readwrite("FrozenMargin", &CThostFtdcInvestorProductGroupMarginField::FrozenMargin)
		.def_readwrite("LongFrozenMargin", &CThostFtdcInvestorProductGroupMarginField::LongFrozenMargin)
		.def_readwrite("ShortFrozenMargin", &CThostFtdcInvestorProductGroupMarginField::ShortFrozenMargin)
		.def_readwrite("UseMargin", &CThostFtdcInvestorProductGroupMarginField::UseMargin)
		.def_readwrite("LongUseMargin", &CThostFtdcInvestorProductGroupMarginField::LongUseMargin)
		.def_readwrite("ShortUseMargin", &CThostFtdcInvestorProductGroupMarginField::ShortUseMargin)
		.def_readwrite("ExchMargin", &CThostFtdcInvestorProductGroupMarginField::ExchMargin)
		.def_readwrite("LongExchMargin", &CThostFtdcInvestorProductGroupMarginField::LongExchMargin)
		.def_readwrite("ShortExchMargin", &CThostFtdcInvestorProductGroupMarginField::ShortExchMargin)
		.def_readwrite("CloseProfit", &CThostFtdcInvestorProductGroupMarginField::CloseProfit)
		.def_readwrite("FrozenCommission", &CThostFtdcInvestorProductGroupMarginField::FrozenCommission)
		.def_readwrite("Commission", &CThostFtdcInvestorProductGroupMarginField::Commission)
		.def_readwrite("FrozenCash", &CThostFtdcInvestorProductGroupMarginField::FrozenCash)
		.def_readwrite("CashIn", &CThostFtdcInvestorProductGroupMarginField::CashIn)
		.def_readwrite("PositionProfit", &CThostFtdcInvestorProductGroupMarginField::PositionProfit)
		.def_readwrite("OffsetAmount", &CThostFtdcInvestorProductGroupMarginField::OffsetAmount)
		.def_readwrite("LongOffsetAmount", &CThostFtdcInvestorProductGroupMarginField::LongOffsetAmount)
		.def_readwrite("ShortOffsetAmount", &CThostFtdcInvestorProductGroupMarginField::ShortOffsetAmount)
		.def_readwrite("ExchOffsetAmount", &CThostFtdcInvestorProductGroupMarginField::ExchOffsetAmount)
		.def_readwrite("LongExchOffsetAmount", &CThostFtdcInvestorProductGroupMarginField::LongExchOffsetAmount)
		.def_readwrite("ShortExchOffsetAmount", &CThostFtdcInvestorProductGroupMarginField::ShortExchOffsetAmount)
		.def_readwrite("HedgeFlag", &CThostFtdcInvestorProductGroupMarginField::HedgeFlag)
		.def_property("ExchangeID", [](const CThostFtdcInvestorProductGroupMarginField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcInvestorProductGroupMarginField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("InvestUnitID", [](const CThostFtdcInvestorProductGroupMarginField& a) {return encoding_cast(a.InvestUnitID);}, [](CThostFtdcInvestorProductGroupMarginField& a, char c[]) {strcpy(a.InvestUnitID, c);})
		.def_property("ProductGroupID", [](const CThostFtdcInvestorProductGroupMarginField& a) {return encoding_cast(a.ProductGroupID);}, [](CThostFtdcInvestorProductGroupMarginField& a, char c[]) {strcpy(a.ProductGroupID, c);})
		.def("to_dict", [](const CThostFtdcInvestorProductGroupMarginField& a) {py::dict d; d["reserve1"] = encoding_cast(a.reserve1); d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["TradingDay"] = encoding_cast(a.TradingDay); d["SettlementID"] = a.SettlementID; d["FrozenMargin"] = a.FrozenMargin; d["LongFrozenMargin"] = a.LongFrozenMargin; d["ShortFrozenMargin"] = a.ShortFrozenMargin; d["UseMargin"] = a.UseMargin; d["LongUseMargin"] = a.LongUseMargin; d["ShortUseMargin"] = a.ShortUseMargin; d["ExchMargin"] = a.ExchMargin; d["LongExchMargin"] = a.LongExchMargin; d["ShortExchMargin"] = a.ShortExchMargin; d["CloseProfit"] = a.CloseProfit; d["FrozenCommission"] = a.FrozenCommission; d["Commission"] = a.Commission; d["FrozenCash"] = a.FrozenCash; d["CashIn"] = a.CashIn; d["PositionProfit"] = a.PositionProfit; d["OffsetAmount"] = a.OffsetAmount; d["LongOffsetAmount"] = a.LongOffsetAmount; d["ShortOffsetAmount"] = a.ShortOffsetAmount; d["ExchOffsetAmount"] = a.ExchOffsetAmount; d["LongExchOffsetAmount"] = a.LongExchOffsetAmount; d["ShortExchOffsetAmount"] = a.ShortExchOffsetAmount; d["HedgeFlag"] = a.HedgeFlag; d["ExchangeID"] = encoding_cast(a.ExchangeID); d["InvestUnitID"] = encoding_cast(a.InvestUnitID); d["ProductGroupID"] = encoding_cast(a.ProductGroupID); return d;});

	py::class_<CThostFtdcQueryCFMMCTradingAccountTokenField>(m, "CThostFtdcQueryCFMMCTradingAccountTokenField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQueryCFMMCTradingAccountTokenField& a) {return CThostFtdcQueryCFMMCTradingAccountTokenField(a);})
		.def_property("BrokerID", [](const CThostFtdcQueryCFMMCTradingAccountTokenField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcQueryCFMMCTradingAccountTokenField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcQueryCFMMCTradingAccountTokenField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcQueryCFMMCTradingAccountTokenField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_property("InvestUnitID", [](const CThostFtdcQueryCFMMCTradingAccountTokenField& a) {return encoding_cast(a.InvestUnitID);}, [](CThostFtdcQueryCFMMCTradingAccountTokenField& a, char c[]) {strcpy(a.InvestUnitID, c);})
		.def("to_dict", [](const CThostFtdcQueryCFMMCTradingAccountTokenField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["InvestUnitID"] = encoding_cast(a.InvestUnitID); return d;});

	py::class_<CThostFtdcCFMMCTradingAccountTokenField>(m, "CThostFtdcCFMMCTradingAccountTokenField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcCFMMCTradingAccountTokenField& a) {return CThostFtdcCFMMCTradingAccountTokenField(a);})
		.def_property("BrokerID", [](const CThostFtdcCFMMCTradingAccountTokenField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcCFMMCTradingAccountTokenField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("ParticipantID", [](const CThostFtdcCFMMCTradingAccountTokenField& a) {return encoding_cast(a.ParticipantID);}, [](CThostFtdcCFMMCTradingAccountTokenField& a, char c[]) {strcpy(a.ParticipantID, c);})
		.def_property("AccountID", [](const CThostFtdcCFMMCTradingAccountTokenField& a) {return encoding_cast(a.AccountID);}, [](CThostFtdcCFMMCTradingAccountTokenField& a, char c[]) {strcpy(a.AccountID, c);})
		.def_readwrite("KeyID", &CThostFtdcCFMMCTradingAccountTokenField::KeyID)
		.def_property("Token", [](const CThostFtdcCFMMCTradingAccountTokenField& a) {return encoding_cast(a.Token);}, [](CThostFtdcCFMMCTradingAccountTokenField& a, char c[]) {strcpy(a.Token, c);})
		.def("to_dict", [](const CThostFtdcCFMMCTradingAccountTokenField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["ParticipantID"] = encoding_cast(a.ParticipantID); d["AccountID"] = encoding_cast(a.AccountID); d["KeyID"] = a.KeyID; d["Token"] = encoding_cast(a.Token); return d;});

	py::class_<CThostFtdcQryProductGroupField>(m, "CThostFtdcQryProductGroupField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryProductGroupField& a) {return CThostFtdcQryProductGroupField(a);})
		.def_property("reserve1", [](const CThostFtdcQryProductGroupField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcQryProductGroupField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("ExchangeID", [](const CThostFtdcQryProductGroupField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcQryProductGroupField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("ProductID", [](const CThostFtdcQryProductGroupField& a) {return encoding_cast(a.ProductID);}, [](CThostFtdcQryProductGroupField& a, char c[]) {strcpy(a.ProductID, c);})
		.def("to_dict", [](const CThostFtdcQryProductGroupField& a) {py::dict d; d["reserve1"] = encoding_cast(a.reserve1); d["ExchangeID"] = encoding_cast(a.ExchangeID); d["ProductID"] = encoding_cast(a.ProductID); return d;});

	py::class_<CThostFtdcProductGroupField>(m, "CThostFtdcProductGroupField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcProductGroupField& a) {return CThostFtdcProductGroupField(a);})
		.def_property("reserve1", [](const CThostFtdcProductGroupField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcProductGroupField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("ExchangeID", [](const CThostFtdcProductGroupField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcProductGroupField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("reserve2", [](const CThostFtdcProductGroupField& a) {return encoding_cast(a.reserve2);}, [](CThostFtdcProductGroupField& a, char c[]) {strcpy(a.reserve2, c);})
		.def_property("ProductID", [](const CThostFtdcProductGroupField& a) {return encoding_cast(a.ProductID);}, [](CThostFtdcProductGroupField& a, char c[]) {strcpy(a.ProductID, c);})
		.def_property("ProductGroupID", [](const CThostFtdcProductGroupField& a) {return encoding_cast(a.ProductGroupID);}, [](CThostFtdcProductGroupField& a, char c[]) {strcpy(a.ProductGroupID, c);})
		.def("to_dict", [](const CThostFtdcProductGroupField& a) {py::dict d; d["reserve1"] = encoding_cast(a.reserve1); d["ExchangeID"] = encoding_cast(a.ExchangeID); d["reserve2"] = encoding_cast(a.reserve2); d["ProductID"] = encoding_cast(a.ProductID); d["ProductGroupID"] = encoding_cast(a.ProductGroupID); return d;});

	py::class_<CThostFtdcBulletinField>(m, "CThostFtdcBulletinField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcBulletinField& a) {return CThostFtdcBulletinField(a);})
		.def_property("ExchangeID", [](const CThostFtdcBulletinField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcBulletinField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("TradingDay", [](const CThostFtdcBulletinField& a) {return encoding_cast(a.TradingDay);}, [](CThostFtdcBulletinField& a, char c[]) {strcpy(a.TradingDay, c);})
		.def_readwrite("BulletinID", &CThostFtdcBulletinField::BulletinID)
		.def_readwrite("SequenceNo", &CThostFtdcBulletinField::SequenceNo)
		.def_property("NewsType", [](const CThostFtdcBulletinField& a) {return encoding_cast(a.NewsType);}, [](CThostFtdcBulletinField& a, char c[]) {strcpy(a.NewsType, c);})
		.def_readwrite("NewsUrgency", &CThostFtdcBulletinField::NewsUrgency)
		.def_property("SendTime", [](const CThostFtdcBulletinField& a) {return encoding_cast(a.SendTime);}, [](CThostFtdcBulletinField& a, char c[]) {strcpy(a.SendTime, c);})
		.def_property("Abstract", [](const CThostFtdcBulletinField& a) {return encoding_cast(a.Abstract);}, [](CThostFtdcBulletinField& a, char c[]) {strcpy(a.Abstract, c);})
		.def_property("ComeFrom", [](const CThostFtdcBulletinField& a) {return encoding_cast(a.ComeFrom);}, [](CThostFtdcBulletinField& a, char c[]) {strcpy(a.ComeFrom, c);})
		.def_property("Content", [](const CThostFtdcBulletinField& a) {return encoding_cast(a.Content);}, [](CThostFtdcBulletinField& a, char c[]) {strcpy(a.Content, c);})
		.def_property("URLLink", [](const CThostFtdcBulletinField& a) {return encoding_cast(a.URLLink);}, [](CThostFtdcBulletinField& a, char c[]) {strcpy(a.URLLink, c);})
		.def_property("MarketID", [](const CThostFtdcBulletinField& a) {return encoding_cast(a.MarketID);}, [](CThostFtdcBulletinField& a, char c[]) {strcpy(a.MarketID, c);})
		.def("to_dict", [](const CThostFtdcBulletinField& a) {py::dict d; d["ExchangeID"] = encoding_cast(a.ExchangeID); d["TradingDay"] = encoding_cast(a.TradingDay); d["BulletinID"] = a.BulletinID; d["SequenceNo"] = a.SequenceNo; d["NewsType"] = encoding_cast(a.NewsType); d["NewsUrgency"] = a.NewsUrgency; d["SendTime"] = encoding_cast(a.SendTime); d["Abstract"] = encoding_cast(a.Abstract); d["ComeFrom"] = encoding_cast(a.ComeFrom); d["Content"] = encoding_cast(a.Content); d["URLLink"] = encoding_cast(a.URLLink); d["MarketID"] = encoding_cast(a.MarketID); return d;});

	py::class_<CThostFtdcQryBulletinField>(m, "CThostFtdcQryBulletinField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryBulletinField& a) {return CThostFtdcQryBulletinField(a);})
		.def_property("ExchangeID", [](const CThostFtdcQryBulletinField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcQryBulletinField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_readwrite("BulletinID", &CThostFtdcQryBulletinField::BulletinID)
		.def_readwrite("SequenceNo", &CThostFtdcQryBulletinField::SequenceNo)
		.def_property("NewsType", [](const CThostFtdcQryBulletinField& a) {return encoding_cast(a.NewsType);}, [](CThostFtdcQryBulletinField& a, char c[]) {strcpy(a.NewsType, c);})
		.def_readwrite("NewsUrgency", &CThostFtdcQryBulletinField::NewsUrgency)
		.def("to_dict", [](const CThostFtdcQryBulletinField& a) {py::dict d; d["ExchangeID"] = encoding_cast(a.ExchangeID); d["BulletinID"] = a.BulletinID; d["SequenceNo"] = a.SequenceNo; d["NewsType"] = encoding_cast(a.NewsType); d["NewsUrgency"] = a.NewsUrgency; return d;});

	py::class_<CThostFtdcMulticastInstrumentField>(m, "CThostFtdcMulticastInstrumentField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcMulticastInstrumentField& a) {return CThostFtdcMulticastInstrumentField(a);})
		.def_readwrite("TopicID", &CThostFtdcMulticastInstrumentField::TopicID)
		.def_property("reserve1", [](const CThostFtdcMulticastInstrumentField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcMulticastInstrumentField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_readwrite("InstrumentNo", &CThostFtdcMulticastInstrumentField::InstrumentNo)
		.def_readwrite("CodePrice", &CThostFtdcMulticastInstrumentField::CodePrice)
		.def_readwrite("VolumeMultiple", &CThostFtdcMulticastInstrumentField::VolumeMultiple)
		.def_readwrite("PriceTick", &CThostFtdcMulticastInstrumentField::PriceTick)
		.def_property("InstrumentID", [](const CThostFtdcMulticastInstrumentField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcMulticastInstrumentField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def("to_dict", [](const CThostFtdcMulticastInstrumentField& a) {py::dict d; d["TopicID"] = a.TopicID; d["reserve1"] = encoding_cast(a.reserve1); d["InstrumentNo"] = a.InstrumentNo; d["CodePrice"] = a.CodePrice; d["VolumeMultiple"] = a.VolumeMultiple; d["PriceTick"] = a.PriceTick; d["InstrumentID"] = encoding_cast(a.InstrumentID); return d;});

	py::class_<CThostFtdcQryMulticastInstrumentField>(m, "CThostFtdcQryMulticastInstrumentField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryMulticastInstrumentField& a) {return CThostFtdcQryMulticastInstrumentField(a);})
		.def_readwrite("TopicID", &CThostFtdcQryMulticastInstrumentField::TopicID)
		.def_property("reserve1", [](const CThostFtdcQryMulticastInstrumentField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcQryMulticastInstrumentField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("InstrumentID", [](const CThostFtdcQryMulticastInstrumentField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcQryMulticastInstrumentField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def("to_dict", [](const CThostFtdcQryMulticastInstrumentField& a) {py::dict d; d["TopicID"] = a.TopicID; d["reserve1"] = encoding_cast(a.reserve1); d["InstrumentID"] = encoding_cast(a.InstrumentID); return d;});

	py::class_<CThostFtdcAppIDAuthAssignField>(m, "CThostFtdcAppIDAuthAssignField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcAppIDAuthAssignField& a) {return CThostFtdcAppIDAuthAssignField(a);})
		.def_property("BrokerID", [](const CThostFtdcAppIDAuthAssignField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcAppIDAuthAssignField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("AppID", [](const CThostFtdcAppIDAuthAssignField& a) {return encoding_cast(a.AppID);}, [](CThostFtdcAppIDAuthAssignField& a, char c[]) {strcpy(a.AppID, c);})
		.def_readwrite("DRIdentityID", &CThostFtdcAppIDAuthAssignField::DRIdentityID)
		.def("to_dict", [](const CThostFtdcAppIDAuthAssignField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["AppID"] = encoding_cast(a.AppID); d["DRIdentityID"] = a.DRIdentityID; return d;});

	py::class_<CThostFtdcReqOpenAccountField>(m, "CThostFtdcReqOpenAccountField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcReqOpenAccountField& a) {return CThostFtdcReqOpenAccountField(a);})
		.def_property("TradeCode", [](const CThostFtdcReqOpenAccountField& a) {return encoding_cast(a.TradeCode);}, [](CThostFtdcReqOpenAccountField& a, char c[]) {strcpy(a.TradeCode, c);})
		.def_property("BankID", [](const CThostFtdcReqOpenAccountField& a) {return encoding_cast(a.BankID);}, [](CThostFtdcReqOpenAccountField& a, char c[]) {strcpy(a.BankID, c);})
		.def_property("BankBranchID", [](const CThostFtdcReqOpenAccountField& a) {return encoding_cast(a.BankBranchID);}, [](CThostFtdcReqOpenAccountField& a, char c[]) {strcpy(a.BankBranchID, c);})
		.def_property("BrokerID", [](const CThostFtdcReqOpenAccountField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcReqOpenAccountField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("BrokerBranchID", [](const CThostFtdcReqOpenAccountField& a) {return encoding_cast(a.BrokerBranchID);}, [](CThostFtdcReqOpenAccountField& a, char c[]) {strcpy(a.BrokerBranchID, c);})
		.def_property("TradeDate", [](const CThostFtdcReqOpenAccountField& a) {return encoding_cast(a.TradeDate);}, [](CThostFtdcReqOpenAccountField& a, char c[]) {strcpy(a.TradeDate, c);})
		.def_property("TradeTime", [](const CThostFtdcReqOpenAccountField& a) {return encoding_cast(a.TradeTime);}, [](CThostFtdcReqOpenAccountField& a, char c[]) {strcpy(a.TradeTime, c);})
		.def_property("BankSerial", [](const CThostFtdcReqOpenAccountField& a) {return encoding_cast(a.BankSerial);}, [](CThostFtdcReqOpenAccountField& a, char c[]) {strcpy(a.BankSerial, c);})
		.def_property("TradingDay", [](const CThostFtdcReqOpenAccountField& a) {return encoding_cast(a.TradingDay);}, [](CThostFtdcReqOpenAccountField& a, char c[]) {strcpy(a.TradingDay, c);})
		.def_readwrite("PlateSerial", &CThostFtdcReqOpenAccountField::PlateSerial)
		.def_readwrite("LastFragment", &CThostFtdcReqOpenAccountField::LastFragment)
		.def_readwrite("SessionID", &CThostFtdcReqOpenAccountField::SessionID)
		.def_property("CustomerName", [](const CThostFtdcReqOpenAccountField& a) {return encoding_cast(a.CustomerName);}, [](CThostFtdcReqOpenAccountField& a, char c[]) {strcpy(a.CustomerName, c);})
		.def_readwrite("IdCardType", &CThostFtdcReqOpenAccountField::IdCardType)
		.def_property("IdentifiedCardNo", [](const CThostFtdcReqOpenAccountField& a) {return encoding_cast(a.IdentifiedCardNo);}, [](CThostFtdcReqOpenAccountField& a, char c[]) {strcpy(a.IdentifiedCardNo, c);})
		.def_readwrite("Gender", &CThostFtdcReqOpenAccountField::Gender)
		.def_property("CountryCode", [](const CThostFtdcReqOpenAccountField& a) {return encoding_cast(a.CountryCode);}, [](CThostFtdcReqOpenAccountField& a, char c[]) {strcpy(a.CountryCode, c);})
		.def_readwrite("CustType", &CThostFtdcReqOpenAccountField::CustType)
		.def_property("Address", [](const CThostFtdcReqOpenAccountField& a) {return encoding_cast(a.Address);}, [](CThostFtdcReqOpenAccountField& a, char c[]) {strcpy(a.Address, c);})
		.def_property("ZipCode", [](const CThostFtdcReqOpenAccountField& a) {return encoding_cast(a.ZipCode);}, [](CThostFtdcReqOpenAccountField& a, char c[]) {strcpy(a.ZipCode, c);})
		.def_property("Telephone", [](const CThostFtdcReqOpenAccountField& a) {return encoding_cast(a.Telephone);}, [](CThostFtdcReqOpenAccountField& a, char c[]) {strcpy(a.Telephone, c);})
		.def_property("MobilePhone", [](const CThostFtdcReqOpenAccountField& a) {return encoding_cast(a.MobilePhone);}, [](CThostFtdcReqOpenAccountField& a, char c[]) {strcpy(a.MobilePhone, c);})
		.def_property("Fax", [](const CThostFtdcReqOpenAccountField& a) {return encoding_cast(a.Fax);}, [](CThostFtdcReqOpenAccountField& a, char c[]) {strcpy(a.Fax, c);})
		.def_property("EMail", [](const CThostFtdcReqOpenAccountField& a) {return encoding_cast(a.EMail);}, [](CThostFtdcReqOpenAccountField& a, char c[]) {strcpy(a.EMail, c);})
		.def_readwrite("MoneyAccountStatus", &CThostFtdcReqOpenAccountField::MoneyAccountStatus)
		.def_property("BankAccount", [](const CThostFtdcReqOpenAccountField& a) {return encoding_cast(a.BankAccount);}, [](CThostFtdcReqOpenAccountField& a, char c[]) {strcpy(a.BankAccount, c);})
		.def_property("BankPassWord", [](const CThostFtdcReqOpenAccountField& a) {return encoding_cast(a.BankPassWord);}, [](CThostFtdcReqOpenAccountField& a, char c[]) {strcpy(a.BankPassWord, c);})
		.def_property("AccountID", [](const CThostFtdcReqOpenAccountField& a) {return encoding_cast(a.AccountID);}, [](CThostFtdcReqOpenAccountField& a, char c[]) {strcpy(a.AccountID, c);})
		.def_property("Password", [](const CThostFtdcReqOpenAccountField& a) {return encoding_cast(a.Password);}, [](CThostFtdcReqOpenAccountField& a, char c[]) {strcpy(a.Password, c);})
		.def_readwrite("InstallID", &CThostFtdcReqOpenAccountField::InstallID)
		.def_readwrite("VerifyCertNoFlag", &CThostFtdcReqOpenAccountField::VerifyCertNoFlag)
		.def_property("CurrencyID", [](const CThostFtdcReqOpenAccountField& a) {return encoding_cast(a.CurrencyID);}, [](CThostFtdcReqOpenAccountField& a, char c[]) {strcpy(a.CurrencyID, c);})
		.def_readwrite("CashExchangeCode", &CThostFtdcReqOpenAccountField::CashExchangeCode)
		.def_property("Digest", [](const CThostFtdcReqOpenAccountField& a) {return encoding_cast(a.Digest);}, [](CThostFtdcReqOpenAccountField& a, char c[]) {strcpy(a.Digest, c);})
		.def_readwrite("BankAccType", &CThostFtdcReqOpenAccountField::BankAccType)
		.def_property("DeviceID", [](const CThostFtdcReqOpenAccountField& a) {return encoding_cast(a.DeviceID);}, [](CThostFtdcReqOpenAccountField& a, char c[]) {strcpy(a.DeviceID, c);})
		.def_readwrite("BankSecuAccType", &CThostFtdcReqOpenAccountField::BankSecuAccType)
		.def_property("BrokerIDByBank", [](const CThostFtdcReqOpenAccountField& a) {return encoding_cast(a.BrokerIDByBank);}, [](CThostFtdcReqOpenAccountField& a, char c[]) {strcpy(a.BrokerIDByBank, c);})
		.def_property("BankSecuAcc", [](const CThostFtdcReqOpenAccountField& a) {return encoding_cast(a.BankSecuAcc);}, [](CThostFtdcReqOpenAccountField& a, char c[]) {strcpy(a.BankSecuAcc, c);})
		.def_readwrite("BankPwdFlag", &CThostFtdcReqOpenAccountField::BankPwdFlag)
		.def_readwrite("SecuPwdFlag", &CThostFtdcReqOpenAccountField::SecuPwdFlag)
		.def_property("OperNo", [](const CThostFtdcReqOpenAccountField& a) {return encoding_cast(a.OperNo);}, [](CThostFtdcReqOpenAccountField& a, char c[]) {strcpy(a.OperNo, c);})
		.def_readwrite("TID", &CThostFtdcReqOpenAccountField::TID)
		.def_property("UserID", [](const CThostFtdcReqOpenAccountField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcReqOpenAccountField& a, char c[]) {strcpy(a.UserID, c);})
		.def_property("LongCustomerName", [](const CThostFtdcReqOpenAccountField& a) {return encoding_cast(a.LongCustomerName);}, [](CThostFtdcReqOpenAccountField& a, char c[]) {strcpy(a.LongCustomerName, c);})
		.def("to_dict", [](const CThostFtdcReqOpenAccountField& a) {py::dict d; d["TradeCode"] = encoding_cast(a.TradeCode); d["BankID"] = encoding_cast(a.BankID); d["BankBranchID"] = encoding_cast(a.BankBranchID); d["BrokerID"] = encoding_cast(a.BrokerID); d["BrokerBranchID"] = encoding_cast(a.BrokerBranchID); d["TradeDate"] = encoding_cast(a.TradeDate); d["TradeTime"] = encoding_cast(a.TradeTime); d["BankSerial"] = encoding_cast(a.BankSerial); d["TradingDay"] = encoding_cast(a.TradingDay); d["PlateSerial"] = a.PlateSerial; d["LastFragment"] = a.LastFragment; d["SessionID"] = a.SessionID; d["CustomerName"] = encoding_cast(a.CustomerName); d["IdCardType"] = a.IdCardType; d["IdentifiedCardNo"] = encoding_cast(a.IdentifiedCardNo); d["Gender"] = a.Gender; d["CountryCode"] = encoding_cast(a.CountryCode); d["CustType"] = a.CustType; d["Address"] = encoding_cast(a.Address); d["ZipCode"] = encoding_cast(a.ZipCode); d["Telephone"] = encoding_cast(a.Telephone); d["MobilePhone"] = encoding_cast(a.MobilePhone); d["Fax"] = encoding_cast(a.Fax); d["EMail"] = encoding_cast(a.EMail); d["MoneyAccountStatus"] = a.MoneyAccountStatus; d["BankAccount"] = encoding_cast(a.BankAccount); d["BankPassWord"] = encoding_cast(a.BankPassWord); d["AccountID"] = encoding_cast(a.AccountID); d["Password"] = encoding_cast(a.Password); d["InstallID"] = a.InstallID; d["VerifyCertNoFlag"] = a.VerifyCertNoFlag; d["CurrencyID"] = encoding_cast(a.CurrencyID); d["CashExchangeCode"] = a.CashExchangeCode; d["Digest"] = encoding_cast(a.Digest); d["BankAccType"] = a.BankAccType; d["DeviceID"] = encoding_cast(a.DeviceID); d["BankSecuAccType"] = a.BankSecuAccType; d["BrokerIDByBank"] = encoding_cast(a.BrokerIDByBank); d["BankSecuAcc"] = encoding_cast(a.BankSecuAcc); d["BankPwdFlag"] = a.BankPwdFlag; d["SecuPwdFlag"] = a.SecuPwdFlag; d["OperNo"] = encoding_cast(a.OperNo); d["TID"] = a.TID; d["UserID"] = encoding_cast(a.UserID); d["LongCustomerName"] = encoding_cast(a.LongCustomerName); return d;});

	py::class_<CThostFtdcReqCancelAccountField>(m, "CThostFtdcReqCancelAccountField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcReqCancelAccountField& a) {return CThostFtdcReqCancelAccountField(a);})
		.def_property("TradeCode", [](const CThostFtdcReqCancelAccountField& a) {return encoding_cast(a.TradeCode);}, [](CThostFtdcReqCancelAccountField& a, char c[]) {strcpy(a.TradeCode, c);})
		.def_property("BankID", [](const CThostFtdcReqCancelAccountField& a) {return encoding_cast(a.BankID);}, [](CThostFtdcReqCancelAccountField& a, char c[]) {strcpy(a.BankID, c);})
		.def_property("BankBranchID", [](const CThostFtdcReqCancelAccountField& a) {return encoding_cast(a.BankBranchID);}, [](CThostFtdcReqCancelAccountField& a, char c[]) {strcpy(a.BankBranchID, c);})
		.def_property("BrokerID", [](const CThostFtdcReqCancelAccountField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcReqCancelAccountField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("BrokerBranchID", [](const CThostFtdcReqCancelAccountField& a) {return encoding_cast(a.BrokerBranchID);}, [](CThostFtdcReqCancelAccountField& a, char c[]) {strcpy(a.BrokerBranchID, c);})
		.def_property("TradeDate", [](const CThostFtdcReqCancelAccountField& a) {return encoding_cast(a.TradeDate);}, [](CThostFtdcReqCancelAccountField& a, char c[]) {strcpy(a.TradeDate, c);})
		.def_property("TradeTime", [](const CThostFtdcReqCancelAccountField& a) {return encoding_cast(a.TradeTime);}, [](CThostFtdcReqCancelAccountField& a, char c[]) {strcpy(a.TradeTime, c);})
		.def_property("BankSerial", [](const CThostFtdcReqCancelAccountField& a) {return encoding_cast(a.BankSerial);}, [](CThostFtdcReqCancelAccountField& a, char c[]) {strcpy(a.BankSerial, c);})
		.def_property("TradingDay", [](const CThostFtdcReqCancelAccountField& a) {return encoding_cast(a.TradingDay);}, [](CThostFtdcReqCancelAccountField& a, char c[]) {strcpy(a.TradingDay, c);})
		.def_readwrite("PlateSerial", &CThostFtdcReqCancelAccountField::PlateSerial)
		.def_readwrite("LastFragment", &CThostFtdcReqCancelAccountField::LastFragment)
		.def_readwrite("SessionID", &CThostFtdcReqCancelAccountField::SessionID)
		.def_property("CustomerName", [](const CThostFtdcReqCancelAccountField& a) {return encoding_cast(a.CustomerName);}, [](CThostFtdcReqCancelAccountField& a, char c[]) {strcpy(a.CustomerName, c);})
		.def_readwrite("IdCardType", &CThostFtdcReqCancelAccountField::IdCardType)
		.def_property("IdentifiedCardNo", [](const CThostFtdcReqCancelAccountField& a) {return encoding_cast(a.IdentifiedCardNo);}, [](CThostFtdcReqCancelAccountField& a, char c[]) {strcpy(a.IdentifiedCardNo, c);})
		.def_readwrite("Gender", &CThostFtdcReqCancelAccountField::Gender)
		.def_property("CountryCode", [](const CThostFtdcReqCancelAccountField& a) {return encoding_cast(a.CountryCode);}, [](CThostFtdcReqCancelAccountField& a, char c[]) {strcpy(a.CountryCode, c);})
		.def_readwrite("CustType", &CThostFtdcReqCancelAccountField::CustType)
		.def_property("Address", [](const CThostFtdcReqCancelAccountField& a) {return encoding_cast(a.Address);}, [](CThostFtdcReqCancelAccountField& a, char c[]) {strcpy(a.Address, c);})
		.def_property("ZipCode", [](const CThostFtdcReqCancelAccountField& a) {return encoding_cast(a.ZipCode);}, [](CThostFtdcReqCancelAccountField& a, char c[]) {strcpy(a.ZipCode, c);})
		.def_property("Telephone", [](const CThostFtdcReqCancelAccountField& a) {return encoding_cast(a.Telephone);}, [](CThostFtdcReqCancelAccountField& a, char c[]) {strcpy(a.Telephone, c);})
		.def_property("MobilePhone", [](const CThostFtdcReqCancelAccountField& a) {return encoding_cast(a.MobilePhone);}, [](CThostFtdcReqCancelAccountField& a, char c[]) {strcpy(a.MobilePhone, c);})
		.def_property("Fax", [](const CThostFtdcReqCancelAccountField& a) {return encoding_cast(a.Fax);}, [](CThostFtdcReqCancelAccountField& a, char c[]) {strcpy(a.Fax, c);})
		.def_property("EMail", [](const CThostFtdcReqCancelAccountField& a) {return encoding_cast(a.EMail);}, [](CThostFtdcReqCancelAccountField& a, char c[]) {strcpy(a.EMail, c);})
		.def_readwrite("MoneyAccountStatus", &CThostFtdcReqCancelAccountField::MoneyAccountStatus)
		.def_property("BankAccount", [](const CThostFtdcReqCancelAccountField& a) {return encoding_cast(a.BankAccount);}, [](CThostFtdcReqCancelAccountField& a, char c[]) {strcpy(a.BankAccount, c);})
		.def_property("BankPassWord", [](const CThostFtdcReqCancelAccountField& a) {return encoding_cast(a.BankPassWord);}, [](CThostFtdcReqCancelAccountField& a, char c[]) {strcpy(a.BankPassWord, c);})
		.def_property("AccountID", [](const CThostFtdcReqCancelAccountField& a) {return encoding_cast(a.AccountID);}, [](CThostFtdcReqCancelAccountField& a, char c[]) {strcpy(a.AccountID, c);})
		.def_property("Password", [](const CThostFtdcReqCancelAccountField& a) {return encoding_cast(a.Password);}, [](CThostFtdcReqCancelAccountField& a, char c[]) {strcpy(a.Password, c);})
		.def_readwrite("InstallID", &CThostFtdcReqCancelAccountField::InstallID)
		.def_readwrite("VerifyCertNoFlag", &CThostFtdcReqCancelAccountField::VerifyCertNoFlag)
		.def_property("CurrencyID", [](const CThostFtdcReqCancelAccountField& a) {return encoding_cast(a.CurrencyID);}, [](CThostFtdcReqCancelAccountField& a, char c[]) {strcpy(a.CurrencyID, c);})
		.def_readwrite("CashExchangeCode", &CThostFtdcReqCancelAccountField::CashExchangeCode)
		.def_property("Digest", [](const CThostFtdcReqCancelAccountField& a) {return encoding_cast(a.Digest);}, [](CThostFtdcReqCancelAccountField& a, char c[]) {strcpy(a.Digest, c);})
		.def_readwrite("BankAccType", &CThostFtdcReqCancelAccountField::BankAccType)
		.def_property("DeviceID", [](const CThostFtdcReqCancelAccountField& a) {return encoding_cast(a.DeviceID);}, [](CThostFtdcReqCancelAccountField& a, char c[]) {strcpy(a.DeviceID, c);})
		.def_readwrite("BankSecuAccType", &CThostFtdcReqCancelAccountField::BankSecuAccType)
		.def_property("BrokerIDByBank", [](const CThostFtdcReqCancelAccountField& a) {return encoding_cast(a.BrokerIDByBank);}, [](CThostFtdcReqCancelAccountField& a, char c[]) {strcpy(a.BrokerIDByBank, c);})
		.def_property("BankSecuAcc", [](const CThostFtdcReqCancelAccountField& a) {return encoding_cast(a.BankSecuAcc);}, [](CThostFtdcReqCancelAccountField& a, char c[]) {strcpy(a.BankSecuAcc, c);})
		.def_readwrite("BankPwdFlag", &CThostFtdcReqCancelAccountField::BankPwdFlag)
		.def_readwrite("SecuPwdFlag", &CThostFtdcReqCancelAccountField::SecuPwdFlag)
		.def_property("OperNo", [](const CThostFtdcReqCancelAccountField& a) {return encoding_cast(a.OperNo);}, [](CThostFtdcReqCancelAccountField& a, char c[]) {strcpy(a.OperNo, c);})
		.def_readwrite("TID", &CThostFtdcReqCancelAccountField::TID)
		.def_property("UserID", [](const CThostFtdcReqCancelAccountField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcReqCancelAccountField& a, char c[]) {strcpy(a.UserID, c);})
		.def_property("LongCustomerName", [](const CThostFtdcReqCancelAccountField& a) {return encoding_cast(a.LongCustomerName);}, [](CThostFtdcReqCancelAccountField& a, char c[]) {strcpy(a.LongCustomerName, c);})
		.def("to_dict", [](const CThostFtdcReqCancelAccountField& a) {py::dict d; d["TradeCode"] = encoding_cast(a.TradeCode); d["BankID"] = encoding_cast(a.BankID); d["BankBranchID"] = encoding_cast(a.BankBranchID); d["BrokerID"] = encoding_cast(a.BrokerID); d["BrokerBranchID"] = encoding_cast(a.BrokerBranchID); d["TradeDate"] = encoding_cast(a.TradeDate); d["TradeTime"] = encoding_cast(a.TradeTime); d["BankSerial"] = encoding_cast(a.BankSerial); d["TradingDay"] = encoding_cast(a.TradingDay); d["PlateSerial"] = a.PlateSerial; d["LastFragment"] = a.LastFragment; d["SessionID"] = a.SessionID; d["CustomerName"] = encoding_cast(a.CustomerName); d["IdCardType"] = a.IdCardType; d["IdentifiedCardNo"] = encoding_cast(a.IdentifiedCardNo); d["Gender"] = a.Gender; d["CountryCode"] = encoding_cast(a.CountryCode); d["CustType"] = a.CustType; d["Address"] = encoding_cast(a.Address); d["ZipCode"] = encoding_cast(a.ZipCode); d["Telephone"] = encoding_cast(a.Telephone); d["MobilePhone"] = encoding_cast(a.MobilePhone); d["Fax"] = encoding_cast(a.Fax); d["EMail"] = encoding_cast(a.EMail); d["MoneyAccountStatus"] = a.MoneyAccountStatus; d["BankAccount"] = encoding_cast(a.BankAccount); d["BankPassWord"] = encoding_cast(a.BankPassWord); d["AccountID"] = encoding_cast(a.AccountID); d["Password"] = encoding_cast(a.Password); d["InstallID"] = a.InstallID; d["VerifyCertNoFlag"] = a.VerifyCertNoFlag; d["CurrencyID"] = encoding_cast(a.CurrencyID); d["CashExchangeCode"] = a.CashExchangeCode; d["Digest"] = encoding_cast(a.Digest); d["BankAccType"] = a.BankAccType; d["DeviceID"] = encoding_cast(a.DeviceID); d["BankSecuAccType"] = a.BankSecuAccType; d["BrokerIDByBank"] = encoding_cast(a.BrokerIDByBank); d["BankSecuAcc"] = encoding_cast(a.BankSecuAcc); d["BankPwdFlag"] = a.BankPwdFlag; d["SecuPwdFlag"] = a.SecuPwdFlag; d["OperNo"] = encoding_cast(a.OperNo); d["TID"] = a.TID; d["UserID"] = encoding_cast(a.UserID); d["LongCustomerName"] = encoding_cast(a.LongCustomerName); return d;});

	py::class_<CThostFtdcReqChangeAccountField>(m, "CThostFtdcReqChangeAccountField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcReqChangeAccountField& a) {return CThostFtdcReqChangeAccountField(a);})
		.def_property("TradeCode", [](const CThostFtdcReqChangeAccountField& a) {return encoding_cast(a.TradeCode);}, [](CThostFtdcReqChangeAccountField& a, char c[]) {strcpy(a.TradeCode, c);})
		.def_property("BankID", [](const CThostFtdcReqChangeAccountField& a) {return encoding_cast(a.BankID);}, [](CThostFtdcReqChangeAccountField& a, char c[]) {strcpy(a.BankID, c);})
		.def_property("BankBranchID", [](const CThostFtdcReqChangeAccountField& a) {return encoding_cast(a.BankBranchID);}, [](CThostFtdcReqChangeAccountField& a, char c[]) {strcpy(a.BankBranchID, c);})
		.def_property("BrokerID", [](const CThostFtdcReqChangeAccountField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcReqChangeAccountField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("BrokerBranchID", [](const CThostFtdcReqChangeAccountField& a) {return encoding_cast(a.BrokerBranchID);}, [](CThostFtdcReqChangeAccountField& a, char c[]) {strcpy(a.BrokerBranchID, c);})
		.def_property("TradeDate", [](const CThostFtdcReqChangeAccountField& a) {return encoding_cast(a.TradeDate);}, [](CThostFtdcReqChangeAccountField& a, char c[]) {strcpy(a.TradeDate, c);})
		.def_property("TradeTime", [](const CThostFtdcReqChangeAccountField& a) {return encoding_cast(a.TradeTime);}, [](CThostFtdcReqChangeAccountField& a, char c[]) {strcpy(a.TradeTime, c);})
		.def_property("BankSerial", [](const CThostFtdcReqChangeAccountField& a) {return encoding_cast(a.BankSerial);}, [](CThostFtdcReqChangeAccountField& a, char c[]) {strcpy(a.BankSerial, c);})
		.def_property("TradingDay", [](const CThostFtdcReqChangeAccountField& a) {return encoding_cast(a.TradingDay);}, [](CThostFtdcReqChangeAccountField& a, char c[]) {strcpy(a.TradingDay, c);})
		.def_readwrite("PlateSerial", &CThostFtdcReqChangeAccountField::PlateSerial)
		.def_readwrite("LastFragment", &CThostFtdcReqChangeAccountField::LastFragment)
		.def_readwrite("SessionID", &CThostFtdcReqChangeAccountField::SessionID)
		.def_property("CustomerName", [](const CThostFtdcReqChangeAccountField& a) {return encoding_cast(a.CustomerName);}, [](CThostFtdcReqChangeAccountField& a, char c[]) {strcpy(a.CustomerName, c);})
		.def_readwrite("IdCardType", &CThostFtdcReqChangeAccountField::IdCardType)
		.def_property("IdentifiedCardNo", [](const CThostFtdcReqChangeAccountField& a) {return encoding_cast(a.IdentifiedCardNo);}, [](CThostFtdcReqChangeAccountField& a, char c[]) {strcpy(a.IdentifiedCardNo, c);})
		.def_readwrite("Gender", &CThostFtdcReqChangeAccountField::Gender)
		.def_property("CountryCode", [](const CThostFtdcReqChangeAccountField& a) {return encoding_cast(a.CountryCode);}, [](CThostFtdcReqChangeAccountField& a, char c[]) {strcpy(a.CountryCode, c);})
		.def_readwrite("CustType", &CThostFtdcReqChangeAccountField::CustType)
		.def_property("Address", [](const CThostFtdcReqChangeAccountField& a) {return encoding_cast(a.Address);}, [](CThostFtdcReqChangeAccountField& a, char c[]) {strcpy(a.Address, c);})
		.def_property("ZipCode", [](const CThostFtdcReqChangeAccountField& a) {return encoding_cast(a.ZipCode);}, [](CThostFtdcReqChangeAccountField& a, char c[]) {strcpy(a.ZipCode, c);})
		.def_property("Telephone", [](const CThostFtdcReqChangeAccountField& a) {return encoding_cast(a.Telephone);}, [](CThostFtdcReqChangeAccountField& a, char c[]) {strcpy(a.Telephone, c);})
		.def_property("MobilePhone", [](const CThostFtdcReqChangeAccountField& a) {return encoding_cast(a.MobilePhone);}, [](CThostFtdcReqChangeAccountField& a, char c[]) {strcpy(a.MobilePhone, c);})
		.def_property("Fax", [](const CThostFtdcReqChangeAccountField& a) {return encoding_cast(a.Fax);}, [](CThostFtdcReqChangeAccountField& a, char c[]) {strcpy(a.Fax, c);})
		.def_property("EMail", [](const CThostFtdcReqChangeAccountField& a) {return encoding_cast(a.EMail);}, [](CThostFtdcReqChangeAccountField& a, char c[]) {strcpy(a.EMail, c);})
		.def_readwrite("MoneyAccountStatus", &CThostFtdcReqChangeAccountField::MoneyAccountStatus)
		.def_property("BankAccount", [](const CThostFtdcReqChangeAccountField& a) {return encoding_cast(a.BankAccount);}, [](CThostFtdcReqChangeAccountField& a, char c[]) {strcpy(a.BankAccount, c);})
		.def_property("BankPassWord", [](const CThostFtdcReqChangeAccountField& a) {return encoding_cast(a.BankPassWord);}, [](CThostFtdcReqChangeAccountField& a, char c[]) {strcpy(a.BankPassWord, c);})
		.def_property("NewBankAccount", [](const CThostFtdcReqChangeAccountField& a) {return encoding_cast(a.NewBankAccount);}, [](CThostFtdcReqChangeAccountField& a, char c[]) {strcpy(a.NewBankAccount, c);})
		.def_property("NewBankPassWord", [](const CThostFtdcReqChangeAccountField& a) {return encoding_cast(a.NewBankPassWord);}, [](CThostFtdcReqChangeAccountField& a, char c[]) {strcpy(a.NewBankPassWord, c);})
		.def_property("AccountID", [](const CThostFtdcReqChangeAccountField& a) {return encoding_cast(a.AccountID);}, [](CThostFtdcReqChangeAccountField& a, char c[]) {strcpy(a.AccountID, c);})
		.def_property("Password", [](const CThostFtdcReqChangeAccountField& a) {return encoding_cast(a.Password);}, [](CThostFtdcReqChangeAccountField& a, char c[]) {strcpy(a.Password, c);})
		.def_readwrite("BankAccType", &CThostFtdcReqChangeAccountField::BankAccType)
		.def_readwrite("InstallID", &CThostFtdcReqChangeAccountField::InstallID)
		.def_readwrite("VerifyCertNoFlag", &CThostFtdcReqChangeAccountField::VerifyCertNoFlag)
		.def_property("CurrencyID", [](const CThostFtdcReqChangeAccountField& a) {return encoding_cast(a.CurrencyID);}, [](CThostFtdcReqChangeAccountField& a, char c[]) {strcpy(a.CurrencyID, c);})
		.def_property("BrokerIDByBank", [](const CThostFtdcReqChangeAccountField& a) {return encoding_cast(a.BrokerIDByBank);}, [](CThostFtdcReqChangeAccountField& a, char c[]) {strcpy(a.BrokerIDByBank, c);})
		.def_readwrite("BankPwdFlag", &CThostFtdcReqChangeAccountField::BankPwdFlag)
		.def_readwrite("SecuPwdFlag", &CThostFtdcReqChangeAccountField::SecuPwdFlag)
		.def_readwrite("TID", &CThostFtdcReqChangeAccountField::TID)
		.def_property("Digest", [](const CThostFtdcReqChangeAccountField& a) {return encoding_cast(a.Digest);}, [](CThostFtdcReqChangeAccountField& a, char c[]) {strcpy(a.Digest, c);})
		.def_property("LongCustomerName", [](const CThostFtdcReqChangeAccountField& a) {return encoding_cast(a.LongCustomerName);}, [](CThostFtdcReqChangeAccountField& a, char c[]) {strcpy(a.LongCustomerName, c);})
		.def("to_dict", [](const CThostFtdcReqChangeAccountField& a) {py::dict d; d["TradeCode"] = encoding_cast(a.TradeCode); d["BankID"] = encoding_cast(a.BankID); d["BankBranchID"] = encoding_cast(a.BankBranchID); d["BrokerID"] = encoding_cast(a.BrokerID); d["BrokerBranchID"] = encoding_cast(a.BrokerBranchID); d["TradeDate"] = encoding_cast(a.TradeDate); d["TradeTime"] = encoding_cast(a.TradeTime); d["BankSerial"] = encoding_cast(a.BankSerial); d["TradingDay"] = encoding_cast(a.TradingDay); d["PlateSerial"] = a.PlateSerial; d["LastFragment"] = a.LastFragment; d["SessionID"] = a.SessionID; d["CustomerName"] = encoding_cast(a.CustomerName); d["IdCardType"] = a.IdCardType; d["IdentifiedCardNo"] = encoding_cast(a.IdentifiedCardNo); d["Gender"] = a.Gender; d["CountryCode"] = encoding_cast(a.CountryCode); d["CustType"] = a.CustType; d["Address"] = encoding_cast(a.Address); d["ZipCode"] = encoding_cast(a.ZipCode); d["Telephone"] = encoding_cast(a.Telephone); d["MobilePhone"] = encoding_cast(a.MobilePhone); d["Fax"] = encoding_cast(a.Fax); d["EMail"] = encoding_cast(a.EMail); d["MoneyAccountStatus"] = a.MoneyAccountStatus; d["BankAccount"] = encoding_cast(a.BankAccount); d["BankPassWord"] = encoding_cast(a.BankPassWord); d["NewBankAccount"] = encoding_cast(a.NewBankAccount); d["NewBankPassWord"] = encoding_cast(a.NewBankPassWord); d["AccountID"] = encoding_cast(a.AccountID); d["Password"] = encoding_cast(a.Password); d["BankAccType"] = a.BankAccType; d["InstallID"] = a.InstallID; d["VerifyCertNoFlag"] = a.VerifyCertNoFlag; d["CurrencyID"] = encoding_cast(a.CurrencyID); d["BrokerIDByBank"] = encoding_cast(a.BrokerIDByBank); d["BankPwdFlag"] = a.BankPwdFlag; d["SecuPwdFlag"] = a.SecuPwdFlag; d["TID"] = a.TID; d["Digest"] = encoding_cast(a.Digest); d["LongCustomerName"] = encoding_cast(a.LongCustomerName); return d;});

	py::class_<CThostFtdcReqTransferField>(m, "CThostFtdcReqTransferField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcReqTransferField& a) {return CThostFtdcReqTransferField(a);})
		.def_property("TradeCode", [](const CThostFtdcReqTransferField& a) {return encoding_cast(a.TradeCode);}, [](CThostFtdcReqTransferField& a, char c[]) {strcpy(a.TradeCode, c);})
		.def_property("BankID", [](const CThostFtdcReqTransferField& a) {return encoding_cast(a.BankID);}, [](CThostFtdcReqTransferField& a, char c[]) {strcpy(a.BankID, c);})
		.def_property("BankBranchID", [](const CThostFtdcReqTransferField& a) {return encoding_cast(a.BankBranchID);}, [](CThostFtdcReqTransferField& a, char c[]) {strcpy(a.BankBranchID, c);})
		.def_property("BrokerID", [](const CThostFtdcReqTransferField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcReqTransferField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("BrokerBranchID", [](const CThostFtdcReqTransferField& a) {return encoding_cast(a.BrokerBranchID);}, [](CThostFtdcReqTransferField& a, char c[]) {strcpy(a.BrokerBranchID, c);})
		.def_property("TradeDate", [](const CThostFtdcReqTransferField& a) {return encoding_cast(a.TradeDate);}, [](CThostFtdcReqTransferField& a, char c[]) {strcpy(a.TradeDate, c);})
		.def_property("TradeTime", [](const CThostFtdcReqTransferField& a) {return encoding_cast(a.TradeTime);}, [](CThostFtdcReqTransferField& a, char c[]) {strcpy(a.TradeTime, c);})
		.def_property("BankSerial", [](const CThostFtdcReqTransferField& a) {return encoding_cast(a.BankSerial);}, [](CThostFtdcReqTransferField& a, char c[]) {strcpy(a.BankSerial, c);})
		.def_property("TradingDay", [](const CThostFtdcReqTransferField& a) {return encoding_cast(a.TradingDay);}, [](CThostFtdcReqTransferField& a, char c[]) {strcpy(a.TradingDay, c);})
		.def_readwrite("PlateSerial", &CThostFtdcReqTransferField::PlateSerial)
		.def_readwrite("LastFragment", &CThostFtdcReqTransferField::LastFragment)
		.def_readwrite("SessionID", &CThostFtdcReqTransferField::SessionID)
		.def_property("CustomerName", [](const CThostFtdcReqTransferField& a) {return encoding_cast(a.CustomerName);}, [](CThostFtdcReqTransferField& a, char c[]) {strcpy(a.CustomerName, c);})
		.def_readwrite("IdCardType", &CThostFtdcReqTransferField::IdCardType)
		.def_property("IdentifiedCardNo", [](const CThostFtdcReqTransferField& a) {return encoding_cast(a.IdentifiedCardNo);}, [](CThostFtdcReqTransferField& a, char c[]) {strcpy(a.IdentifiedCardNo, c);})
		.def_readwrite("CustType", &CThostFtdcReqTransferField::CustType)
		.def_property("BankAccount", [](const CThostFtdcReqTransferField& a) {return encoding_cast(a.BankAccount);}, [](CThostFtdcReqTransferField& a, char c[]) {strcpy(a.BankAccount, c);})
		.def_property("BankPassWord", [](const CThostFtdcReqTransferField& a) {return encoding_cast(a.BankPassWord);}, [](CThostFtdcReqTransferField& a, char c[]) {strcpy(a.BankPassWord, c);})
		.def_property("AccountID", [](const CThostFtdcReqTransferField& a) {return encoding_cast(a.AccountID);}, [](CThostFtdcReqTransferField& a, char c[]) {strcpy(a.AccountID, c);})
		.def_property("Password", [](const CThostFtdcReqTransferField& a) {return encoding_cast(a.Password);}, [](CThostFtdcReqTransferField& a, char c[]) {strcpy(a.Password, c);})
		.def_readwrite("InstallID", &CThostFtdcReqTransferField::InstallID)
		.def_readwrite("FutureSerial", &CThostFtdcReqTransferField::FutureSerial)
		.def_property("UserID", [](const CThostFtdcReqTransferField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcReqTransferField& a, char c[]) {strcpy(a.UserID, c);})
		.def_readwrite("VerifyCertNoFlag", &CThostFtdcReqTransferField::VerifyCertNoFlag)
		.def_property("CurrencyID", [](const CThostFtdcReqTransferField& a) {return encoding_cast(a.CurrencyID);}, [](CThostFtdcReqTransferField& a, char c[]) {strcpy(a.CurrencyID, c);})
		.def_readwrite("TradeAmount", &CThostFtdcReqTransferField::TradeAmount)
		.def_readwrite("FutureFetchAmount", &CThostFtdcReqTransferField::FutureFetchAmount)
		.def_readwrite("FeePayFlag", &CThostFtdcReqTransferField::FeePayFlag)
		.def_readwrite("CustFee", &CThostFtdcReqTransferField::CustFee)
		.def_readwrite("BrokerFee", &CThostFtdcReqTransferField::BrokerFee)
		.def_property("Message", [](const CThostFtdcReqTransferField& a) {return encoding_cast(a.Message);}, [](CThostFtdcReqTransferField& a, char c[]) {strcpy(a.Message, c);})
		.def_property("Digest", [](const CThostFtdcReqTransferField& a) {return encoding_cast(a.Digest);}, [](CThostFtdcReqTransferField& a, char c[]) {strcpy(a.Digest, c);})
		.def_readwrite("BankAccType", &CThostFtdcReqTransferField::BankAccType)
		.def_property("DeviceID", [](const CThostFtdcReqTransferField& a) {return encoding_cast(a.DeviceID);}, [](CThostFtdcReqTransferField& a, char c[]) {strcpy(a.DeviceID, c);})
		.def_readwrite("BankSecuAccType", &CThostFtdcReqTransferField::BankSecuAccType)
		.def_property("BrokerIDByBank", [](const CThostFtdcReqTransferField& a) {return encoding_cast(a.BrokerIDByBank);}, [](CThostFtdcReqTransferField& a, char c[]) {strcpy(a.BrokerIDByBank, c);})
		.def_property("BankSecuAcc", [](const CThostFtdcReqTransferField& a) {return encoding_cast(a.BankSecuAcc);}, [](CThostFtdcReqTransferField& a, char c[]) {strcpy(a.BankSecuAcc, c);})
		.def_readwrite("BankPwdFlag", &CThostFtdcReqTransferField::BankPwdFlag)
		.def_readwrite("SecuPwdFlag", &CThostFtdcReqTransferField::SecuPwdFlag)
		.def_property("OperNo", [](const CThostFtdcReqTransferField& a) {return encoding_cast(a.OperNo);}, [](CThostFtdcReqTransferField& a, char c[]) {strcpy(a.OperNo, c);})
		.def_readwrite("RequestID", &CThostFtdcReqTransferField::RequestID)
		.def_readwrite("TID", &CThostFtdcReqTransferField::TID)
		.def_readwrite("TransferStatus", &CThostFtdcReqTransferField::TransferStatus)
		.def_property("LongCustomerName", [](const CThostFtdcReqTransferField& a) {return encoding_cast(a.LongCustomerName);}, [](CThostFtdcReqTransferField& a, char c[]) {strcpy(a.LongCustomerName, c);})
		.def("to_dict", [](const CThostFtdcReqTransferField& a) {py::dict d; d["TradeCode"] = encoding_cast(a.TradeCode); d["BankID"] = encoding_cast(a.BankID); d["BankBranchID"] = encoding_cast(a.BankBranchID); d["BrokerID"] = encoding_cast(a.BrokerID); d["BrokerBranchID"] = encoding_cast(a.BrokerBranchID); d["TradeDate"] = encoding_cast(a.TradeDate); d["TradeTime"] = encoding_cast(a.TradeTime); d["BankSerial"] = encoding_cast(a.BankSerial); d["TradingDay"] = encoding_cast(a.TradingDay); d["PlateSerial"] = a.PlateSerial; d["LastFragment"] = a.LastFragment; d["SessionID"] = a.SessionID; d["CustomerName"] = encoding_cast(a.CustomerName); d["IdCardType"] = a.IdCardType; d["IdentifiedCardNo"] = encoding_cast(a.IdentifiedCardNo); d["CustType"] = a.CustType; d["BankAccount"] = encoding_cast(a.BankAccount); d["BankPassWord"] = encoding_cast(a.BankPassWord); d["AccountID"] = encoding_cast(a.AccountID); d["Password"] = encoding_cast(a.Password); d["InstallID"] = a.InstallID; d["FutureSerial"] = a.FutureSerial; d["UserID"] = encoding_cast(a.UserID); d["VerifyCertNoFlag"] = a.VerifyCertNoFlag; d["CurrencyID"] = encoding_cast(a.CurrencyID); d["TradeAmount"] = a.TradeAmount; d["FutureFetchAmount"] = a.FutureFetchAmount; d["FeePayFlag"] = a.FeePayFlag; d["CustFee"] = a.CustFee; d["BrokerFee"] = a.BrokerFee; d["Message"] = encoding_cast(a.Message); d["Digest"] = encoding_cast(a.Digest); d["BankAccType"] = a.BankAccType; d["DeviceID"] = encoding_cast(a.DeviceID); d["BankSecuAccType"] = a.BankSecuAccType; d["BrokerIDByBank"] = encoding_cast(a.BrokerIDByBank); d["BankSecuAcc"] = encoding_cast(a.BankSecuAcc); d["BankPwdFlag"] = a.BankPwdFlag; d["SecuPwdFlag"] = a.SecuPwdFlag; d["OperNo"] = encoding_cast(a.OperNo); d["RequestID"] = a.RequestID; d["TID"] = a.TID; d["TransferStatus"] = a.TransferStatus; d["LongCustomerName"] = encoding_cast(a.LongCustomerName); return d;});

	py::class_<CThostFtdcRspTransferField>(m, "CThostFtdcRspTransferField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcRspTransferField& a) {return CThostFtdcRspTransferField(a);})
		.def_property("TradeCode", [](const CThostFtdcRspTransferField& a) {return encoding_cast(a.TradeCode);}, [](CThostFtdcRspTransferField& a, char c[]) {strcpy(a.TradeCode, c);})
		.def_property("BankID", [](const CThostFtdcRspTransferField& a) {return encoding_cast(a.BankID);}, [](CThostFtdcRspTransferField& a, char c[]) {strcpy(a.BankID, c);})
		.def_property("BankBranchID", [](const CThostFtdcRspTransferField& a) {return encoding_cast(a.BankBranchID);}, [](CThostFtdcRspTransferField& a, char c[]) {strcpy(a.BankBranchID, c);})
		.def_property("BrokerID", [](const CThostFtdcRspTransferField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcRspTransferField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("BrokerBranchID", [](const CThostFtdcRspTransferField& a) {return encoding_cast(a.BrokerBranchID);}, [](CThostFtdcRspTransferField& a, char c[]) {strcpy(a.BrokerBranchID, c);})
		.def_property("TradeDate", [](const CThostFtdcRspTransferField& a) {return encoding_cast(a.TradeDate);}, [](CThostFtdcRspTransferField& a, char c[]) {strcpy(a.TradeDate, c);})
		.def_property("TradeTime", [](const CThostFtdcRspTransferField& a) {return encoding_cast(a.TradeTime);}, [](CThostFtdcRspTransferField& a, char c[]) {strcpy(a.TradeTime, c);})
		.def_property("BankSerial", [](const CThostFtdcRspTransferField& a) {return encoding_cast(a.BankSerial);}, [](CThostFtdcRspTransferField& a, char c[]) {strcpy(a.BankSerial, c);})
		.def_property("TradingDay", [](const CThostFtdcRspTransferField& a) {return encoding_cast(a.TradingDay);}, [](CThostFtdcRspTransferField& a, char c[]) {strcpy(a.TradingDay, c);})
		.def_readwrite("PlateSerial", &CThostFtdcRspTransferField::PlateSerial)
		.def_readwrite("LastFragment", &CThostFtdcRspTransferField::LastFragment)
		.def_readwrite("SessionID", &CThostFtdcRspTransferField::SessionID)
		.def_property("CustomerName", [](const CThostFtdcRspTransferField& a) {return encoding_cast(a.CustomerName);}, [](CThostFtdcRspTransferField& a, char c[]) {strcpy(a.CustomerName, c);})
		.def_readwrite("IdCardType", &CThostFtdcRspTransferField::IdCardType)
		.def_property("IdentifiedCardNo", [](const CThostFtdcRspTransferField& a) {return encoding_cast(a.IdentifiedCardNo);}, [](CThostFtdcRspTransferField& a, char c[]) {strcpy(a.IdentifiedCardNo, c);})
		.def_readwrite("CustType", &CThostFtdcRspTransferField::CustType)
		.def_property("BankAccount", [](const CThostFtdcRspTransferField& a) {return encoding_cast(a.BankAccount);}, [](CThostFtdcRspTransferField& a, char c[]) {strcpy(a.BankAccount, c);})
		.def_property("BankPassWord", [](const CThostFtdcRspTransferField& a) {return encoding_cast(a.BankPassWord);}, [](CThostFtdcRspTransferField& a, char c[]) {strcpy(a.BankPassWord, c);})
		.def_property("AccountID", [](const CThostFtdcRspTransferField& a) {return encoding_cast(a.AccountID);}, [](CThostFtdcRspTransferField& a, char c[]) {strcpy(a.AccountID, c);})
		.def_property("Password", [](const CThostFtdcRspTransferField& a) {return encoding_cast(a.Password);}, [](CThostFtdcRspTransferField& a, char c[]) {strcpy(a.Password, c);})
		.def_readwrite("InstallID", &CThostFtdcRspTransferField::InstallID)
		.def_readwrite("FutureSerial", &CThostFtdcRspTransferField::FutureSerial)
		.def_property("UserID", [](const CThostFtdcRspTransferField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcRspTransferField& a, char c[]) {strcpy(a.UserID, c);})
		.def_readwrite("VerifyCertNoFlag", &CThostFtdcRspTransferField::VerifyCertNoFlag)
		.def_property("CurrencyID", [](const CThostFtdcRspTransferField& a) {return encoding_cast(a.CurrencyID);}, [](CThostFtdcRspTransferField& a, char c[]) {strcpy(a.CurrencyID, c);})
		.def_readwrite("TradeAmount", &CThostFtdcRspTransferField::TradeAmount)
		.def_readwrite("FutureFetchAmount", &CThostFtdcRspTransferField::FutureFetchAmount)
		.def_readwrite("FeePayFlag", &CThostFtdcRspTransferField::FeePayFlag)
		.def_readwrite("CustFee", &CThostFtdcRspTransferField::CustFee)
		.def_readwrite("BrokerFee", &CThostFtdcRspTransferField::BrokerFee)
		.def_property("Message", [](const CThostFtdcRspTransferField& a) {return encoding_cast(a.Message);}, [](CThostFtdcRspTransferField& a, char c[]) {strcpy(a.Message, c);})
		.def_property("Digest", [](const CThostFtdcRspTransferField& a) {return encoding_cast(a.Digest);}, [](CThostFtdcRspTransferField& a, char c[]) {strcpy(a.Digest, c);})
		.def_readwrite("BankAccType", &CThostFtdcRspTransferField::BankAccType)
		.def_property("DeviceID", [](const CThostFtdcRspTransferField& a) {return encoding_cast(a.DeviceID);}, [](CThostFtdcRspTransferField& a, char c[]) {strcpy(a.DeviceID, c);})
		.def_readwrite("BankSecuAccType", &CThostFtdcRspTransferField::BankSecuAccType)
		.def_property("BrokerIDByBank", [](const CThostFtdcRspTransferField& a) {return encoding_cast(a.BrokerIDByBank);}, [](CThostFtdcRspTransferField& a, char c[]) {strcpy(a.BrokerIDByBank, c);})
		.def_property("BankSecuAcc", [](const CThostFtdcRspTransferField& a) {return encoding_cast(a.BankSecuAcc);}, [](CThostFtdcRspTransferField& a, char c[]) {strcpy(a.BankSecuAcc, c);})
		.def_readwrite("BankPwdFlag", &CThostFtdcRspTransferField::BankPwdFlag)
		.def_readwrite("SecuPwdFlag", &CThostFtdcRspTransferField::SecuPwdFlag)
		.def_property("OperNo", [](const CThostFtdcRspTransferField& a) {return encoding_cast(a.OperNo);}, [](CThostFtdcRspTransferField& a, char c[]) {strcpy(a.OperNo, c);})
		.def_readwrite("RequestID", &CThostFtdcRspTransferField::RequestID)
		.def_readwrite("TID", &CThostFtdcRspTransferField::TID)
		.def_readwrite("TransferStatus", &CThostFtdcRspTransferField::TransferStatus)
		.def_readwrite("ErrorID", &CThostFtdcRspTransferField::ErrorID)
		.def_property("ErrorMsg", [](const CThostFtdcRspTransferField& a) {return encoding_cast(a.ErrorMsg);}, [](CThostFtdcRspTransferField& a, char c[]) {strcpy(a.ErrorMsg, c);})
		.def_property("LongCustomerName", [](const CThostFtdcRspTransferField& a) {return encoding_cast(a.LongCustomerName);}, [](CThostFtdcRspTransferField& a, char c[]) {strcpy(a.LongCustomerName, c);})
		.def("to_dict", [](const CThostFtdcRspTransferField& a) {py::dict d; d["TradeCode"] = encoding_cast(a.TradeCode); d["BankID"] = encoding_cast(a.BankID); d["BankBranchID"] = encoding_cast(a.BankBranchID); d["BrokerID"] = encoding_cast(a.BrokerID); d["BrokerBranchID"] = encoding_cast(a.BrokerBranchID); d["TradeDate"] = encoding_cast(a.TradeDate); d["TradeTime"] = encoding_cast(a.TradeTime); d["BankSerial"] = encoding_cast(a.BankSerial); d["TradingDay"] = encoding_cast(a.TradingDay); d["PlateSerial"] = a.PlateSerial; d["LastFragment"] = a.LastFragment; d["SessionID"] = a.SessionID; d["CustomerName"] = encoding_cast(a.CustomerName); d["IdCardType"] = a.IdCardType; d["IdentifiedCardNo"] = encoding_cast(a.IdentifiedCardNo); d["CustType"] = a.CustType; d["BankAccount"] = encoding_cast(a.BankAccount); d["BankPassWord"] = encoding_cast(a.BankPassWord); d["AccountID"] = encoding_cast(a.AccountID); d["Password"] = encoding_cast(a.Password); d["InstallID"] = a.InstallID; d["FutureSerial"] = a.FutureSerial; d["UserID"] = encoding_cast(a.UserID); d["VerifyCertNoFlag"] = a.VerifyCertNoFlag; d["CurrencyID"] = encoding_cast(a.CurrencyID); d["TradeAmount"] = a.TradeAmount; d["FutureFetchAmount"] = a.FutureFetchAmount; d["FeePayFlag"] = a.FeePayFlag; d["CustFee"] = a.CustFee; d["BrokerFee"] = a.BrokerFee; d["Message"] = encoding_cast(a.Message); d["Digest"] = encoding_cast(a.Digest); d["BankAccType"] = a.BankAccType; d["DeviceID"] = encoding_cast(a.DeviceID); d["BankSecuAccType"] = a.BankSecuAccType; d["BrokerIDByBank"] = encoding_cast(a.BrokerIDByBank); d["BankSecuAcc"] = encoding_cast(a.BankSecuAcc); d["BankPwdFlag"] = a.BankPwdFlag; d["SecuPwdFlag"] = a.SecuPwdFlag; d["OperNo"] = encoding_cast(a.OperNo); d["RequestID"] = a.RequestID; d["TID"] = a.TID; d["TransferStatus"] = a.TransferStatus; d["ErrorID"] = a.ErrorID; d["ErrorMsg"] = encoding_cast(a.ErrorMsg); d["LongCustomerName"] = encoding_cast(a.LongCustomerName); return d;});

	py::class_<CThostFtdcReqRepealField>(m, "CThostFtdcReqRepealField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcReqRepealField& a) {return CThostFtdcReqRepealField(a);})
		.def_readwrite("RepealTimeInterval", &CThostFtdcReqRepealField::RepealTimeInterval)
		.def_readwrite("RepealedTimes", &CThostFtdcReqRepealField::RepealedTimes)
		.def_readwrite("BankRepealFlag", &CThostFtdcReqRepealField::BankRepealFlag)
		.def_readwrite("BrokerRepealFlag", &CThostFtdcReqRepealField::BrokerRepealFlag)
		.def_readwrite("PlateRepealSerial", &CThostFtdcReqRepealField::PlateRepealSerial)
		.def_property("BankRepealSerial", [](const CThostFtdcReqRepealField& a) {return encoding_cast(a.BankRepealSerial);}, [](CThostFtdcReqRepealField& a, char c[]) {strcpy(a.BankRepealSerial, c);})
		.def_readwrite("FutureRepealSerial", &CThostFtdcReqRepealField::FutureRepealSerial)
		.def_property("TradeCode", [](const CThostFtdcReqRepealField& a) {return encoding_cast(a.TradeCode);}, [](CThostFtdcReqRepealField& a, char c[]) {strcpy(a.TradeCode, c);})
		.def_property("BankID", [](const CThostFtdcReqRepealField& a) {return encoding_cast(a.BankID);}, [](CThostFtdcReqRepealField& a, char c[]) {strcpy(a.BankID, c);})
		.def_property("BankBranchID", [](const CThostFtdcReqRepealField& a) {return encoding_cast(a.BankBranchID);}, [](CThostFtdcReqRepealField& a, char c[]) {strcpy(a.BankBranchID, c);})
		.def_property("BrokerID", [](const CThostFtdcReqRepealField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcReqRepealField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("BrokerBranchID", [](const CThostFtdcReqRepealField& a) {return encoding_cast(a.BrokerBranchID);}, [](CThostFtdcReqRepealField& a, char c[]) {strcpy(a.BrokerBranchID, c);})
		.def_property("TradeDate", [](const CThostFtdcReqRepealField& a) {return encoding_cast(a.TradeDate);}, [](CThostFtdcReqRepealField& a, char c[]) {strcpy(a.TradeDate, c);})
		.def_property("TradeTime", [](const CThostFtdcReqRepealField& a) {return encoding_cast(a.TradeTime);}, [](CThostFtdcReqRepealField& a, char c[]) {strcpy(a.TradeTime, c);})
		.def_property("BankSerial", [](const CThostFtdcReqRepealField& a) {return encoding_cast(a.BankSerial);}, [](CThostFtdcReqRepealField& a, char c[]) {strcpy(a.BankSerial, c);})
		.def_property("TradingDay", [](const CThostFtdcReqRepealField& a) {return encoding_cast(a.TradingDay);}, [](CThostFtdcReqRepealField& a, char c[]) {strcpy(a.TradingDay, c);})
		.def_readwrite("PlateSerial", &CThostFtdcReqRepealField::PlateSerial)
		.def_readwrite("LastFragment", &CThostFtdcReqRepealField::LastFragment)
		.def_readwrite("SessionID", &CThostFtdcReqRepealField::SessionID)
		.def_property("CustomerName", [](const CThostFtdcReqRepealField& a) {return encoding_cast(a.CustomerName);}, [](CThostFtdcReqRepealField& a, char c[]) {strcpy(a.CustomerName, c);})
		.def_readwrite("IdCardType", &CThostFtdcReqRepealField::IdCardType)
		.def_property("IdentifiedCardNo", [](const CThostFtdcReqRepealField& a) {return encoding_cast(a.IdentifiedCardNo);}, [](CThostFtdcReqRepealField& a, char c[]) {strcpy(a.IdentifiedCardNo, c);})
		.def_readwrite("CustType", &CThostFtdcReqRepealField::CustType)
		.def_property("BankAccount", [](const CThostFtdcReqRepealField& a) {return encoding_cast(a.BankAccount);}, [](CThostFtdcReqRepealField& a, char c[]) {strcpy(a.BankAccount, c);})
		.def_property("BankPassWord", [](const CThostFtdcReqRepealField& a) {return encoding_cast(a.BankPassWord);}, [](CThostFtdcReqRepealField& a, char c[]) {strcpy(a.BankPassWord, c);})
		.def_property("AccountID", [](const CThostFtdcReqRepealField& a) {return encoding_cast(a.AccountID);}, [](CThostFtdcReqRepealField& a, char c[]) {strcpy(a.AccountID, c);})
		.def_property("Password", [](const CThostFtdcReqRepealField& a) {return encoding_cast(a.Password);}, [](CThostFtdcReqRepealField& a, char c[]) {strcpy(a.Password, c);})
		.def_readwrite("InstallID", &CThostFtdcReqRepealField::InstallID)
		.def_readwrite("FutureSerial", &CThostFtdcReqRepealField::FutureSerial)
		.def_property("UserID", [](const CThostFtdcReqRepealField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcReqRepealField& a, char c[]) {strcpy(a.UserID, c);})
		.def_readwrite("VerifyCertNoFlag", &CThostFtdcReqRepealField::VerifyCertNoFlag)
		.def_property("CurrencyID", [](const CThostFtdcReqRepealField& a) {return encoding_cast(a.CurrencyID);}, [](CThostFtdcReqRepealField& a, char c[]) {strcpy(a.CurrencyID, c);})
		.def_readwrite("TradeAmount", &CThostFtdcReqRepealField::TradeAmount)
		.def_readwrite("FutureFetchAmount", &CThostFtdcReqRepealField::FutureFetchAmount)
		.def_readwrite("FeePayFlag", &CThostFtdcReqRepealField::FeePayFlag)
		.def_readwrite("CustFee", &CThostFtdcReqRepealField::CustFee)
		.def_readwrite("BrokerFee", &CThostFtdcReqRepealField::BrokerFee)
		.def_property("Message", [](const CThostFtdcReqRepealField& a) {return encoding_cast(a.Message);}, [](CThostFtdcReqRepealField& a, char c[]) {strcpy(a.Message, c);})
		.def_property("Digest", [](const CThostFtdcReqRepealField& a) {return encoding_cast(a.Digest);}, [](CThostFtdcReqRepealField& a, char c[]) {strcpy(a.Digest, c);})
		.def_readwrite("BankAccType", &CThostFtdcReqRepealField::BankAccType)
		.def_property("DeviceID", [](const CThostFtdcReqRepealField& a) {return encoding_cast(a.DeviceID);}, [](CThostFtdcReqRepealField& a, char c[]) {strcpy(a.DeviceID, c);})
		.def_readwrite("BankSecuAccType", &CThostFtdcReqRepealField::BankSecuAccType)
		.def_property("BrokerIDByBank", [](const CThostFtdcReqRepealField& a) {return encoding_cast(a.BrokerIDByBank);}, [](CThostFtdcReqRepealField& a, char c[]) {strcpy(a.BrokerIDByBank, c);})
		.def_property("BankSecuAcc", [](const CThostFtdcReqRepealField& a) {return encoding_cast(a.BankSecuAcc);}, [](CThostFtdcReqRepealField& a, char c[]) {strcpy(a.BankSecuAcc, c);})
		.def_readwrite("BankPwdFlag", &CThostFtdcReqRepealField::BankPwdFlag)
		.def_readwrite("SecuPwdFlag", &CThostFtdcReqRepealField::SecuPwdFlag)
		.def_property("OperNo", [](const CThostFtdcReqRepealField& a) {return encoding_cast(a.OperNo);}, [](CThostFtdcReqRepealField& a, char c[]) {strcpy(a.OperNo, c);})
		.def_readwrite("RequestID", &CThostFtdcReqRepealField::RequestID)
		.def_readwrite("TID", &CThostFtdcReqRepealField::TID)
		.def_readwrite("TransferStatus", &CThostFtdcReqRepealField::TransferStatus)
		.def_property("LongCustomerName", [](const CThostFtdcReqRepealField& a) {return encoding_cast(a.LongCustomerName);}, [](CThostFtdcReqRepealField& a, char c[]) {strcpy(a.LongCustomerName, c);})
		.def("to_dict", [](const CThostFtdcReqRepealField& a) {py::dict d; d["RepealTimeInterval"] = a.RepealTimeInterval; d["RepealedTimes"] = a.RepealedTimes; d["BankRepealFlag"] = a.BankRepealFlag; d["BrokerRepealFlag"] = a.BrokerRepealFlag; d["PlateRepealSerial"] = a.PlateRepealSerial; d["BankRepealSerial"] = encoding_cast(a.BankRepealSerial); d["FutureRepealSerial"] = a.FutureRepealSerial; d["TradeCode"] = encoding_cast(a.TradeCode); d["BankID"] = encoding_cast(a.BankID); d["BankBranchID"] = encoding_cast(a.BankBranchID); d["BrokerID"] = encoding_cast(a.BrokerID); d["BrokerBranchID"] = encoding_cast(a.BrokerBranchID); d["TradeDate"] = encoding_cast(a.TradeDate); d["TradeTime"] = encoding_cast(a.TradeTime); d["BankSerial"] = encoding_cast(a.BankSerial); d["TradingDay"] = encoding_cast(a.TradingDay); d["PlateSerial"] = a.PlateSerial; d["LastFragment"] = a.LastFragment; d["SessionID"] = a.SessionID; d["CustomerName"] = encoding_cast(a.CustomerName); d["IdCardType"] = a.IdCardType; d["IdentifiedCardNo"] = encoding_cast(a.IdentifiedCardNo); d["CustType"] = a.CustType; d["BankAccount"] = encoding_cast(a.BankAccount); d["BankPassWord"] = encoding_cast(a.BankPassWord); d["AccountID"] = encoding_cast(a.AccountID); d["Password"] = encoding_cast(a.Password); d["InstallID"] = a.InstallID; d["FutureSerial"] = a.FutureSerial; d["UserID"] = encoding_cast(a.UserID); d["VerifyCertNoFlag"] = a.VerifyCertNoFlag; d["CurrencyID"] = encoding_cast(a.CurrencyID); d["TradeAmount"] = a.TradeAmount; d["FutureFetchAmount"] = a.FutureFetchAmount; d["FeePayFlag"] = a.FeePayFlag; d["CustFee"] = a.CustFee; d["BrokerFee"] = a.BrokerFee; d["Message"] = encoding_cast(a.Message); d["Digest"] = encoding_cast(a.Digest); d["BankAccType"] = a.BankAccType; d["DeviceID"] = encoding_cast(a.DeviceID); d["BankSecuAccType"] = a.BankSecuAccType; d["BrokerIDByBank"] = encoding_cast(a.BrokerIDByBank); d["BankSecuAcc"] = encoding_cast(a.BankSecuAcc); d["BankPwdFlag"] = a.BankPwdFlag; d["SecuPwdFlag"] = a.SecuPwdFlag; d["OperNo"] = encoding_cast(a.OperNo); d["RequestID"] = a.RequestID; d["TID"] = a.TID; d["TransferStatus"] = a.TransferStatus; d["LongCustomerName"] = encoding_cast(a.LongCustomerName); return d;});

	py::class_<CThostFtdcRspRepealField>(m, "CThostFtdcRspRepealField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcRspRepealField& a) {return CThostFtdcRspRepealField(a);})
		.def_readwrite("RepealTimeInterval", &CThostFtdcRspRepealField::RepealTimeInterval)
		.def_readwrite("RepealedTimes", &CThostFtdcRspRepealField::RepealedTimes)
		.def_readwrite("BankRepealFlag", &CThostFtdcRspRepealField::BankRepealFlag)
		.def_readwrite("BrokerRepealFlag", &CThostFtdcRspRepealField::BrokerRepealFlag)
		.def_readwrite("PlateRepealSerial", &CThostFtdcRspRepealField::PlateRepealSerial)
		.def_property("BankRepealSerial", [](const CThostFtdcRspRepealField& a) {return encoding_cast(a.BankRepealSerial);}, [](CThostFtdcRspRepealField& a, char c[]) {strcpy(a.BankRepealSerial, c);})
		.def_readwrite("FutureRepealSerial", &CThostFtdcRspRepealField::FutureRepealSerial)
		.def_property("TradeCode", [](const CThostFtdcRspRepealField& a) {return encoding_cast(a.TradeCode);}, [](CThostFtdcRspRepealField& a, char c[]) {strcpy(a.TradeCode, c);})
		.def_property("BankID", [](const CThostFtdcRspRepealField& a) {return encoding_cast(a.BankID);}, [](CThostFtdcRspRepealField& a, char c[]) {strcpy(a.BankID, c);})
		.def_property("BankBranchID", [](const CThostFtdcRspRepealField& a) {return encoding_cast(a.BankBranchID);}, [](CThostFtdcRspRepealField& a, char c[]) {strcpy(a.BankBranchID, c);})
		.def_property("BrokerID", [](const CThostFtdcRspRepealField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcRspRepealField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("BrokerBranchID", [](const CThostFtdcRspRepealField& a) {return encoding_cast(a.BrokerBranchID);}, [](CThostFtdcRspRepealField& a, char c[]) {strcpy(a.BrokerBranchID, c);})
		.def_property("TradeDate", [](const CThostFtdcRspRepealField& a) {return encoding_cast(a.TradeDate);}, [](CThostFtdcRspRepealField& a, char c[]) {strcpy(a.TradeDate, c);})
		.def_property("TradeTime", [](const CThostFtdcRspRepealField& a) {return encoding_cast(a.TradeTime);}, [](CThostFtdcRspRepealField& a, char c[]) {strcpy(a.TradeTime, c);})
		.def_property("BankSerial", [](const CThostFtdcRspRepealField& a) {return encoding_cast(a.BankSerial);}, [](CThostFtdcRspRepealField& a, char c[]) {strcpy(a.BankSerial, c);})
		.def_property("TradingDay", [](const CThostFtdcRspRepealField& a) {return encoding_cast(a.TradingDay);}, [](CThostFtdcRspRepealField& a, char c[]) {strcpy(a.TradingDay, c);})
		.def_readwrite("PlateSerial", &CThostFtdcRspRepealField::PlateSerial)
		.def_readwrite("LastFragment", &CThostFtdcRspRepealField::LastFragment)
		.def_readwrite("SessionID", &CThostFtdcRspRepealField::SessionID)
		.def_property("CustomerName", [](const CThostFtdcRspRepealField& a) {return encoding_cast(a.CustomerName);}, [](CThostFtdcRspRepealField& a, char c[]) {strcpy(a.CustomerName, c);})
		.def_readwrite("IdCardType", &CThostFtdcRspRepealField::IdCardType)
		.def_property("IdentifiedCardNo", [](const CThostFtdcRspRepealField& a) {return encoding_cast(a.IdentifiedCardNo);}, [](CThostFtdcRspRepealField& a, char c[]) {strcpy(a.IdentifiedCardNo, c);})
		.def_readwrite("CustType", &CThostFtdcRspRepealField::CustType)
		.def_property("BankAccount", [](const CThostFtdcRspRepealField& a) {return encoding_cast(a.BankAccount);}, [](CThostFtdcRspRepealField& a, char c[]) {strcpy(a.BankAccount, c);})
		.def_property("BankPassWord", [](const CThostFtdcRspRepealField& a) {return encoding_cast(a.BankPassWord);}, [](CThostFtdcRspRepealField& a, char c[]) {strcpy(a.BankPassWord, c);})
		.def_property("AccountID", [](const CThostFtdcRspRepealField& a) {return encoding_cast(a.AccountID);}, [](CThostFtdcRspRepealField& a, char c[]) {strcpy(a.AccountID, c);})
		.def_property("Password", [](const CThostFtdcRspRepealField& a) {return encoding_cast(a.Password);}, [](CThostFtdcRspRepealField& a, char c[]) {strcpy(a.Password, c);})
		.def_readwrite("InstallID", &CThostFtdcRspRepealField::InstallID)
		.def_readwrite("FutureSerial", &CThostFtdcRspRepealField::FutureSerial)
		.def_property("UserID", [](const CThostFtdcRspRepealField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcRspRepealField& a, char c[]) {strcpy(a.UserID, c);})
		.def_readwrite("VerifyCertNoFlag", &CThostFtdcRspRepealField::VerifyCertNoFlag)
		.def_property("CurrencyID", [](const CThostFtdcRspRepealField& a) {return encoding_cast(a.CurrencyID);}, [](CThostFtdcRspRepealField& a, char c[]) {strcpy(a.CurrencyID, c);})
		.def_readwrite("TradeAmount", &CThostFtdcRspRepealField::TradeAmount)
		.def_readwrite("FutureFetchAmount", &CThostFtdcRspRepealField::FutureFetchAmount)
		.def_readwrite("FeePayFlag", &CThostFtdcRspRepealField::FeePayFlag)
		.def_readwrite("CustFee", &CThostFtdcRspRepealField::CustFee)
		.def_readwrite("BrokerFee", &CThostFtdcRspRepealField::BrokerFee)
		.def_property("Message", [](const CThostFtdcRspRepealField& a) {return encoding_cast(a.Message);}, [](CThostFtdcRspRepealField& a, char c[]) {strcpy(a.Message, c);})
		.def_property("Digest", [](const CThostFtdcRspRepealField& a) {return encoding_cast(a.Digest);}, [](CThostFtdcRspRepealField& a, char c[]) {strcpy(a.Digest, c);})
		.def_readwrite("BankAccType", &CThostFtdcRspRepealField::BankAccType)
		.def_property("DeviceID", [](const CThostFtdcRspRepealField& a) {return encoding_cast(a.DeviceID);}, [](CThostFtdcRspRepealField& a, char c[]) {strcpy(a.DeviceID, c);})
		.def_readwrite("BankSecuAccType", &CThostFtdcRspRepealField::BankSecuAccType)
		.def_property("BrokerIDByBank", [](const CThostFtdcRspRepealField& a) {return encoding_cast(a.BrokerIDByBank);}, [](CThostFtdcRspRepealField& a, char c[]) {strcpy(a.BrokerIDByBank, c);})
		.def_property("BankSecuAcc", [](const CThostFtdcRspRepealField& a) {return encoding_cast(a.BankSecuAcc);}, [](CThostFtdcRspRepealField& a, char c[]) {strcpy(a.BankSecuAcc, c);})
		.def_readwrite("BankPwdFlag", &CThostFtdcRspRepealField::BankPwdFlag)
		.def_readwrite("SecuPwdFlag", &CThostFtdcRspRepealField::SecuPwdFlag)
		.def_property("OperNo", [](const CThostFtdcRspRepealField& a) {return encoding_cast(a.OperNo);}, [](CThostFtdcRspRepealField& a, char c[]) {strcpy(a.OperNo, c);})
		.def_readwrite("RequestID", &CThostFtdcRspRepealField::RequestID)
		.def_readwrite("TID", &CThostFtdcRspRepealField::TID)
		.def_readwrite("TransferStatus", &CThostFtdcRspRepealField::TransferStatus)
		.def_readwrite("ErrorID", &CThostFtdcRspRepealField::ErrorID)
		.def_property("ErrorMsg", [](const CThostFtdcRspRepealField& a) {return encoding_cast(a.ErrorMsg);}, [](CThostFtdcRspRepealField& a, char c[]) {strcpy(a.ErrorMsg, c);})
		.def_property("LongCustomerName", [](const CThostFtdcRspRepealField& a) {return encoding_cast(a.LongCustomerName);}, [](CThostFtdcRspRepealField& a, char c[]) {strcpy(a.LongCustomerName, c);})
		.def("to_dict", [](const CThostFtdcRspRepealField& a) {py::dict d; d["RepealTimeInterval"] = a.RepealTimeInterval; d["RepealedTimes"] = a.RepealedTimes; d["BankRepealFlag"] = a.BankRepealFlag; d["BrokerRepealFlag"] = a.BrokerRepealFlag; d["PlateRepealSerial"] = a.PlateRepealSerial; d["BankRepealSerial"] = encoding_cast(a.BankRepealSerial); d["FutureRepealSerial"] = a.FutureRepealSerial; d["TradeCode"] = encoding_cast(a.TradeCode); d["BankID"] = encoding_cast(a.BankID); d["BankBranchID"] = encoding_cast(a.BankBranchID); d["BrokerID"] = encoding_cast(a.BrokerID); d["BrokerBranchID"] = encoding_cast(a.BrokerBranchID); d["TradeDate"] = encoding_cast(a.TradeDate); d["TradeTime"] = encoding_cast(a.TradeTime); d["BankSerial"] = encoding_cast(a.BankSerial); d["TradingDay"] = encoding_cast(a.TradingDay); d["PlateSerial"] = a.PlateSerial; d["LastFragment"] = a.LastFragment; d["SessionID"] = a.SessionID; d["CustomerName"] = encoding_cast(a.CustomerName); d["IdCardType"] = a.IdCardType; d["IdentifiedCardNo"] = encoding_cast(a.IdentifiedCardNo); d["CustType"] = a.CustType; d["BankAccount"] = encoding_cast(a.BankAccount); d["BankPassWord"] = encoding_cast(a.BankPassWord); d["AccountID"] = encoding_cast(a.AccountID); d["Password"] = encoding_cast(a.Password); d["InstallID"] = a.InstallID; d["FutureSerial"] = a.FutureSerial; d["UserID"] = encoding_cast(a.UserID); d["VerifyCertNoFlag"] = a.VerifyCertNoFlag; d["CurrencyID"] = encoding_cast(a.CurrencyID); d["TradeAmount"] = a.TradeAmount; d["FutureFetchAmount"] = a.FutureFetchAmount; d["FeePayFlag"] = a.FeePayFlag; d["CustFee"] = a.CustFee; d["BrokerFee"] = a.BrokerFee; d["Message"] = encoding_cast(a.Message); d["Digest"] = encoding_cast(a.Digest); d["BankAccType"] = a.BankAccType; d["DeviceID"] = encoding_cast(a.DeviceID); d["BankSecuAccType"] = a.BankSecuAccType; d["BrokerIDByBank"] = encoding_cast(a.BrokerIDByBank); d["BankSecuAcc"] = encoding_cast(a.BankSecuAcc); d["BankPwdFlag"] = a.BankPwdFlag; d["SecuPwdFlag"] = a.SecuPwdFlag; d["OperNo"] = encoding_cast(a.OperNo); d["RequestID"] = a.RequestID; d["TID"] = a.TID; d["TransferStatus"] = a.TransferStatus; d["ErrorID"] = a.ErrorID; d["ErrorMsg"] = encoding_cast(a.ErrorMsg); d["LongCustomerName"] = encoding_cast(a.LongCustomerName); return d;});

	py::class_<CThostFtdcReqQueryAccountField>(m, "CThostFtdcReqQueryAccountField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcReqQueryAccountField& a) {return CThostFtdcReqQueryAccountField(a);})
		.def_property("TradeCode", [](const CThostFtdcReqQueryAccountField& a) {return encoding_cast(a.TradeCode);}, [](CThostFtdcReqQueryAccountField& a, char c[]) {strcpy(a.TradeCode, c);})
		.def_property("BankID", [](const CThostFtdcReqQueryAccountField& a) {return encoding_cast(a.BankID);}, [](CThostFtdcReqQueryAccountField& a, char c[]) {strcpy(a.BankID, c);})
		.def_property("BankBranchID", [](const CThostFtdcReqQueryAccountField& a) {return encoding_cast(a.BankBranchID);}, [](CThostFtdcReqQueryAccountField& a, char c[]) {strcpy(a.BankBranchID, c);})
		.def_property("BrokerID", [](const CThostFtdcReqQueryAccountField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcReqQueryAccountField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("BrokerBranchID", [](const CThostFtdcReqQueryAccountField& a) {return encoding_cast(a.BrokerBranchID);}, [](CThostFtdcReqQueryAccountField& a, char c[]) {strcpy(a.BrokerBranchID, c);})
		.def_property("TradeDate", [](const CThostFtdcReqQueryAccountField& a) {return encoding_cast(a.TradeDate);}, [](CThostFtdcReqQueryAccountField& a, char c[]) {strcpy(a.TradeDate, c);})
		.def_property("TradeTime", [](const CThostFtdcReqQueryAccountField& a) {return encoding_cast(a.TradeTime);}, [](CThostFtdcReqQueryAccountField& a, char c[]) {strcpy(a.TradeTime, c);})
		.def_property("BankSerial", [](const CThostFtdcReqQueryAccountField& a) {return encoding_cast(a.BankSerial);}, [](CThostFtdcReqQueryAccountField& a, char c[]) {strcpy(a.BankSerial, c);})
		.def_property("TradingDay", [](const CThostFtdcReqQueryAccountField& a) {return encoding_cast(a.TradingDay);}, [](CThostFtdcReqQueryAccountField& a, char c[]) {strcpy(a.TradingDay, c);})
		.def_readwrite("PlateSerial", &CThostFtdcReqQueryAccountField::PlateSerial)
		.def_readwrite("LastFragment", &CThostFtdcReqQueryAccountField::LastFragment)
		.def_readwrite("SessionID", &CThostFtdcReqQueryAccountField::SessionID)
		.def_property("CustomerName", [](const CThostFtdcReqQueryAccountField& a) {return encoding_cast(a.CustomerName);}, [](CThostFtdcReqQueryAccountField& a, char c[]) {strcpy(a.CustomerName, c);})
		.def_readwrite("IdCardType", &CThostFtdcReqQueryAccountField::IdCardType)
		.def_property("IdentifiedCardNo", [](const CThostFtdcReqQueryAccountField& a) {return encoding_cast(a.IdentifiedCardNo);}, [](CThostFtdcReqQueryAccountField& a, char c[]) {strcpy(a.IdentifiedCardNo, c);})
		.def_readwrite("CustType", &CThostFtdcReqQueryAccountField::CustType)
		.def_property("BankAccount", [](const CThostFtdcReqQueryAccountField& a) {return encoding_cast(a.BankAccount);}, [](CThostFtdcReqQueryAccountField& a, char c[]) {strcpy(a.BankAccount, c);})
		.def_property("BankPassWord", [](const CThostFtdcReqQueryAccountField& a) {return encoding_cast(a.BankPassWord);}, [](CThostFtdcReqQueryAccountField& a, char c[]) {strcpy(a.BankPassWord, c);})
		.def_property("AccountID", [](const CThostFtdcReqQueryAccountField& a) {return encoding_cast(a.AccountID);}, [](CThostFtdcReqQueryAccountField& a, char c[]) {strcpy(a.AccountID, c);})
		.def_property("Password", [](const CThostFtdcReqQueryAccountField& a) {return encoding_cast(a.Password);}, [](CThostFtdcReqQueryAccountField& a, char c[]) {strcpy(a.Password, c);})
		.def_readwrite("FutureSerial", &CThostFtdcReqQueryAccountField::FutureSerial)
		.def_readwrite("InstallID", &CThostFtdcReqQueryAccountField::InstallID)
		.def_property("UserID", [](const CThostFtdcReqQueryAccountField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcReqQueryAccountField& a, char c[]) {strcpy(a.UserID, c);})
		.def_readwrite("VerifyCertNoFlag", &CThostFtdcReqQueryAccountField::VerifyCertNoFlag)
		.def_property("CurrencyID", [](const CThostFtdcReqQueryAccountField& a) {return encoding_cast(a.CurrencyID);}, [](CThostFtdcReqQueryAccountField& a, char c[]) {strcpy(a.CurrencyID, c);})
		.def_property("Digest", [](const CThostFtdcReqQueryAccountField& a) {return encoding_cast(a.Digest);}, [](CThostFtdcReqQueryAccountField& a, char c[]) {strcpy(a.Digest, c);})
		.def_readwrite("BankAccType", &CThostFtdcReqQueryAccountField::BankAccType)
		.def_property("DeviceID", [](const CThostFtdcReqQueryAccountField& a) {return encoding_cast(a.DeviceID);}, [](CThostFtdcReqQueryAccountField& a, char c[]) {strcpy(a.DeviceID, c);})
		.def_readwrite("BankSecuAccType", &CThostFtdcReqQueryAccountField::BankSecuAccType)
		.def_property("BrokerIDByBank", [](const CThostFtdcReqQueryAccountField& a) {return encoding_cast(a.BrokerIDByBank);}, [](CThostFtdcReqQueryAccountField& a, char c[]) {strcpy(a.BrokerIDByBank, c);})
		.def_property("BankSecuAcc", [](const CThostFtdcReqQueryAccountField& a) {return encoding_cast(a.BankSecuAcc);}, [](CThostFtdcReqQueryAccountField& a, char c[]) {strcpy(a.BankSecuAcc, c);})
		.def_readwrite("BankPwdFlag", &CThostFtdcReqQueryAccountField::BankPwdFlag)
		.def_readwrite("SecuPwdFlag", &CThostFtdcReqQueryAccountField::SecuPwdFlag)
		.def_property("OperNo", [](const CThostFtdcReqQueryAccountField& a) {return encoding_cast(a.OperNo);}, [](CThostFtdcReqQueryAccountField& a, char c[]) {strcpy(a.OperNo, c);})
		.def_readwrite("RequestID", &CThostFtdcReqQueryAccountField::RequestID)
		.def_readwrite("TID", &CThostFtdcReqQueryAccountField::TID)
		.def_property("LongCustomerName", [](const CThostFtdcReqQueryAccountField& a) {return encoding_cast(a.LongCustomerName);}, [](CThostFtdcReqQueryAccountField& a, char c[]) {strcpy(a.LongCustomerName, c);})
		.def("to_dict", [](const CThostFtdcReqQueryAccountField& a) {py::dict d; d["TradeCode"] = encoding_cast(a.TradeCode); d["BankID"] = encoding_cast(a.BankID); d["BankBranchID"] = encoding_cast(a.BankBranchID); d["BrokerID"] = encoding_cast(a.BrokerID); d["BrokerBranchID"] = encoding_cast(a.BrokerBranchID); d["TradeDate"] = encoding_cast(a.TradeDate); d["TradeTime"] = encoding_cast(a.TradeTime); d["BankSerial"] = encoding_cast(a.BankSerial); d["TradingDay"] = encoding_cast(a.TradingDay); d["PlateSerial"] = a.PlateSerial; d["LastFragment"] = a.LastFragment; d["SessionID"] = a.SessionID; d["CustomerName"] = encoding_cast(a.CustomerName); d["IdCardType"] = a.IdCardType; d["IdentifiedCardNo"] = encoding_cast(a.IdentifiedCardNo); d["CustType"] = a.CustType; d["BankAccount"] = encoding_cast(a.BankAccount); d["BankPassWord"] = encoding_cast(a.BankPassWord); d["AccountID"] = encoding_cast(a.AccountID); d["Password"] = encoding_cast(a.Password); d["FutureSerial"] = a.FutureSerial; d["InstallID"] = a.InstallID; d["UserID"] = encoding_cast(a.UserID); d["VerifyCertNoFlag"] = a.VerifyCertNoFlag; d["CurrencyID"] = encoding_cast(a.CurrencyID); d["Digest"] = encoding_cast(a.Digest); d["BankAccType"] = a.BankAccType; d["DeviceID"] = encoding_cast(a.DeviceID); d["BankSecuAccType"] = a.BankSecuAccType; d["BrokerIDByBank"] = encoding_cast(a.BrokerIDByBank); d["BankSecuAcc"] = encoding_cast(a.BankSecuAcc); d["BankPwdFlag"] = a.BankPwdFlag; d["SecuPwdFlag"] = a.SecuPwdFlag; d["OperNo"] = encoding_cast(a.OperNo); d["RequestID"] = a.RequestID; d["TID"] = a.TID; d["LongCustomerName"] = encoding_cast(a.LongCustomerName); return d;});

	py::class_<CThostFtdcRspQueryAccountField>(m, "CThostFtdcRspQueryAccountField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcRspQueryAccountField& a) {return CThostFtdcRspQueryAccountField(a);})
		.def_property("TradeCode", [](const CThostFtdcRspQueryAccountField& a) {return encoding_cast(a.TradeCode);}, [](CThostFtdcRspQueryAccountField& a, char c[]) {strcpy(a.TradeCode, c);})
		.def_property("BankID", [](const CThostFtdcRspQueryAccountField& a) {return encoding_cast(a.BankID);}, [](CThostFtdcRspQueryAccountField& a, char c[]) {strcpy(a.BankID, c);})
		.def_property("BankBranchID", [](const CThostFtdcRspQueryAccountField& a) {return encoding_cast(a.BankBranchID);}, [](CThostFtdcRspQueryAccountField& a, char c[]) {strcpy(a.BankBranchID, c);})
		.def_property("BrokerID", [](const CThostFtdcRspQueryAccountField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcRspQueryAccountField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("BrokerBranchID", [](const CThostFtdcRspQueryAccountField& a) {return encoding_cast(a.BrokerBranchID);}, [](CThostFtdcRspQueryAccountField& a, char c[]) {strcpy(a.BrokerBranchID, c);})
		.def_property("TradeDate", [](const CThostFtdcRspQueryAccountField& a) {return encoding_cast(a.TradeDate);}, [](CThostFtdcRspQueryAccountField& a, char c[]) {strcpy(a.TradeDate, c);})
		.def_property("TradeTime", [](const CThostFtdcRspQueryAccountField& a) {return encoding_cast(a.TradeTime);}, [](CThostFtdcRspQueryAccountField& a, char c[]) {strcpy(a.TradeTime, c);})
		.def_property("BankSerial", [](const CThostFtdcRspQueryAccountField& a) {return encoding_cast(a.BankSerial);}, [](CThostFtdcRspQueryAccountField& a, char c[]) {strcpy(a.BankSerial, c);})
		.def_property("TradingDay", [](const CThostFtdcRspQueryAccountField& a) {return encoding_cast(a.TradingDay);}, [](CThostFtdcRspQueryAccountField& a, char c[]) {strcpy(a.TradingDay, c);})
		.def_readwrite("PlateSerial", &CThostFtdcRspQueryAccountField::PlateSerial)
		.def_readwrite("LastFragment", &CThostFtdcRspQueryAccountField::LastFragment)
		.def_readwrite("SessionID", &CThostFtdcRspQueryAccountField::SessionID)
		.def_property("CustomerName", [](const CThostFtdcRspQueryAccountField& a) {return encoding_cast(a.CustomerName);}, [](CThostFtdcRspQueryAccountField& a, char c[]) {strcpy(a.CustomerName, c);})
		.def_readwrite("IdCardType", &CThostFtdcRspQueryAccountField::IdCardType)
		.def_property("IdentifiedCardNo", [](const CThostFtdcRspQueryAccountField& a) {return encoding_cast(a.IdentifiedCardNo);}, [](CThostFtdcRspQueryAccountField& a, char c[]) {strcpy(a.IdentifiedCardNo, c);})
		.def_readwrite("CustType", &CThostFtdcRspQueryAccountField::CustType)
		.def_property("BankAccount", [](const CThostFtdcRspQueryAccountField& a) {return encoding_cast(a.BankAccount);}, [](CThostFtdcRspQueryAccountField& a, char c[]) {strcpy(a.BankAccount, c);})
		.def_property("BankPassWord", [](const CThostFtdcRspQueryAccountField& a) {return encoding_cast(a.BankPassWord);}, [](CThostFtdcRspQueryAccountField& a, char c[]) {strcpy(a.BankPassWord, c);})
		.def_property("AccountID", [](const CThostFtdcRspQueryAccountField& a) {return encoding_cast(a.AccountID);}, [](CThostFtdcRspQueryAccountField& a, char c[]) {strcpy(a.AccountID, c);})
		.def_property("Password", [](const CThostFtdcRspQueryAccountField& a) {return encoding_cast(a.Password);}, [](CThostFtdcRspQueryAccountField& a, char c[]) {strcpy(a.Password, c);})
		.def_readwrite("FutureSerial", &CThostFtdcRspQueryAccountField::FutureSerial)
		.def_readwrite("InstallID", &CThostFtdcRspQueryAccountField::InstallID)
		.def_property("UserID", [](const CThostFtdcRspQueryAccountField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcRspQueryAccountField& a, char c[]) {strcpy(a.UserID, c);})
		.def_readwrite("VerifyCertNoFlag", &CThostFtdcRspQueryAccountField::VerifyCertNoFlag)
		.def_property("CurrencyID", [](const CThostFtdcRspQueryAccountField& a) {return encoding_cast(a.CurrencyID);}, [](CThostFtdcRspQueryAccountField& a, char c[]) {strcpy(a.CurrencyID, c);})
		.def_property("Digest", [](const CThostFtdcRspQueryAccountField& a) {return encoding_cast(a.Digest);}, [](CThostFtdcRspQueryAccountField& a, char c[]) {strcpy(a.Digest, c);})
		.def_readwrite("BankAccType", &CThostFtdcRspQueryAccountField::BankAccType)
		.def_property("DeviceID", [](const CThostFtdcRspQueryAccountField& a) {return encoding_cast(a.DeviceID);}, [](CThostFtdcRspQueryAccountField& a, char c[]) {strcpy(a.DeviceID, c);})
		.def_readwrite("BankSecuAccType", &CThostFtdcRspQueryAccountField::BankSecuAccType)
		.def_property("BrokerIDByBank", [](const CThostFtdcRspQueryAccountField& a) {return encoding_cast(a.BrokerIDByBank);}, [](CThostFtdcRspQueryAccountField& a, char c[]) {strcpy(a.BrokerIDByBank, c);})
		.def_property("BankSecuAcc", [](const CThostFtdcRspQueryAccountField& a) {return encoding_cast(a.BankSecuAcc);}, [](CThostFtdcRspQueryAccountField& a, char c[]) {strcpy(a.BankSecuAcc, c);})
		.def_readwrite("BankPwdFlag", &CThostFtdcRspQueryAccountField::BankPwdFlag)
		.def_readwrite("SecuPwdFlag", &CThostFtdcRspQueryAccountField::SecuPwdFlag)
		.def_property("OperNo", [](const CThostFtdcRspQueryAccountField& a) {return encoding_cast(a.OperNo);}, [](CThostFtdcRspQueryAccountField& a, char c[]) {strcpy(a.OperNo, c);})
		.def_readwrite("RequestID", &CThostFtdcRspQueryAccountField::RequestID)
		.def_readwrite("TID", &CThostFtdcRspQueryAccountField::TID)
		.def_readwrite("BankUseAmount", &CThostFtdcRspQueryAccountField::BankUseAmount)
		.def_readwrite("BankFetchAmount", &CThostFtdcRspQueryAccountField::BankFetchAmount)
		.def_property("LongCustomerName", [](const CThostFtdcRspQueryAccountField& a) {return encoding_cast(a.LongCustomerName);}, [](CThostFtdcRspQueryAccountField& a, char c[]) {strcpy(a.LongCustomerName, c);})
		.def("to_dict", [](const CThostFtdcRspQueryAccountField& a) {py::dict d; d["TradeCode"] = encoding_cast(a.TradeCode); d["BankID"] = encoding_cast(a.BankID); d["BankBranchID"] = encoding_cast(a.BankBranchID); d["BrokerID"] = encoding_cast(a.BrokerID); d["BrokerBranchID"] = encoding_cast(a.BrokerBranchID); d["TradeDate"] = encoding_cast(a.TradeDate); d["TradeTime"] = encoding_cast(a.TradeTime); d["BankSerial"] = encoding_cast(a.BankSerial); d["TradingDay"] = encoding_cast(a.TradingDay); d["PlateSerial"] = a.PlateSerial; d["LastFragment"] = a.LastFragment; d["SessionID"] = a.SessionID; d["CustomerName"] = encoding_cast(a.CustomerName); d["IdCardType"] = a.IdCardType; d["IdentifiedCardNo"] = encoding_cast(a.IdentifiedCardNo); d["CustType"] = a.CustType; d["BankAccount"] = encoding_cast(a.BankAccount); d["BankPassWord"] = encoding_cast(a.BankPassWord); d["AccountID"] = encoding_cast(a.AccountID); d["Password"] = encoding_cast(a.Password); d["FutureSerial"] = a.FutureSerial; d["InstallID"] = a.InstallID; d["UserID"] = encoding_cast(a.UserID); d["VerifyCertNoFlag"] = a.VerifyCertNoFlag; d["CurrencyID"] = encoding_cast(a.CurrencyID); d["Digest"] = encoding_cast(a.Digest); d["BankAccType"] = a.BankAccType; d["DeviceID"] = encoding_cast(a.DeviceID); d["BankSecuAccType"] = a.BankSecuAccType; d["BrokerIDByBank"] = encoding_cast(a.BrokerIDByBank); d["BankSecuAcc"] = encoding_cast(a.BankSecuAcc); d["BankPwdFlag"] = a.BankPwdFlag; d["SecuPwdFlag"] = a.SecuPwdFlag; d["OperNo"] = encoding_cast(a.OperNo); d["RequestID"] = a.RequestID; d["TID"] = a.TID; d["BankUseAmount"] = a.BankUseAmount; d["BankFetchAmount"] = a.BankFetchAmount; d["LongCustomerName"] = encoding_cast(a.LongCustomerName); return d;});

	py::class_<CThostFtdcFutureSignIOField>(m, "CThostFtdcFutureSignIOField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcFutureSignIOField& a) {return CThostFtdcFutureSignIOField(a);})
		.def_property("TradeCode", [](const CThostFtdcFutureSignIOField& a) {return encoding_cast(a.TradeCode);}, [](CThostFtdcFutureSignIOField& a, char c[]) {strcpy(a.TradeCode, c);})
		.def_property("BankID", [](const CThostFtdcFutureSignIOField& a) {return encoding_cast(a.BankID);}, [](CThostFtdcFutureSignIOField& a, char c[]) {strcpy(a.BankID, c);})
		.def_property("BankBranchID", [](const CThostFtdcFutureSignIOField& a) {return encoding_cast(a.BankBranchID);}, [](CThostFtdcFutureSignIOField& a, char c[]) {strcpy(a.BankBranchID, c);})
		.def_property("BrokerID", [](const CThostFtdcFutureSignIOField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcFutureSignIOField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("BrokerBranchID", [](const CThostFtdcFutureSignIOField& a) {return encoding_cast(a.BrokerBranchID);}, [](CThostFtdcFutureSignIOField& a, char c[]) {strcpy(a.BrokerBranchID, c);})
		.def_property("TradeDate", [](const CThostFtdcFutureSignIOField& a) {return encoding_cast(a.TradeDate);}, [](CThostFtdcFutureSignIOField& a, char c[]) {strcpy(a.TradeDate, c);})
		.def_property("TradeTime", [](const CThostFtdcFutureSignIOField& a) {return encoding_cast(a.TradeTime);}, [](CThostFtdcFutureSignIOField& a, char c[]) {strcpy(a.TradeTime, c);})
		.def_property("BankSerial", [](const CThostFtdcFutureSignIOField& a) {return encoding_cast(a.BankSerial);}, [](CThostFtdcFutureSignIOField& a, char c[]) {strcpy(a.BankSerial, c);})
		.def_property("TradingDay", [](const CThostFtdcFutureSignIOField& a) {return encoding_cast(a.TradingDay);}, [](CThostFtdcFutureSignIOField& a, char c[]) {strcpy(a.TradingDay, c);})
		.def_readwrite("PlateSerial", &CThostFtdcFutureSignIOField::PlateSerial)
		.def_readwrite("LastFragment", &CThostFtdcFutureSignIOField::LastFragment)
		.def_readwrite("SessionID", &CThostFtdcFutureSignIOField::SessionID)
		.def_readwrite("InstallID", &CThostFtdcFutureSignIOField::InstallID)
		.def_property("UserID", [](const CThostFtdcFutureSignIOField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcFutureSignIOField& a, char c[]) {strcpy(a.UserID, c);})
		.def_property("Digest", [](const CThostFtdcFutureSignIOField& a) {return encoding_cast(a.Digest);}, [](CThostFtdcFutureSignIOField& a, char c[]) {strcpy(a.Digest, c);})
		.def_property("CurrencyID", [](const CThostFtdcFutureSignIOField& a) {return encoding_cast(a.CurrencyID);}, [](CThostFtdcFutureSignIOField& a, char c[]) {strcpy(a.CurrencyID, c);})
		.def_property("DeviceID", [](const CThostFtdcFutureSignIOField& a) {return encoding_cast(a.DeviceID);}, [](CThostFtdcFutureSignIOField& a, char c[]) {strcpy(a.DeviceID, c);})
		.def_property("BrokerIDByBank", [](const CThostFtdcFutureSignIOField& a) {return encoding_cast(a.BrokerIDByBank);}, [](CThostFtdcFutureSignIOField& a, char c[]) {strcpy(a.BrokerIDByBank, c);})
		.def_property("OperNo", [](const CThostFtdcFutureSignIOField& a) {return encoding_cast(a.OperNo);}, [](CThostFtdcFutureSignIOField& a, char c[]) {strcpy(a.OperNo, c);})
		.def_readwrite("RequestID", &CThostFtdcFutureSignIOField::RequestID)
		.def_readwrite("TID", &CThostFtdcFutureSignIOField::TID)
		.def("to_dict", [](const CThostFtdcFutureSignIOField& a) {py::dict d; d["TradeCode"] = encoding_cast(a.TradeCode); d["BankID"] = encoding_cast(a.BankID); d["BankBranchID"] = encoding_cast(a.BankBranchID); d["BrokerID"] = encoding_cast(a.BrokerID); d["BrokerBranchID"] = encoding_cast(a.BrokerBranchID); d["TradeDate"] = encoding_cast(a.TradeDate); d["TradeTime"] = encoding_cast(a.TradeTime); d["BankSerial"] = encoding_cast(a.BankSerial); d["TradingDay"] = encoding_cast(a.TradingDay); d["PlateSerial"] = a.PlateSerial; d["LastFragment"] = a.LastFragment; d["SessionID"] = a.SessionID; d["InstallID"] = a.InstallID; d["UserID"] = encoding_cast(a.UserID); d["Digest"] = encoding_cast(a.Digest); d["CurrencyID"] = encoding_cast(a.CurrencyID); d["DeviceID"] = encoding_cast(a.DeviceID); d["BrokerIDByBank"] = encoding_cast(a.BrokerIDByBank); d["OperNo"] = encoding_cast(a.OperNo); d["RequestID"] = a.RequestID; d["TID"] = a.TID; return d;});

	py::class_<CThostFtdcRspFutureSignInField>(m, "CThostFtdcRspFutureSignInField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcRspFutureSignInField& a) {return CThostFtdcRspFutureSignInField(a);})
		.def_property("TradeCode", [](const CThostFtdcRspFutureSignInField& a) {return encoding_cast(a.TradeCode);}, [](CThostFtdcRspFutureSignInField& a, char c[]) {strcpy(a.TradeCode, c);})
		.def_property("BankID", [](const CThostFtdcRspFutureSignInField& a) {return encoding_cast(a.BankID);}, [](CThostFtdcRspFutureSignInField& a, char c[]) {strcpy(a.BankID, c);})
		.def_property("BankBranchID", [](const CThostFtdcRspFutureSignInField& a) {return encoding_cast(a.BankBranchID);}, [](CThostFtdcRspFutureSignInField& a, char c[]) {strcpy(a.BankBranchID, c);})
		.def_property("BrokerID", [](const CThostFtdcRspFutureSignInField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcRspFutureSignInField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("BrokerBranchID", [](const CThostFtdcRspFutureSignInField& a) {return encoding_cast(a.BrokerBranchID);}, [](CThostFtdcRspFutureSignInField& a, char c[]) {strcpy(a.BrokerBranchID, c);})
		.def_property("TradeDate", [](const CThostFtdcRspFutureSignInField& a) {return encoding_cast(a.TradeDate);}, [](CThostFtdcRspFutureSignInField& a, char c[]) {strcpy(a.TradeDate, c);})
		.def_property("TradeTime", [](const CThostFtdcRspFutureSignInField& a) {return encoding_cast(a.TradeTime);}, [](CThostFtdcRspFutureSignInField& a, char c[]) {strcpy(a.TradeTime, c);})
		.def_property("BankSerial", [](const CThostFtdcRspFutureSignInField& a) {return encoding_cast(a.BankSerial);}, [](CThostFtdcRspFutureSignInField& a, char c[]) {strcpy(a.BankSerial, c);})
		.def_property("TradingDay", [](const CThostFtdcRspFutureSignInField& a) {return encoding_cast(a.TradingDay);}, [](CThostFtdcRspFutureSignInField& a, char c[]) {strcpy(a.TradingDay, c);})
		.def_readwrite("PlateSerial", &CThostFtdcRspFutureSignInField::PlateSerial)
		.def_readwrite("LastFragment", &CThostFtdcRspFutureSignInField::LastFragment)
		.def_readwrite("SessionID", &CThostFtdcRspFutureSignInField::SessionID)
		.def_readwrite("InstallID", &CThostFtdcRspFutureSignInField::InstallID)
		.def_property("UserID", [](const CThostFtdcRspFutureSignInField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcRspFutureSignInField& a, char c[]) {strcpy(a.UserID, c);})
		.def_property("Digest", [](const CThostFtdcRspFutureSignInField& a) {return encoding_cast(a.Digest);}, [](CThostFtdcRspFutureSignInField& a, char c[]) {strcpy(a.Digest, c);})
		.def_property("CurrencyID", [](const CThostFtdcRspFutureSignInField& a) {return encoding_cast(a.CurrencyID);}, [](CThostFtdcRspFutureSignInField& a, char c[]) {strcpy(a.CurrencyID, c);})
		.def_property("DeviceID", [](const CThostFtdcRspFutureSignInField& a) {return encoding_cast(a.DeviceID);}, [](CThostFtdcRspFutureSignInField& a, char c[]) {strcpy(a.DeviceID, c);})
		.def_property("BrokerIDByBank", [](const CThostFtdcRspFutureSignInField& a) {return encoding_cast(a.BrokerIDByBank);}, [](CThostFtdcRspFutureSignInField& a, char c[]) {strcpy(a.BrokerIDByBank, c);})
		.def_property("OperNo", [](const CThostFtdcRspFutureSignInField& a) {return encoding_cast(a.OperNo);}, [](CThostFtdcRspFutureSignInField& a, char c[]) {strcpy(a.OperNo, c);})
		.def_readwrite("RequestID", &CThostFtdcRspFutureSignInField::RequestID)
		.def_readwrite("TID", &CThostFtdcRspFutureSignInField::TID)
		.def_readwrite("ErrorID", &CThostFtdcRspFutureSignInField::ErrorID)
		.def_property("ErrorMsg", [](const CThostFtdcRspFutureSignInField& a) {return encoding_cast(a.ErrorMsg);}, [](CThostFtdcRspFutureSignInField& a, char c[]) {strcpy(a.ErrorMsg, c);})
		.def_property("PinKey", [](const CThostFtdcRspFutureSignInField& a) {return encoding_cast(a.PinKey);}, [](CThostFtdcRspFutureSignInField& a, char c[]) {strcpy(a.PinKey, c);})
		.def_property("MacKey", [](const CThostFtdcRspFutureSignInField& a) {return encoding_cast(a.MacKey);}, [](CThostFtdcRspFutureSignInField& a, char c[]) {strcpy(a.MacKey, c);})
		.def("to_dict", [](const CThostFtdcRspFutureSignInField& a) {py::dict d; d["TradeCode"] = encoding_cast(a.TradeCode); d["BankID"] = encoding_cast(a.BankID); d["BankBranchID"] = encoding_cast(a.BankBranchID); d["BrokerID"] = encoding_cast(a.BrokerID); d["BrokerBranchID"] = encoding_cast(a.BrokerBranchID); d["TradeDate"] = encoding_cast(a.TradeDate); d["TradeTime"] = encoding_cast(a.TradeTime); d["BankSerial"] = encoding_cast(a.BankSerial); d["TradingDay"] = encoding_cast(a.TradingDay); d["PlateSerial"] = a.PlateSerial; d["LastFragment"] = a.LastFragment; d["SessionID"] = a.SessionID; d["InstallID"] = a.InstallID; d["UserID"] = encoding_cast(a.UserID); d["Digest"] = encoding_cast(a.Digest); d["CurrencyID"] = encoding_cast(a.CurrencyID); d["DeviceID"] = encoding_cast(a.DeviceID); d["BrokerIDByBank"] = encoding_cast(a.BrokerIDByBank); d["OperNo"] = encoding_cast(a.OperNo); d["RequestID"] = a.RequestID; d["TID"] = a.TID; d["ErrorID"] = a.ErrorID; d["ErrorMsg"] = encoding_cast(a.ErrorMsg); d["PinKey"] = encoding_cast(a.PinKey); d["MacKey"] = encoding_cast(a.MacKey); return d;});

	py::class_<CThostFtdcReqFutureSignOutField>(m, "CThostFtdcReqFutureSignOutField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcReqFutureSignOutField& a) {return CThostFtdcReqFutureSignOutField(a);})
		.def_property("TradeCode", [](const CThostFtdcReqFutureSignOutField& a) {return encoding_cast(a.TradeCode);}, [](CThostFtdcReqFutureSignOutField& a, char c[]) {strcpy(a.TradeCode, c);})
		.def_property("BankID", [](const CThostFtdcReqFutureSignOutField& a) {return encoding_cast(a.BankID);}, [](CThostFtdcReqFutureSignOutField& a, char c[]) {strcpy(a.BankID, c);})
		.def_property("BankBranchID", [](const CThostFtdcReqFutureSignOutField& a) {return encoding_cast(a.BankBranchID);}, [](CThostFtdcReqFutureSignOutField& a, char c[]) {strcpy(a.BankBranchID, c);})
		.def_property("BrokerID", [](const CThostFtdcReqFutureSignOutField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcReqFutureSignOutField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("BrokerBranchID", [](const CThostFtdcReqFutureSignOutField& a) {return encoding_cast(a.BrokerBranchID);}, [](CThostFtdcReqFutureSignOutField& a, char c[]) {strcpy(a.BrokerBranchID, c);})
		.def_property("TradeDate", [](const CThostFtdcReqFutureSignOutField& a) {return encoding_cast(a.TradeDate);}, [](CThostFtdcReqFutureSignOutField& a, char c[]) {strcpy(a.TradeDate, c);})
		.def_property("TradeTime", [](const CThostFtdcReqFutureSignOutField& a) {return encoding_cast(a.TradeTime);}, [](CThostFtdcReqFutureSignOutField& a, char c[]) {strcpy(a.TradeTime, c);})
		.def_property("BankSerial", [](const CThostFtdcReqFutureSignOutField& a) {return encoding_cast(a.BankSerial);}, [](CThostFtdcReqFutureSignOutField& a, char c[]) {strcpy(a.BankSerial, c);})
		.def_property("TradingDay", [](const CThostFtdcReqFutureSignOutField& a) {return encoding_cast(a.TradingDay);}, [](CThostFtdcReqFutureSignOutField& a, char c[]) {strcpy(a.TradingDay, c);})
		.def_readwrite("PlateSerial", &CThostFtdcReqFutureSignOutField::PlateSerial)
		.def_readwrite("LastFragment", &CThostFtdcReqFutureSignOutField::LastFragment)
		.def_readwrite("SessionID", &CThostFtdcReqFutureSignOutField::SessionID)
		.def_readwrite("InstallID", &CThostFtdcReqFutureSignOutField::InstallID)
		.def_property("UserID", [](const CThostFtdcReqFutureSignOutField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcReqFutureSignOutField& a, char c[]) {strcpy(a.UserID, c);})
		.def_property("Digest", [](const CThostFtdcReqFutureSignOutField& a) {return encoding_cast(a.Digest);}, [](CThostFtdcReqFutureSignOutField& a, char c[]) {strcpy(a.Digest, c);})
		.def_property("CurrencyID", [](const CThostFtdcReqFutureSignOutField& a) {return encoding_cast(a.CurrencyID);}, [](CThostFtdcReqFutureSignOutField& a, char c[]) {strcpy(a.CurrencyID, c);})
		.def_property("DeviceID", [](const CThostFtdcReqFutureSignOutField& a) {return encoding_cast(a.DeviceID);}, [](CThostFtdcReqFutureSignOutField& a, char c[]) {strcpy(a.DeviceID, c);})
		.def_property("BrokerIDByBank", [](const CThostFtdcReqFutureSignOutField& a) {return encoding_cast(a.BrokerIDByBank);}, [](CThostFtdcReqFutureSignOutField& a, char c[]) {strcpy(a.BrokerIDByBank, c);})
		.def_property("OperNo", [](const CThostFtdcReqFutureSignOutField& a) {return encoding_cast(a.OperNo);}, [](CThostFtdcReqFutureSignOutField& a, char c[]) {strcpy(a.OperNo, c);})
		.def_readwrite("RequestID", &CThostFtdcReqFutureSignOutField::RequestID)
		.def_readwrite("TID", &CThostFtdcReqFutureSignOutField::TID)
		.def("to_dict", [](const CThostFtdcReqFutureSignOutField& a) {py::dict d; d["TradeCode"] = encoding_cast(a.TradeCode); d["BankID"] = encoding_cast(a.BankID); d["BankBranchID"] = encoding_cast(a.BankBranchID); d["BrokerID"] = encoding_cast(a.BrokerID); d["BrokerBranchID"] = encoding_cast(a.BrokerBranchID); d["TradeDate"] = encoding_cast(a.TradeDate); d["TradeTime"] = encoding_cast(a.TradeTime); d["BankSerial"] = encoding_cast(a.BankSerial); d["TradingDay"] = encoding_cast(a.TradingDay); d["PlateSerial"] = a.PlateSerial; d["LastFragment"] = a.LastFragment; d["SessionID"] = a.SessionID; d["InstallID"] = a.InstallID; d["UserID"] = encoding_cast(a.UserID); d["Digest"] = encoding_cast(a.Digest); d["CurrencyID"] = encoding_cast(a.CurrencyID); d["DeviceID"] = encoding_cast(a.DeviceID); d["BrokerIDByBank"] = encoding_cast(a.BrokerIDByBank); d["OperNo"] = encoding_cast(a.OperNo); d["RequestID"] = a.RequestID; d["TID"] = a.TID; return d;});

	py::class_<CThostFtdcRspFutureSignOutField>(m, "CThostFtdcRspFutureSignOutField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcRspFutureSignOutField& a) {return CThostFtdcRspFutureSignOutField(a);})
		.def_property("TradeCode", [](const CThostFtdcRspFutureSignOutField& a) {return encoding_cast(a.TradeCode);}, [](CThostFtdcRspFutureSignOutField& a, char c[]) {strcpy(a.TradeCode, c);})
		.def_property("BankID", [](const CThostFtdcRspFutureSignOutField& a) {return encoding_cast(a.BankID);}, [](CThostFtdcRspFutureSignOutField& a, char c[]) {strcpy(a.BankID, c);})
		.def_property("BankBranchID", [](const CThostFtdcRspFutureSignOutField& a) {return encoding_cast(a.BankBranchID);}, [](CThostFtdcRspFutureSignOutField& a, char c[]) {strcpy(a.BankBranchID, c);})
		.def_property("BrokerID", [](const CThostFtdcRspFutureSignOutField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcRspFutureSignOutField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("BrokerBranchID", [](const CThostFtdcRspFutureSignOutField& a) {return encoding_cast(a.BrokerBranchID);}, [](CThostFtdcRspFutureSignOutField& a, char c[]) {strcpy(a.BrokerBranchID, c);})
		.def_property("TradeDate", [](const CThostFtdcRspFutureSignOutField& a) {return encoding_cast(a.TradeDate);}, [](CThostFtdcRspFutureSignOutField& a, char c[]) {strcpy(a.TradeDate, c);})
		.def_property("TradeTime", [](const CThostFtdcRspFutureSignOutField& a) {return encoding_cast(a.TradeTime);}, [](CThostFtdcRspFutureSignOutField& a, char c[]) {strcpy(a.TradeTime, c);})
		.def_property("BankSerial", [](const CThostFtdcRspFutureSignOutField& a) {return encoding_cast(a.BankSerial);}, [](CThostFtdcRspFutureSignOutField& a, char c[]) {strcpy(a.BankSerial, c);})
		.def_property("TradingDay", [](const CThostFtdcRspFutureSignOutField& a) {return encoding_cast(a.TradingDay);}, [](CThostFtdcRspFutureSignOutField& a, char c[]) {strcpy(a.TradingDay, c);})
		.def_readwrite("PlateSerial", &CThostFtdcRspFutureSignOutField::PlateSerial)
		.def_readwrite("LastFragment", &CThostFtdcRspFutureSignOutField::LastFragment)
		.def_readwrite("SessionID", &CThostFtdcRspFutureSignOutField::SessionID)
		.def_readwrite("InstallID", &CThostFtdcRspFutureSignOutField::InstallID)
		.def_property("UserID", [](const CThostFtdcRspFutureSignOutField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcRspFutureSignOutField& a, char c[]) {strcpy(a.UserID, c);})
		.def_property("Digest", [](const CThostFtdcRspFutureSignOutField& a) {return encoding_cast(a.Digest);}, [](CThostFtdcRspFutureSignOutField& a, char c[]) {strcpy(a.Digest, c);})
		.def_property("CurrencyID", [](const CThostFtdcRspFutureSignOutField& a) {return encoding_cast(a.CurrencyID);}, [](CThostFtdcRspFutureSignOutField& a, char c[]) {strcpy(a.CurrencyID, c);})
		.def_property("DeviceID", [](const CThostFtdcRspFutureSignOutField& a) {return encoding_cast(a.DeviceID);}, [](CThostFtdcRspFutureSignOutField& a, char c[]) {strcpy(a.DeviceID, c);})
		.def_property("BrokerIDByBank", [](const CThostFtdcRspFutureSignOutField& a) {return encoding_cast(a.BrokerIDByBank);}, [](CThostFtdcRspFutureSignOutField& a, char c[]) {strcpy(a.BrokerIDByBank, c);})
		.def_property("OperNo", [](const CThostFtdcRspFutureSignOutField& a) {return encoding_cast(a.OperNo);}, [](CThostFtdcRspFutureSignOutField& a, char c[]) {strcpy(a.OperNo, c);})
		.def_readwrite("RequestID", &CThostFtdcRspFutureSignOutField::RequestID)
		.def_readwrite("TID", &CThostFtdcRspFutureSignOutField::TID)
		.def_readwrite("ErrorID", &CThostFtdcRspFutureSignOutField::ErrorID)
		.def_property("ErrorMsg", [](const CThostFtdcRspFutureSignOutField& a) {return encoding_cast(a.ErrorMsg);}, [](CThostFtdcRspFutureSignOutField& a, char c[]) {strcpy(a.ErrorMsg, c);})
		.def("to_dict", [](const CThostFtdcRspFutureSignOutField& a) {py::dict d; d["TradeCode"] = encoding_cast(a.TradeCode); d["BankID"] = encoding_cast(a.BankID); d["BankBranchID"] = encoding_cast(a.BankBranchID); d["BrokerID"] = encoding_cast(a.BrokerID); d["BrokerBranchID"] = encoding_cast(a.BrokerBranchID); d["TradeDate"] = encoding_cast(a.TradeDate); d["TradeTime"] = encoding_cast(a.TradeTime); d["BankSerial"] = encoding_cast(a.BankSerial); d["TradingDay"] = encoding_cast(a.TradingDay); d["PlateSerial"] = a.PlateSerial; d["LastFragment"] = a.LastFragment; d["SessionID"] = a.SessionID; d["InstallID"] = a.InstallID; d["UserID"] = encoding_cast(a.UserID); d["Digest"] = encoding_cast(a.Digest); d["CurrencyID"] = encoding_cast(a.CurrencyID); d["DeviceID"] = encoding_cast(a.DeviceID); d["BrokerIDByBank"] = encoding_cast(a.BrokerIDByBank); d["OperNo"] = encoding_cast(a.OperNo); d["RequestID"] = a.RequestID; d["TID"] = a.TID; d["ErrorID"] = a.ErrorID; d["ErrorMsg"] = encoding_cast(a.ErrorMsg); return d;});

	py::class_<CThostFtdcReqQueryTradeResultBySerialField>(m, "CThostFtdcReqQueryTradeResultBySerialField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcReqQueryTradeResultBySerialField& a) {return CThostFtdcReqQueryTradeResultBySerialField(a);})
		.def_property("TradeCode", [](const CThostFtdcReqQueryTradeResultBySerialField& a) {return encoding_cast(a.TradeCode);}, [](CThostFtdcReqQueryTradeResultBySerialField& a, char c[]) {strcpy(a.TradeCode, c);})
		.def_property("BankID", [](const CThostFtdcReqQueryTradeResultBySerialField& a) {return encoding_cast(a.BankID);}, [](CThostFtdcReqQueryTradeResultBySerialField& a, char c[]) {strcpy(a.BankID, c);})
		.def_property("BankBranchID", [](const CThostFtdcReqQueryTradeResultBySerialField& a) {return encoding_cast(a.BankBranchID);}, [](CThostFtdcReqQueryTradeResultBySerialField& a, char c[]) {strcpy(a.BankBranchID, c);})
		.def_property("BrokerID", [](const CThostFtdcReqQueryTradeResultBySerialField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcReqQueryTradeResultBySerialField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("BrokerBranchID", [](const CThostFtdcReqQueryTradeResultBySerialField& a) {return encoding_cast(a.BrokerBranchID);}, [](CThostFtdcReqQueryTradeResultBySerialField& a, char c[]) {strcpy(a.BrokerBranchID, c);})
		.def_property("TradeDate", [](const CThostFtdcReqQueryTradeResultBySerialField& a) {return encoding_cast(a.TradeDate);}, [](CThostFtdcReqQueryTradeResultBySerialField& a, char c[]) {strcpy(a.TradeDate, c);})
		.def_property("TradeTime", [](const CThostFtdcReqQueryTradeResultBySerialField& a) {return encoding_cast(a.TradeTime);}, [](CThostFtdcReqQueryTradeResultBySerialField& a, char c[]) {strcpy(a.TradeTime, c);})
		.def_property("BankSerial", [](const CThostFtdcReqQueryTradeResultBySerialField& a) {return encoding_cast(a.BankSerial);}, [](CThostFtdcReqQueryTradeResultBySerialField& a, char c[]) {strcpy(a.BankSerial, c);})
		.def_property("TradingDay", [](const CThostFtdcReqQueryTradeResultBySerialField& a) {return encoding_cast(a.TradingDay);}, [](CThostFtdcReqQueryTradeResultBySerialField& a, char c[]) {strcpy(a.TradingDay, c);})
		.def_readwrite("PlateSerial", &CThostFtdcReqQueryTradeResultBySerialField::PlateSerial)
		.def_readwrite("LastFragment", &CThostFtdcReqQueryTradeResultBySerialField::LastFragment)
		.def_readwrite("SessionID", &CThostFtdcReqQueryTradeResultBySerialField::SessionID)
		.def_readwrite("Reference", &CThostFtdcReqQueryTradeResultBySerialField::Reference)
		.def_readwrite("RefrenceIssureType", &CThostFtdcReqQueryTradeResultBySerialField::RefrenceIssureType)
		.def_property("RefrenceIssure", [](const CThostFtdcReqQueryTradeResultBySerialField& a) {return encoding_cast(a.RefrenceIssure);}, [](CThostFtdcReqQueryTradeResultBySerialField& a, char c[]) {strcpy(a.RefrenceIssure, c);})
		.def_property("CustomerName", [](const CThostFtdcReqQueryTradeResultBySerialField& a) {return encoding_cast(a.CustomerName);}, [](CThostFtdcReqQueryTradeResultBySerialField& a, char c[]) {strcpy(a.CustomerName, c);})
		.def_readwrite("IdCardType", &CThostFtdcReqQueryTradeResultBySerialField::IdCardType)
		.def_property("IdentifiedCardNo", [](const CThostFtdcReqQueryTradeResultBySerialField& a) {return encoding_cast(a.IdentifiedCardNo);}, [](CThostFtdcReqQueryTradeResultBySerialField& a, char c[]) {strcpy(a.IdentifiedCardNo, c);})
		.def_readwrite("CustType", &CThostFtdcReqQueryTradeResultBySerialField::CustType)
		.def_property("BankAccount", [](const CThostFtdcReqQueryTradeResultBySerialField& a) {return encoding_cast(a.BankAccount);}, [](CThostFtdcReqQueryTradeResultBySerialField& a, char c[]) {strcpy(a.BankAccount, c);})
		.def_property("BankPassWord", [](const CThostFtdcReqQueryTradeResultBySerialField& a) {return encoding_cast(a.BankPassWord);}, [](CThostFtdcReqQueryTradeResultBySerialField& a, char c[]) {strcpy(a.BankPassWord, c);})
		.def_property("AccountID", [](const CThostFtdcReqQueryTradeResultBySerialField& a) {return encoding_cast(a.AccountID);}, [](CThostFtdcReqQueryTradeResultBySerialField& a, char c[]) {strcpy(a.AccountID, c);})
		.def_property("Password", [](const CThostFtdcReqQueryTradeResultBySerialField& a) {return encoding_cast(a.Password);}, [](CThostFtdcReqQueryTradeResultBySerialField& a, char c[]) {strcpy(a.Password, c);})
		.def_property("CurrencyID", [](const CThostFtdcReqQueryTradeResultBySerialField& a) {return encoding_cast(a.CurrencyID);}, [](CThostFtdcReqQueryTradeResultBySerialField& a, char c[]) {strcpy(a.CurrencyID, c);})
		.def_readwrite("TradeAmount", &CThostFtdcReqQueryTradeResultBySerialField::TradeAmount)
		.def_property("Digest", [](const CThostFtdcReqQueryTradeResultBySerialField& a) {return encoding_cast(a.Digest);}, [](CThostFtdcReqQueryTradeResultBySerialField& a, char c[]) {strcpy(a.Digest, c);})
		.def_property("LongCustomerName", [](const CThostFtdcReqQueryTradeResultBySerialField& a) {return encoding_cast(a.LongCustomerName);}, [](CThostFtdcReqQueryTradeResultBySerialField& a, char c[]) {strcpy(a.LongCustomerName, c);})
		.def("to_dict", [](const CThostFtdcReqQueryTradeResultBySerialField& a) {py::dict d; d["TradeCode"] = encoding_cast(a.TradeCode); d["BankID"] = encoding_cast(a.BankID); d["BankBranchID"] = encoding_cast(a.BankBranchID); d["BrokerID"] = encoding_cast(a.BrokerID); d["BrokerBranchID"] = encoding_cast(a.BrokerBranchID); d["TradeDate"] = encoding_cast(a.TradeDate); d["TradeTime"] = encoding_cast(a.TradeTime); d["BankSerial"] = encoding_cast(a.BankSerial); d["TradingDay"] = encoding_cast(a.TradingDay); d["PlateSerial"] = a.PlateSerial; d["LastFragment"] = a.LastFragment; d["SessionID"] = a.SessionID; d["Reference"] = a.Reference; d["RefrenceIssureType"] = a.RefrenceIssureType; d["RefrenceIssure"] = encoding_cast(a.RefrenceIssure); d["CustomerName"] = encoding_cast(a.CustomerName); d["IdCardType"] = a.IdCardType; d["IdentifiedCardNo"] = encoding_cast(a.IdentifiedCardNo); d["CustType"] = a.CustType; d["BankAccount"] = encoding_cast(a.BankAccount); d["BankPassWord"] = encoding_cast(a.BankPassWord); d["AccountID"] = encoding_cast(a.AccountID); d["Password"] = encoding_cast(a.Password); d["CurrencyID"] = encoding_cast(a.CurrencyID); d["TradeAmount"] = a.TradeAmount; d["Digest"] = encoding_cast(a.Digest); d["LongCustomerName"] = encoding_cast(a.LongCustomerName); return d;});

	py::class_<CThostFtdcRspQueryTradeResultBySerialField>(m, "CThostFtdcRspQueryTradeResultBySerialField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcRspQueryTradeResultBySerialField& a) {return CThostFtdcRspQueryTradeResultBySerialField(a);})
		.def_property("TradeCode", [](const CThostFtdcRspQueryTradeResultBySerialField& a) {return encoding_cast(a.TradeCode);}, [](CThostFtdcRspQueryTradeResultBySerialField& a, char c[]) {strcpy(a.TradeCode, c);})
		.def_property("BankID", [](const CThostFtdcRspQueryTradeResultBySerialField& a) {return encoding_cast(a.BankID);}, [](CThostFtdcRspQueryTradeResultBySerialField& a, char c[]) {strcpy(a.BankID, c);})
		.def_property("BankBranchID", [](const CThostFtdcRspQueryTradeResultBySerialField& a) {return encoding_cast(a.BankBranchID);}, [](CThostFtdcRspQueryTradeResultBySerialField& a, char c[]) {strcpy(a.BankBranchID, c);})
		.def_property("BrokerID", [](const CThostFtdcRspQueryTradeResultBySerialField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcRspQueryTradeResultBySerialField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("BrokerBranchID", [](const CThostFtdcRspQueryTradeResultBySerialField& a) {return encoding_cast(a.BrokerBranchID);}, [](CThostFtdcRspQueryTradeResultBySerialField& a, char c[]) {strcpy(a.BrokerBranchID, c);})
		.def_property("TradeDate", [](const CThostFtdcRspQueryTradeResultBySerialField& a) {return encoding_cast(a.TradeDate);}, [](CThostFtdcRspQueryTradeResultBySerialField& a, char c[]) {strcpy(a.TradeDate, c);})
		.def_property("TradeTime", [](const CThostFtdcRspQueryTradeResultBySerialField& a) {return encoding_cast(a.TradeTime);}, [](CThostFtdcRspQueryTradeResultBySerialField& a, char c[]) {strcpy(a.TradeTime, c);})
		.def_property("BankSerial", [](const CThostFtdcRspQueryTradeResultBySerialField& a) {return encoding_cast(a.BankSerial);}, [](CThostFtdcRspQueryTradeResultBySerialField& a, char c[]) {strcpy(a.BankSerial, c);})
		.def_property("TradingDay", [](const CThostFtdcRspQueryTradeResultBySerialField& a) {return encoding_cast(a.TradingDay);}, [](CThostFtdcRspQueryTradeResultBySerialField& a, char c[]) {strcpy(a.TradingDay, c);})
		.def_readwrite("PlateSerial", &CThostFtdcRspQueryTradeResultBySerialField::PlateSerial)
		.def_readwrite("LastFragment", &CThostFtdcRspQueryTradeResultBySerialField::LastFragment)
		.def_readwrite("SessionID", &CThostFtdcRspQueryTradeResultBySerialField::SessionID)
		.def_readwrite("ErrorID", &CThostFtdcRspQueryTradeResultBySerialField::ErrorID)
		.def_property("ErrorMsg", [](const CThostFtdcRspQueryTradeResultBySerialField& a) {return encoding_cast(a.ErrorMsg);}, [](CThostFtdcRspQueryTradeResultBySerialField& a, char c[]) {strcpy(a.ErrorMsg, c);})
		.def_readwrite("Reference", &CThostFtdcRspQueryTradeResultBySerialField::Reference)
		.def_readwrite("RefrenceIssureType", &CThostFtdcRspQueryTradeResultBySerialField::RefrenceIssureType)
		.def_property("RefrenceIssure", [](const CThostFtdcRspQueryTradeResultBySerialField& a) {return encoding_cast(a.RefrenceIssure);}, [](CThostFtdcRspQueryTradeResultBySerialField& a, char c[]) {strcpy(a.RefrenceIssure, c);})
		.def_property("OriginReturnCode", [](const CThostFtdcRspQueryTradeResultBySerialField& a) {return encoding_cast(a.OriginReturnCode);}, [](CThostFtdcRspQueryTradeResultBySerialField& a, char c[]) {strcpy(a.OriginReturnCode, c);})
		.def_property("OriginDescrInfoForReturnCode", [](const CThostFtdcRspQueryTradeResultBySerialField& a) {return encoding_cast(a.OriginDescrInfoForReturnCode);}, [](CThostFtdcRspQueryTradeResultBySerialField& a, char c[]) {strcpy(a.OriginDescrInfoForReturnCode, c);})
		.def_property("BankAccount", [](const CThostFtdcRspQueryTradeResultBySerialField& a) {return encoding_cast(a.BankAccount);}, [](CThostFtdcRspQueryTradeResultBySerialField& a, char c[]) {strcpy(a.BankAccount, c);})
		.def_property("BankPassWord", [](const CThostFtdcRspQueryTradeResultBySerialField& a) {return encoding_cast(a.BankPassWord);}, [](CThostFtdcRspQueryTradeResultBySerialField& a, char c[]) {strcpy(a.BankPassWord, c);})
		.def_property("AccountID", [](const CThostFtdcRspQueryTradeResultBySerialField& a) {return encoding_cast(a.AccountID);}, [](CThostFtdcRspQueryTradeResultBySerialField& a, char c[]) {strcpy(a.AccountID, c);})
		.def_property("Password", [](const CThostFtdcRspQueryTradeResultBySerialField& a) {return encoding_cast(a.Password);}, [](CThostFtdcRspQueryTradeResultBySerialField& a, char c[]) {strcpy(a.Password, c);})
		.def_property("CurrencyID", [](const CThostFtdcRspQueryTradeResultBySerialField& a) {return encoding_cast(a.CurrencyID);}, [](CThostFtdcRspQueryTradeResultBySerialField& a, char c[]) {strcpy(a.CurrencyID, c);})
		.def_readwrite("TradeAmount", &CThostFtdcRspQueryTradeResultBySerialField::TradeAmount)
		.def_property("Digest", [](const CThostFtdcRspQueryTradeResultBySerialField& a) {return encoding_cast(a.Digest);}, [](CThostFtdcRspQueryTradeResultBySerialField& a, char c[]) {strcpy(a.Digest, c);})
		.def("to_dict", [](const CThostFtdcRspQueryTradeResultBySerialField& a) {py::dict d; d["TradeCode"] = encoding_cast(a.TradeCode); d["BankID"] = encoding_cast(a.BankID); d["BankBranchID"] = encoding_cast(a.BankBranchID); d["BrokerID"] = encoding_cast(a.BrokerID); d["BrokerBranchID"] = encoding_cast(a.BrokerBranchID); d["TradeDate"] = encoding_cast(a.TradeDate); d["TradeTime"] = encoding_cast(a.TradeTime); d["BankSerial"] = encoding_cast(a.BankSerial); d["TradingDay"] = encoding_cast(a.TradingDay); d["PlateSerial"] = a.PlateSerial; d["LastFragment"] = a.LastFragment; d["SessionID"] = a.SessionID; d["ErrorID"] = a.ErrorID; d["ErrorMsg"] = encoding_cast(a.ErrorMsg); d["Reference"] = a.Reference; d["RefrenceIssureType"] = a.RefrenceIssureType; d["RefrenceIssure"] = encoding_cast(a.RefrenceIssure); d["OriginReturnCode"] = encoding_cast(a.OriginReturnCode); d["OriginDescrInfoForReturnCode"] = encoding_cast(a.OriginDescrInfoForReturnCode); d["BankAccount"] = encoding_cast(a.BankAccount); d["BankPassWord"] = encoding_cast(a.BankPassWord); d["AccountID"] = encoding_cast(a.AccountID); d["Password"] = encoding_cast(a.Password); d["CurrencyID"] = encoding_cast(a.CurrencyID); d["TradeAmount"] = a.TradeAmount; d["Digest"] = encoding_cast(a.Digest); return d;});

	py::class_<CThostFtdcReqDayEndFileReadyField>(m, "CThostFtdcReqDayEndFileReadyField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcReqDayEndFileReadyField& a) {return CThostFtdcReqDayEndFileReadyField(a);})
		.def_property("TradeCode", [](const CThostFtdcReqDayEndFileReadyField& a) {return encoding_cast(a.TradeCode);}, [](CThostFtdcReqDayEndFileReadyField& a, char c[]) {strcpy(a.TradeCode, c);})
		.def_property("BankID", [](const CThostFtdcReqDayEndFileReadyField& a) {return encoding_cast(a.BankID);}, [](CThostFtdcReqDayEndFileReadyField& a, char c[]) {strcpy(a.BankID, c);})
		.def_property("BankBranchID", [](const CThostFtdcReqDayEndFileReadyField& a) {return encoding_cast(a.BankBranchID);}, [](CThostFtdcReqDayEndFileReadyField& a, char c[]) {strcpy(a.BankBranchID, c);})
		.def_property("BrokerID", [](const CThostFtdcReqDayEndFileReadyField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcReqDayEndFileReadyField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("BrokerBranchID", [](const CThostFtdcReqDayEndFileReadyField& a) {return encoding_cast(a.BrokerBranchID);}, [](CThostFtdcReqDayEndFileReadyField& a, char c[]) {strcpy(a.BrokerBranchID, c);})
		.def_property("TradeDate", [](const CThostFtdcReqDayEndFileReadyField& a) {return encoding_cast(a.TradeDate);}, [](CThostFtdcReqDayEndFileReadyField& a, char c[]) {strcpy(a.TradeDate, c);})
		.def_property("TradeTime", [](const CThostFtdcReqDayEndFileReadyField& a) {return encoding_cast(a.TradeTime);}, [](CThostFtdcReqDayEndFileReadyField& a, char c[]) {strcpy(a.TradeTime, c);})
		.def_property("BankSerial", [](const CThostFtdcReqDayEndFileReadyField& a) {return encoding_cast(a.BankSerial);}, [](CThostFtdcReqDayEndFileReadyField& a, char c[]) {strcpy(a.BankSerial, c);})
		.def_property("TradingDay", [](const CThostFtdcReqDayEndFileReadyField& a) {return encoding_cast(a.TradingDay);}, [](CThostFtdcReqDayEndFileReadyField& a, char c[]) {strcpy(a.TradingDay, c);})
		.def_readwrite("PlateSerial", &CThostFtdcReqDayEndFileReadyField::PlateSerial)
		.def_readwrite("LastFragment", &CThostFtdcReqDayEndFileReadyField::LastFragment)
		.def_readwrite("SessionID", &CThostFtdcReqDayEndFileReadyField::SessionID)
		.def_readwrite("FileBusinessCode", &CThostFtdcReqDayEndFileReadyField::FileBusinessCode)
		.def_property("Digest", [](const CThostFtdcReqDayEndFileReadyField& a) {return encoding_cast(a.Digest);}, [](CThostFtdcReqDayEndFileReadyField& a, char c[]) {strcpy(a.Digest, c);})
		.def("to_dict", [](const CThostFtdcReqDayEndFileReadyField& a) {py::dict d; d["TradeCode"] = encoding_cast(a.TradeCode); d["BankID"] = encoding_cast(a.BankID); d["BankBranchID"] = encoding_cast(a.BankBranchID); d["BrokerID"] = encoding_cast(a.BrokerID); d["BrokerBranchID"] = encoding_cast(a.BrokerBranchID); d["TradeDate"] = encoding_cast(a.TradeDate); d["TradeTime"] = encoding_cast(a.TradeTime); d["BankSerial"] = encoding_cast(a.BankSerial); d["TradingDay"] = encoding_cast(a.TradingDay); d["PlateSerial"] = a.PlateSerial; d["LastFragment"] = a.LastFragment; d["SessionID"] = a.SessionID; d["FileBusinessCode"] = a.FileBusinessCode; d["Digest"] = encoding_cast(a.Digest); return d;});

	py::class_<CThostFtdcReturnResultField>(m, "CThostFtdcReturnResultField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcReturnResultField& a) {return CThostFtdcReturnResultField(a);})
		.def_property("ReturnCode", [](const CThostFtdcReturnResultField& a) {return encoding_cast(a.ReturnCode);}, [](CThostFtdcReturnResultField& a, char c[]) {strcpy(a.ReturnCode, c);})
		.def_property("DescrInfoForReturnCode", [](const CThostFtdcReturnResultField& a) {return encoding_cast(a.DescrInfoForReturnCode);}, [](CThostFtdcReturnResultField& a, char c[]) {strcpy(a.DescrInfoForReturnCode, c);})
		.def("to_dict", [](const CThostFtdcReturnResultField& a) {py::dict d; d["ReturnCode"] = encoding_cast(a.ReturnCode); d["DescrInfoForReturnCode"] = encoding_cast(a.DescrInfoForReturnCode); return d;});

	py::class_<CThostFtdcVerifyFuturePasswordField>(m, "CThostFtdcVerifyFuturePasswordField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcVerifyFuturePasswordField& a) {return CThostFtdcVerifyFuturePasswordField(a);})
		.def_property("TradeCode", [](const CThostFtdcVerifyFuturePasswordField& a) {return encoding_cast(a.TradeCode);}, [](CThostFtdcVerifyFuturePasswordField& a, char c[]) {strcpy(a.TradeCode, c);})
		.def_property("BankID", [](const CThostFtdcVerifyFuturePasswordField& a) {return encoding_cast(a.BankID);}, [](CThostFtdcVerifyFuturePasswordField& a, char c[]) {strcpy(a.BankID, c);})
		.def_property("BankBranchID", [](const CThostFtdcVerifyFuturePasswordField& a) {return encoding_cast(a.BankBranchID);}, [](CThostFtdcVerifyFuturePasswordField& a, char c[]) {strcpy(a.BankBranchID, c);})
		.def_property("BrokerID", [](const CThostFtdcVerifyFuturePasswordField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcVerifyFuturePasswordField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("BrokerBranchID", [](const CThostFtdcVerifyFuturePasswordField& a) {return encoding_cast(a.BrokerBranchID);}, [](CThostFtdcVerifyFuturePasswordField& a, char c[]) {strcpy(a.BrokerBranchID, c);})
		.def_property("TradeDate", [](const CThostFtdcVerifyFuturePasswordField& a) {return encoding_cast(a.TradeDate);}, [](CThostFtdcVerifyFuturePasswordField& a, char c[]) {strcpy(a.TradeDate, c);})
		.def_property("TradeTime", [](const CThostFtdcVerifyFuturePasswordField& a) {return encoding_cast(a.TradeTime);}, [](CThostFtdcVerifyFuturePasswordField& a, char c[]) {strcpy(a.TradeTime, c);})
		.def_property("BankSerial", [](const CThostFtdcVerifyFuturePasswordField& a) {return encoding_cast(a.BankSerial);}, [](CThostFtdcVerifyFuturePasswordField& a, char c[]) {strcpy(a.BankSerial, c);})
		.def_property("TradingDay", [](const CThostFtdcVerifyFuturePasswordField& a) {return encoding_cast(a.TradingDay);}, [](CThostFtdcVerifyFuturePasswordField& a, char c[]) {strcpy(a.TradingDay, c);})
		.def_readwrite("PlateSerial", &CThostFtdcVerifyFuturePasswordField::PlateSerial)
		.def_readwrite("LastFragment", &CThostFtdcVerifyFuturePasswordField::LastFragment)
		.def_readwrite("SessionID", &CThostFtdcVerifyFuturePasswordField::SessionID)
		.def_property("AccountID", [](const CThostFtdcVerifyFuturePasswordField& a) {return encoding_cast(a.AccountID);}, [](CThostFtdcVerifyFuturePasswordField& a, char c[]) {strcpy(a.AccountID, c);})
		.def_property("Password", [](const CThostFtdcVerifyFuturePasswordField& a) {return encoding_cast(a.Password);}, [](CThostFtdcVerifyFuturePasswordField& a, char c[]) {strcpy(a.Password, c);})
		.def_property("BankAccount", [](const CThostFtdcVerifyFuturePasswordField& a) {return encoding_cast(a.BankAccount);}, [](CThostFtdcVerifyFuturePasswordField& a, char c[]) {strcpy(a.BankAccount, c);})
		.def_property("BankPassWord", [](const CThostFtdcVerifyFuturePasswordField& a) {return encoding_cast(a.BankPassWord);}, [](CThostFtdcVerifyFuturePasswordField& a, char c[]) {strcpy(a.BankPassWord, c);})
		.def_readwrite("InstallID", &CThostFtdcVerifyFuturePasswordField::InstallID)
		.def_readwrite("TID", &CThostFtdcVerifyFuturePasswordField::TID)
		.def_property("CurrencyID", [](const CThostFtdcVerifyFuturePasswordField& a) {return encoding_cast(a.CurrencyID);}, [](CThostFtdcVerifyFuturePasswordField& a, char c[]) {strcpy(a.CurrencyID, c);})
		.def("to_dict", [](const CThostFtdcVerifyFuturePasswordField& a) {py::dict d; d["TradeCode"] = encoding_cast(a.TradeCode); d["BankID"] = encoding_cast(a.BankID); d["BankBranchID"] = encoding_cast(a.BankBranchID); d["BrokerID"] = encoding_cast(a.BrokerID); d["BrokerBranchID"] = encoding_cast(a.BrokerBranchID); d["TradeDate"] = encoding_cast(a.TradeDate); d["TradeTime"] = encoding_cast(a.TradeTime); d["BankSerial"] = encoding_cast(a.BankSerial); d["TradingDay"] = encoding_cast(a.TradingDay); d["PlateSerial"] = a.PlateSerial; d["LastFragment"] = a.LastFragment; d["SessionID"] = a.SessionID; d["AccountID"] = encoding_cast(a.AccountID); d["Password"] = encoding_cast(a.Password); d["BankAccount"] = encoding_cast(a.BankAccount); d["BankPassWord"] = encoding_cast(a.BankPassWord); d["InstallID"] = a.InstallID; d["TID"] = a.TID; d["CurrencyID"] = encoding_cast(a.CurrencyID); return d;});

	py::class_<CThostFtdcVerifyCustInfoField>(m, "CThostFtdcVerifyCustInfoField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcVerifyCustInfoField& a) {return CThostFtdcVerifyCustInfoField(a);})
		.def_property("CustomerName", [](const CThostFtdcVerifyCustInfoField& a) {return encoding_cast(a.CustomerName);}, [](CThostFtdcVerifyCustInfoField& a, char c[]) {strcpy(a.CustomerName, c);})
		.def_readwrite("IdCardType", &CThostFtdcVerifyCustInfoField::IdCardType)
		.def_property("IdentifiedCardNo", [](const CThostFtdcVerifyCustInfoField& a) {return encoding_cast(a.IdentifiedCardNo);}, [](CThostFtdcVerifyCustInfoField& a, char c[]) {strcpy(a.IdentifiedCardNo, c);})
		.def_readwrite("CustType", &CThostFtdcVerifyCustInfoField::CustType)
		.def_property("LongCustomerName", [](const CThostFtdcVerifyCustInfoField& a) {return encoding_cast(a.LongCustomerName);}, [](CThostFtdcVerifyCustInfoField& a, char c[]) {strcpy(a.LongCustomerName, c);})
		.def("to_dict", [](const CThostFtdcVerifyCustInfoField& a) {py::dict d; d["CustomerName"] = encoding_cast(a.CustomerName); d["IdCardType"] = a.IdCardType; d["IdentifiedCardNo"] = encoding_cast(a.IdentifiedCardNo); d["CustType"] = a.CustType; d["LongCustomerName"] = encoding_cast(a.LongCustomerName); return d;});

	py::class_<CThostFtdcVerifyFuturePasswordAndCustInfoField>(m, "CThostFtdcVerifyFuturePasswordAndCustInfoField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcVerifyFuturePasswordAndCustInfoField& a) {return CThostFtdcVerifyFuturePasswordAndCustInfoField(a);})
		.def_property("CustomerName", [](const CThostFtdcVerifyFuturePasswordAndCustInfoField& a) {return encoding_cast(a.CustomerName);}, [](CThostFtdcVerifyFuturePasswordAndCustInfoField& a, char c[]) {strcpy(a.CustomerName, c);})
		.def_readwrite("IdCardType", &CThostFtdcVerifyFuturePasswordAndCustInfoField::IdCardType)
		.def_property("IdentifiedCardNo", [](const CThostFtdcVerifyFuturePasswordAndCustInfoField& a) {return encoding_cast(a.IdentifiedCardNo);}, [](CThostFtdcVerifyFuturePasswordAndCustInfoField& a, char c[]) {strcpy(a.IdentifiedCardNo, c);})
		.def_readwrite("CustType", &CThostFtdcVerifyFuturePasswordAndCustInfoField::CustType)
		.def_property("AccountID", [](const CThostFtdcVerifyFuturePasswordAndCustInfoField& a) {return encoding_cast(a.AccountID);}, [](CThostFtdcVerifyFuturePasswordAndCustInfoField& a, char c[]) {strcpy(a.AccountID, c);})
		.def_property("Password", [](const CThostFtdcVerifyFuturePasswordAndCustInfoField& a) {return encoding_cast(a.Password);}, [](CThostFtdcVerifyFuturePasswordAndCustInfoField& a, char c[]) {strcpy(a.Password, c);})
		.def_property("CurrencyID", [](const CThostFtdcVerifyFuturePasswordAndCustInfoField& a) {return encoding_cast(a.CurrencyID);}, [](CThostFtdcVerifyFuturePasswordAndCustInfoField& a, char c[]) {strcpy(a.CurrencyID, c);})
		.def_property("LongCustomerName", [](const CThostFtdcVerifyFuturePasswordAndCustInfoField& a) {return encoding_cast(a.LongCustomerName);}, [](CThostFtdcVerifyFuturePasswordAndCustInfoField& a, char c[]) {strcpy(a.LongCustomerName, c);})
		.def("to_dict", [](const CThostFtdcVerifyFuturePasswordAndCustInfoField& a) {py::dict d; d["CustomerName"] = encoding_cast(a.CustomerName); d["IdCardType"] = a.IdCardType; d["IdentifiedCardNo"] = encoding_cast(a.IdentifiedCardNo); d["CustType"] = a.CustType; d["AccountID"] = encoding_cast(a.AccountID); d["Password"] = encoding_cast(a.Password); d["CurrencyID"] = encoding_cast(a.CurrencyID); d["LongCustomerName"] = encoding_cast(a.LongCustomerName); return d;});

	py::class_<CThostFtdcDepositResultInformField>(m, "CThostFtdcDepositResultInformField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcDepositResultInformField& a) {return CThostFtdcDepositResultInformField(a);})
		.def_property("DepositSeqNo", [](const CThostFtdcDepositResultInformField& a) {return encoding_cast(a.DepositSeqNo);}, [](CThostFtdcDepositResultInformField& a, char c[]) {strcpy(a.DepositSeqNo, c);})
		.def_property("BrokerID", [](const CThostFtdcDepositResultInformField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcDepositResultInformField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcDepositResultInformField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcDepositResultInformField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_readwrite("Deposit", &CThostFtdcDepositResultInformField::Deposit)
		.def_readwrite("RequestID", &CThostFtdcDepositResultInformField::RequestID)
		.def_property("ReturnCode", [](const CThostFtdcDepositResultInformField& a) {return encoding_cast(a.ReturnCode);}, [](CThostFtdcDepositResultInformField& a, char c[]) {strcpy(a.ReturnCode, c);})
		.def_property("DescrInfoForReturnCode", [](const CThostFtdcDepositResultInformField& a) {return encoding_cast(a.DescrInfoForReturnCode);}, [](CThostFtdcDepositResultInformField& a, char c[]) {strcpy(a.DescrInfoForReturnCode, c);})
		.def("to_dict", [](const CThostFtdcDepositResultInformField& a) {py::dict d; d["DepositSeqNo"] = encoding_cast(a.DepositSeqNo); d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["Deposit"] = a.Deposit; d["RequestID"] = a.RequestID; d["ReturnCode"] = encoding_cast(a.ReturnCode); d["DescrInfoForReturnCode"] = encoding_cast(a.DescrInfoForReturnCode); return d;});

	py::class_<CThostFtdcReqSyncKeyField>(m, "CThostFtdcReqSyncKeyField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcReqSyncKeyField& a) {return CThostFtdcReqSyncKeyField(a);})
		.def_property("TradeCode", [](const CThostFtdcReqSyncKeyField& a) {return encoding_cast(a.TradeCode);}, [](CThostFtdcReqSyncKeyField& a, char c[]) {strcpy(a.TradeCode, c);})
		.def_property("BankID", [](const CThostFtdcReqSyncKeyField& a) {return encoding_cast(a.BankID);}, [](CThostFtdcReqSyncKeyField& a, char c[]) {strcpy(a.BankID, c);})
		.def_property("BankBranchID", [](const CThostFtdcReqSyncKeyField& a) {return encoding_cast(a.BankBranchID);}, [](CThostFtdcReqSyncKeyField& a, char c[]) {strcpy(a.BankBranchID, c);})
		.def_property("BrokerID", [](const CThostFtdcReqSyncKeyField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcReqSyncKeyField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("BrokerBranchID", [](const CThostFtdcReqSyncKeyField& a) {return encoding_cast(a.BrokerBranchID);}, [](CThostFtdcReqSyncKeyField& a, char c[]) {strcpy(a.BrokerBranchID, c);})
		.def_property("TradeDate", [](const CThostFtdcReqSyncKeyField& a) {return encoding_cast(a.TradeDate);}, [](CThostFtdcReqSyncKeyField& a, char c[]) {strcpy(a.TradeDate, c);})
		.def_property("TradeTime", [](const CThostFtdcReqSyncKeyField& a) {return encoding_cast(a.TradeTime);}, [](CThostFtdcReqSyncKeyField& a, char c[]) {strcpy(a.TradeTime, c);})
		.def_property("BankSerial", [](const CThostFtdcReqSyncKeyField& a) {return encoding_cast(a.BankSerial);}, [](CThostFtdcReqSyncKeyField& a, char c[]) {strcpy(a.BankSerial, c);})
		.def_property("TradingDay", [](const CThostFtdcReqSyncKeyField& a) {return encoding_cast(a.TradingDay);}, [](CThostFtdcReqSyncKeyField& a, char c[]) {strcpy(a.TradingDay, c);})
		.def_readwrite("PlateSerial", &CThostFtdcReqSyncKeyField::PlateSerial)
		.def_readwrite("LastFragment", &CThostFtdcReqSyncKeyField::LastFragment)
		.def_readwrite("SessionID", &CThostFtdcReqSyncKeyField::SessionID)
		.def_readwrite("InstallID", &CThostFtdcReqSyncKeyField::InstallID)
		.def_property("UserID", [](const CThostFtdcReqSyncKeyField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcReqSyncKeyField& a, char c[]) {strcpy(a.UserID, c);})
		.def_property("Message", [](const CThostFtdcReqSyncKeyField& a) {return encoding_cast(a.Message);}, [](CThostFtdcReqSyncKeyField& a, char c[]) {strcpy(a.Message, c);})
		.def_property("DeviceID", [](const CThostFtdcReqSyncKeyField& a) {return encoding_cast(a.DeviceID);}, [](CThostFtdcReqSyncKeyField& a, char c[]) {strcpy(a.DeviceID, c);})
		.def_property("BrokerIDByBank", [](const CThostFtdcReqSyncKeyField& a) {return encoding_cast(a.BrokerIDByBank);}, [](CThostFtdcReqSyncKeyField& a, char c[]) {strcpy(a.BrokerIDByBank, c);})
		.def_property("OperNo", [](const CThostFtdcReqSyncKeyField& a) {return encoding_cast(a.OperNo);}, [](CThostFtdcReqSyncKeyField& a, char c[]) {strcpy(a.OperNo, c);})
		.def_readwrite("RequestID", &CThostFtdcReqSyncKeyField::RequestID)
		.def_readwrite("TID", &CThostFtdcReqSyncKeyField::TID)
		.def("to_dict", [](const CThostFtdcReqSyncKeyField& a) {py::dict d; d["TradeCode"] = encoding_cast(a.TradeCode); d["BankID"] = encoding_cast(a.BankID); d["BankBranchID"] = encoding_cast(a.BankBranchID); d["BrokerID"] = encoding_cast(a.BrokerID); d["BrokerBranchID"] = encoding_cast(a.BrokerBranchID); d["TradeDate"] = encoding_cast(a.TradeDate); d["TradeTime"] = encoding_cast(a.TradeTime); d["BankSerial"] = encoding_cast(a.BankSerial); d["TradingDay"] = encoding_cast(a.TradingDay); d["PlateSerial"] = a.PlateSerial; d["LastFragment"] = a.LastFragment; d["SessionID"] = a.SessionID; d["InstallID"] = a.InstallID; d["UserID"] = encoding_cast(a.UserID); d["Message"] = encoding_cast(a.Message); d["DeviceID"] = encoding_cast(a.DeviceID); d["BrokerIDByBank"] = encoding_cast(a.BrokerIDByBank); d["OperNo"] = encoding_cast(a.OperNo); d["RequestID"] = a.RequestID; d["TID"] = a.TID; return d;});

	py::class_<CThostFtdcRspSyncKeyField>(m, "CThostFtdcRspSyncKeyField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcRspSyncKeyField& a) {return CThostFtdcRspSyncKeyField(a);})
		.def_property("TradeCode", [](const CThostFtdcRspSyncKeyField& a) {return encoding_cast(a.TradeCode);}, [](CThostFtdcRspSyncKeyField& a, char c[]) {strcpy(a.TradeCode, c);})
		.def_property("BankID", [](const CThostFtdcRspSyncKeyField& a) {return encoding_cast(a.BankID);}, [](CThostFtdcRspSyncKeyField& a, char c[]) {strcpy(a.BankID, c);})
		.def_property("BankBranchID", [](const CThostFtdcRspSyncKeyField& a) {return encoding_cast(a.BankBranchID);}, [](CThostFtdcRspSyncKeyField& a, char c[]) {strcpy(a.BankBranchID, c);})
		.def_property("BrokerID", [](const CThostFtdcRspSyncKeyField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcRspSyncKeyField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("BrokerBranchID", [](const CThostFtdcRspSyncKeyField& a) {return encoding_cast(a.BrokerBranchID);}, [](CThostFtdcRspSyncKeyField& a, char c[]) {strcpy(a.BrokerBranchID, c);})
		.def_property("TradeDate", [](const CThostFtdcRspSyncKeyField& a) {return encoding_cast(a.TradeDate);}, [](CThostFtdcRspSyncKeyField& a, char c[]) {strcpy(a.TradeDate, c);})
		.def_property("TradeTime", [](const CThostFtdcRspSyncKeyField& a) {return encoding_cast(a.TradeTime);}, [](CThostFtdcRspSyncKeyField& a, char c[]) {strcpy(a.TradeTime, c);})
		.def_property("BankSerial", [](const CThostFtdcRspSyncKeyField& a) {return encoding_cast(a.BankSerial);}, [](CThostFtdcRspSyncKeyField& a, char c[]) {strcpy(a.BankSerial, c);})
		.def_property("TradingDay", [](const CThostFtdcRspSyncKeyField& a) {return encoding_cast(a.TradingDay);}, [](CThostFtdcRspSyncKeyField& a, char c[]) {strcpy(a.TradingDay, c);})
		.def_readwrite("PlateSerial", &CThostFtdcRspSyncKeyField::PlateSerial)
		.def_readwrite("LastFragment", &CThostFtdcRspSyncKeyField::LastFragment)
		.def_readwrite("SessionID", &CThostFtdcRspSyncKeyField::SessionID)
		.def_readwrite("InstallID", &CThostFtdcRspSyncKeyField::InstallID)
		.def_property("UserID", [](const CThostFtdcRspSyncKeyField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcRspSyncKeyField& a, char c[]) {strcpy(a.UserID, c);})
		.def_property("Message", [](const CThostFtdcRspSyncKeyField& a) {return encoding_cast(a.Message);}, [](CThostFtdcRspSyncKeyField& a, char c[]) {strcpy(a.Message, c);})
		.def_property("DeviceID", [](const CThostFtdcRspSyncKeyField& a) {return encoding_cast(a.DeviceID);}, [](CThostFtdcRspSyncKeyField& a, char c[]) {strcpy(a.DeviceID, c);})
		.def_property("BrokerIDByBank", [](const CThostFtdcRspSyncKeyField& a) {return encoding_cast(a.BrokerIDByBank);}, [](CThostFtdcRspSyncKeyField& a, char c[]) {strcpy(a.BrokerIDByBank, c);})
		.def_property("OperNo", [](const CThostFtdcRspSyncKeyField& a) {return encoding_cast(a.OperNo);}, [](CThostFtdcRspSyncKeyField& a, char c[]) {strcpy(a.OperNo, c);})
		.def_readwrite("RequestID", &CThostFtdcRspSyncKeyField::RequestID)
		.def_readwrite("TID", &CThostFtdcRspSyncKeyField::TID)
		.def_readwrite("ErrorID", &CThostFtdcRspSyncKeyField::ErrorID)
		.def_property("ErrorMsg", [](const CThostFtdcRspSyncKeyField& a) {return encoding_cast(a.ErrorMsg);}, [](CThostFtdcRspSyncKeyField& a, char c[]) {strcpy(a.ErrorMsg, c);})
		.def("to_dict", [](const CThostFtdcRspSyncKeyField& a) {py::dict d; d["TradeCode"] = encoding_cast(a.TradeCode); d["BankID"] = encoding_cast(a.BankID); d["BankBranchID"] = encoding_cast(a.BankBranchID); d["BrokerID"] = encoding_cast(a.BrokerID); d["BrokerBranchID"] = encoding_cast(a.BrokerBranchID); d["TradeDate"] = encoding_cast(a.TradeDate); d["TradeTime"] = encoding_cast(a.TradeTime); d["BankSerial"] = encoding_cast(a.BankSerial); d["TradingDay"] = encoding_cast(a.TradingDay); d["PlateSerial"] = a.PlateSerial; d["LastFragment"] = a.LastFragment; d["SessionID"] = a.SessionID; d["InstallID"] = a.InstallID; d["UserID"] = encoding_cast(a.UserID); d["Message"] = encoding_cast(a.Message); d["DeviceID"] = encoding_cast(a.DeviceID); d["BrokerIDByBank"] = encoding_cast(a.BrokerIDByBank); d["OperNo"] = encoding_cast(a.OperNo); d["RequestID"] = a.RequestID; d["TID"] = a.TID; d["ErrorID"] = a.ErrorID; d["ErrorMsg"] = encoding_cast(a.ErrorMsg); return d;});

	py::class_<CThostFtdcNotifyQueryAccountField>(m, "CThostFtdcNotifyQueryAccountField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcNotifyQueryAccountField& a) {return CThostFtdcNotifyQueryAccountField(a);})
		.def_property("TradeCode", [](const CThostFtdcNotifyQueryAccountField& a) {return encoding_cast(a.TradeCode);}, [](CThostFtdcNotifyQueryAccountField& a, char c[]) {strcpy(a.TradeCode, c);})
		.def_property("BankID", [](const CThostFtdcNotifyQueryAccountField& a) {return encoding_cast(a.BankID);}, [](CThostFtdcNotifyQueryAccountField& a, char c[]) {strcpy(a.BankID, c);})
		.def_property("BankBranchID", [](const CThostFtdcNotifyQueryAccountField& a) {return encoding_cast(a.BankBranchID);}, [](CThostFtdcNotifyQueryAccountField& a, char c[]) {strcpy(a.BankBranchID, c);})
		.def_property("BrokerID", [](const CThostFtdcNotifyQueryAccountField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcNotifyQueryAccountField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("BrokerBranchID", [](const CThostFtdcNotifyQueryAccountField& a) {return encoding_cast(a.BrokerBranchID);}, [](CThostFtdcNotifyQueryAccountField& a, char c[]) {strcpy(a.BrokerBranchID, c);})
		.def_property("TradeDate", [](const CThostFtdcNotifyQueryAccountField& a) {return encoding_cast(a.TradeDate);}, [](CThostFtdcNotifyQueryAccountField& a, char c[]) {strcpy(a.TradeDate, c);})
		.def_property("TradeTime", [](const CThostFtdcNotifyQueryAccountField& a) {return encoding_cast(a.TradeTime);}, [](CThostFtdcNotifyQueryAccountField& a, char c[]) {strcpy(a.TradeTime, c);})
		.def_property("BankSerial", [](const CThostFtdcNotifyQueryAccountField& a) {return encoding_cast(a.BankSerial);}, [](CThostFtdcNotifyQueryAccountField& a, char c[]) {strcpy(a.BankSerial, c);})
		.def_property("TradingDay", [](const CThostFtdcNotifyQueryAccountField& a) {return encoding_cast(a.TradingDay);}, [](CThostFtdcNotifyQueryAccountField& a, char c[]) {strcpy(a.TradingDay, c);})
		.def_readwrite("PlateSerial", &CThostFtdcNotifyQueryAccountField::PlateSerial)
		.def_readwrite("LastFragment", &CThostFtdcNotifyQueryAccountField::LastFragment)
		.def_readwrite("SessionID", &CThostFtdcNotifyQueryAccountField::SessionID)
		.def_property("CustomerName", [](const CThostFtdcNotifyQueryAccountField& a) {return encoding_cast(a.CustomerName);}, [](CThostFtdcNotifyQueryAccountField& a, char c[]) {strcpy(a.CustomerName, c);})
		.def_readwrite("IdCardType", &CThostFtdcNotifyQueryAccountField::IdCardType)
		.def_property("IdentifiedCardNo", [](const CThostFtdcNotifyQueryAccountField& a) {return encoding_cast(a.IdentifiedCardNo);}, [](CThostFtdcNotifyQueryAccountField& a, char c[]) {strcpy(a.IdentifiedCardNo, c);})
		.def_readwrite("CustType", &CThostFtdcNotifyQueryAccountField::CustType)
		.def_property("BankAccount", [](const CThostFtdcNotifyQueryAccountField& a) {return encoding_cast(a.BankAccount);}, [](CThostFtdcNotifyQueryAccountField& a, char c[]) {strcpy(a.BankAccount, c);})
		.def_property("BankPassWord", [](const CThostFtdcNotifyQueryAccountField& a) {return encoding_cast(a.BankPassWord);}, [](CThostFtdcNotifyQueryAccountField& a, char c[]) {strcpy(a.BankPassWord, c);})
		.def_property("AccountID", [](const CThostFtdcNotifyQueryAccountField& a) {return encoding_cast(a.AccountID);}, [](CThostFtdcNotifyQueryAccountField& a, char c[]) {strcpy(a.AccountID, c);})
		.def_property("Password", [](const CThostFtdcNotifyQueryAccountField& a) {return encoding_cast(a.Password);}, [](CThostFtdcNotifyQueryAccountField& a, char c[]) {strcpy(a.Password, c);})
		.def_readwrite("FutureSerial", &CThostFtdcNotifyQueryAccountField::FutureSerial)
		.def_readwrite("InstallID", &CThostFtdcNotifyQueryAccountField::InstallID)
		.def_property("UserID", [](const CThostFtdcNotifyQueryAccountField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcNotifyQueryAccountField& a, char c[]) {strcpy(a.UserID, c);})
		.def_readwrite("VerifyCertNoFlag", &CThostFtdcNotifyQueryAccountField::VerifyCertNoFlag)
		.def_property("CurrencyID", [](const CThostFtdcNotifyQueryAccountField& a) {return encoding_cast(a.CurrencyID);}, [](CThostFtdcNotifyQueryAccountField& a, char c[]) {strcpy(a.CurrencyID, c);})
		.def_property("Digest", [](const CThostFtdcNotifyQueryAccountField& a) {return encoding_cast(a.Digest);}, [](CThostFtdcNotifyQueryAccountField& a, char c[]) {strcpy(a.Digest, c);})
		.def_readwrite("BankAccType", &CThostFtdcNotifyQueryAccountField::BankAccType)
		.def_property("DeviceID", [](const CThostFtdcNotifyQueryAccountField& a) {return encoding_cast(a.DeviceID);}, [](CThostFtdcNotifyQueryAccountField& a, char c[]) {strcpy(a.DeviceID, c);})
		.def_readwrite("BankSecuAccType", &CThostFtdcNotifyQueryAccountField::BankSecuAccType)
		.def_property("BrokerIDByBank", [](const CThostFtdcNotifyQueryAccountField& a) {return encoding_cast(a.BrokerIDByBank);}, [](CThostFtdcNotifyQueryAccountField& a, char c[]) {strcpy(a.BrokerIDByBank, c);})
		.def_property("BankSecuAcc", [](const CThostFtdcNotifyQueryAccountField& a) {return encoding_cast(a.BankSecuAcc);}, [](CThostFtdcNotifyQueryAccountField& a, char c[]) {strcpy(a.BankSecuAcc, c);})
		.def_readwrite("BankPwdFlag", &CThostFtdcNotifyQueryAccountField::BankPwdFlag)
		.def_readwrite("SecuPwdFlag", &CThostFtdcNotifyQueryAccountField::SecuPwdFlag)
		.def_property("OperNo", [](const CThostFtdcNotifyQueryAccountField& a) {return encoding_cast(a.OperNo);}, [](CThostFtdcNotifyQueryAccountField& a, char c[]) {strcpy(a.OperNo, c);})
		.def_readwrite("RequestID", &CThostFtdcNotifyQueryAccountField::RequestID)
		.def_readwrite("TID", &CThostFtdcNotifyQueryAccountField::TID)
		.def_readwrite("BankUseAmount", &CThostFtdcNotifyQueryAccountField::BankUseAmount)
		.def_readwrite("BankFetchAmount", &CThostFtdcNotifyQueryAccountField::BankFetchAmount)
		.def_readwrite("ErrorID", &CThostFtdcNotifyQueryAccountField::ErrorID)
		.def_property("ErrorMsg", [](const CThostFtdcNotifyQueryAccountField& a) {return encoding_cast(a.ErrorMsg);}, [](CThostFtdcNotifyQueryAccountField& a, char c[]) {strcpy(a.ErrorMsg, c);})
		.def_property("LongCustomerName", [](const CThostFtdcNotifyQueryAccountField& a) {return encoding_cast(a.LongCustomerName);}, [](CThostFtdcNotifyQueryAccountField& a, char c[]) {strcpy(a.LongCustomerName, c);})
		.def("to_dict", [](const CThostFtdcNotifyQueryAccountField& a) {py::dict d; d["TradeCode"] = encoding_cast(a.TradeCode); d["BankID"] = encoding_cast(a.BankID); d["BankBranchID"] = encoding_cast(a.BankBranchID); d["BrokerID"] = encoding_cast(a.BrokerID); d["BrokerBranchID"] = encoding_cast(a.BrokerBranchID); d["TradeDate"] = encoding_cast(a.TradeDate); d["TradeTime"] = encoding_cast(a.TradeTime); d["BankSerial"] = encoding_cast(a.BankSerial); d["TradingDay"] = encoding_cast(a.TradingDay); d["PlateSerial"] = a.PlateSerial; d["LastFragment"] = a.LastFragment; d["SessionID"] = a.SessionID; d["CustomerName"] = encoding_cast(a.CustomerName); d["IdCardType"] = a.IdCardType; d["IdentifiedCardNo"] = encoding_cast(a.IdentifiedCardNo); d["CustType"] = a.CustType; d["BankAccount"] = encoding_cast(a.BankAccount); d["BankPassWord"] = encoding_cast(a.BankPassWord); d["AccountID"] = encoding_cast(a.AccountID); d["Password"] = encoding_cast(a.Password); d["FutureSerial"] = a.FutureSerial; d["InstallID"] = a.InstallID; d["UserID"] = encoding_cast(a.UserID); d["VerifyCertNoFlag"] = a.VerifyCertNoFlag; d["CurrencyID"] = encoding_cast(a.CurrencyID); d["Digest"] = encoding_cast(a.Digest); d["BankAccType"] = a.BankAccType; d["DeviceID"] = encoding_cast(a.DeviceID); d["BankSecuAccType"] = a.BankSecuAccType; d["BrokerIDByBank"] = encoding_cast(a.BrokerIDByBank); d["BankSecuAcc"] = encoding_cast(a.BankSecuAcc); d["BankPwdFlag"] = a.BankPwdFlag; d["SecuPwdFlag"] = a.SecuPwdFlag; d["OperNo"] = encoding_cast(a.OperNo); d["RequestID"] = a.RequestID; d["TID"] = a.TID; d["BankUseAmount"] = a.BankUseAmount; d["BankFetchAmount"] = a.BankFetchAmount; d["ErrorID"] = a.ErrorID; d["ErrorMsg"] = encoding_cast(a.ErrorMsg); d["LongCustomerName"] = encoding_cast(a.LongCustomerName); return d;});

	py::class_<CThostFtdcTransferSerialField>(m, "CThostFtdcTransferSerialField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcTransferSerialField& a) {return CThostFtdcTransferSerialField(a);})
		.def_readwrite("PlateSerial", &CThostFtdcTransferSerialField::PlateSerial)
		.def_property("TradeDate", [](const CThostFtdcTransferSerialField& a) {return encoding_cast(a.TradeDate);}, [](CThostFtdcTransferSerialField& a, char c[]) {strcpy(a.TradeDate, c);})
		.def_property("TradingDay", [](const CThostFtdcTransferSerialField& a) {return encoding_cast(a.TradingDay);}, [](CThostFtdcTransferSerialField& a, char c[]) {strcpy(a.TradingDay, c);})
		.def_property("TradeTime", [](const CThostFtdcTransferSerialField& a) {return encoding_cast(a.TradeTime);}, [](CThostFtdcTransferSerialField& a, char c[]) {strcpy(a.TradeTime, c);})
		.def_property("TradeCode", [](const CThostFtdcTransferSerialField& a) {return encoding_cast(a.TradeCode);}, [](CThostFtdcTransferSerialField& a, char c[]) {strcpy(a.TradeCode, c);})
		.def_readwrite("SessionID", &CThostFtdcTransferSerialField::SessionID)
		.def_property("BankID", [](const CThostFtdcTransferSerialField& a) {return encoding_cast(a.BankID);}, [](CThostFtdcTransferSerialField& a, char c[]) {strcpy(a.BankID, c);})
		.def_property("BankBranchID", [](const CThostFtdcTransferSerialField& a) {return encoding_cast(a.BankBranchID);}, [](CThostFtdcTransferSerialField& a, char c[]) {strcpy(a.BankBranchID, c);})
		.def_readwrite("BankAccType", &CThostFtdcTransferSerialField::BankAccType)
		.def_property("BankAccount", [](const CThostFtdcTransferSerialField& a) {return encoding_cast(a.BankAccount);}, [](CThostFtdcTransferSerialField& a, char c[]) {strcpy(a.BankAccount, c);})
		.def_property("BankSerial", [](const CThostFtdcTransferSerialField& a) {return encoding_cast(a.BankSerial);}, [](CThostFtdcTransferSerialField& a, char c[]) {strcpy(a.BankSerial, c);})
		.def_property("BrokerID", [](const CThostFtdcTransferSerialField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcTransferSerialField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("BrokerBranchID", [](const CThostFtdcTransferSerialField& a) {return encoding_cast(a.BrokerBranchID);}, [](CThostFtdcTransferSerialField& a, char c[]) {strcpy(a.BrokerBranchID, c);})
		.def_readwrite("FutureAccType", &CThostFtdcTransferSerialField::FutureAccType)
		.def_property("AccountID", [](const CThostFtdcTransferSerialField& a) {return encoding_cast(a.AccountID);}, [](CThostFtdcTransferSerialField& a, char c[]) {strcpy(a.AccountID, c);})
		.def_property("InvestorID", [](const CThostFtdcTransferSerialField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcTransferSerialField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_readwrite("FutureSerial", &CThostFtdcTransferSerialField::FutureSerial)
		.def_readwrite("IdCardType", &CThostFtdcTransferSerialField::IdCardType)
		.def_property("IdentifiedCardNo", [](const CThostFtdcTransferSerialField& a) {return encoding_cast(a.IdentifiedCardNo);}, [](CThostFtdcTransferSerialField& a, char c[]) {strcpy(a.IdentifiedCardNo, c);})
		.def_property("CurrencyID", [](const CThostFtdcTransferSerialField& a) {return encoding_cast(a.CurrencyID);}, [](CThostFtdcTransferSerialField& a, char c[]) {strcpy(a.CurrencyID, c);})
		.def_readwrite("TradeAmount", &CThostFtdcTransferSerialField::TradeAmount)
		.def_readwrite("CustFee", &CThostFtdcTransferSerialField::CustFee)
		.def_readwrite("BrokerFee", &CThostFtdcTransferSerialField::BrokerFee)
		.def_readwrite("AvailabilityFlag", &CThostFtdcTransferSerialField::AvailabilityFlag)
		.def_property("OperatorCode", [](const CThostFtdcTransferSerialField& a) {return encoding_cast(a.OperatorCode);}, [](CThostFtdcTransferSerialField& a, char c[]) {strcpy(a.OperatorCode, c);})
		.def_property("BankNewAccount", [](const CThostFtdcTransferSerialField& a) {return encoding_cast(a.BankNewAccount);}, [](CThostFtdcTransferSerialField& a, char c[]) {strcpy(a.BankNewAccount, c);})
		.def_readwrite("ErrorID", &CThostFtdcTransferSerialField::ErrorID)
		.def_property("ErrorMsg", [](const CThostFtdcTransferSerialField& a) {return encoding_cast(a.ErrorMsg);}, [](CThostFtdcTransferSerialField& a, char c[]) {strcpy(a.ErrorMsg, c);})
		.def("to_dict", [](const CThostFtdcTransferSerialField& a) {py::dict d; d["PlateSerial"] = a.PlateSerial; d["TradeDate"] = encoding_cast(a.TradeDate); d["TradingDay"] = encoding_cast(a.TradingDay); d["TradeTime"] = encoding_cast(a.TradeTime); d["TradeCode"] = encoding_cast(a.TradeCode); d["SessionID"] = a.SessionID; d["BankID"] = encoding_cast(a.BankID); d["BankBranchID"] = encoding_cast(a.BankBranchID); d["BankAccType"] = a.BankAccType; d["BankAccount"] = encoding_cast(a.BankAccount); d["BankSerial"] = encoding_cast(a.BankSerial); d["BrokerID"] = encoding_cast(a.BrokerID); d["BrokerBranchID"] = encoding_cast(a.BrokerBranchID); d["FutureAccType"] = a.FutureAccType; d["AccountID"] = encoding_cast(a.AccountID); d["InvestorID"] = encoding_cast(a.InvestorID); d["FutureSerial"] = a.FutureSerial; d["IdCardType"] = a.IdCardType; d["IdentifiedCardNo"] = encoding_cast(a.IdentifiedCardNo); d["CurrencyID"] = encoding_cast(a.CurrencyID); d["TradeAmount"] = a.TradeAmount; d["CustFee"] = a.CustFee; d["BrokerFee"] = a.BrokerFee; d["AvailabilityFlag"] = a.AvailabilityFlag; d["OperatorCode"] = encoding_cast(a.OperatorCode); d["BankNewAccount"] = encoding_cast(a.BankNewAccount); d["ErrorID"] = a.ErrorID; d["ErrorMsg"] = encoding_cast(a.ErrorMsg); return d;});

	py::class_<CThostFtdcQryTransferSerialField>(m, "CThostFtdcQryTransferSerialField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryTransferSerialField& a) {return CThostFtdcQryTransferSerialField(a);})
		.def_property("BrokerID", [](const CThostFtdcQryTransferSerialField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcQryTransferSerialField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("AccountID", [](const CThostFtdcQryTransferSerialField& a) {return encoding_cast(a.AccountID);}, [](CThostFtdcQryTransferSerialField& a, char c[]) {strcpy(a.AccountID, c);})
		.def_property("BankID", [](const CThostFtdcQryTransferSerialField& a) {return encoding_cast(a.BankID);}, [](CThostFtdcQryTransferSerialField& a, char c[]) {strcpy(a.BankID, c);})
		.def_property("CurrencyID", [](const CThostFtdcQryTransferSerialField& a) {return encoding_cast(a.CurrencyID);}, [](CThostFtdcQryTransferSerialField& a, char c[]) {strcpy(a.CurrencyID, c);})
		.def("to_dict", [](const CThostFtdcQryTransferSerialField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["AccountID"] = encoding_cast(a.AccountID); d["BankID"] = encoding_cast(a.BankID); d["CurrencyID"] = encoding_cast(a.CurrencyID); return d;});

	py::class_<CThostFtdcNotifyFutureSignInField>(m, "CThostFtdcNotifyFutureSignInField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcNotifyFutureSignInField& a) {return CThostFtdcNotifyFutureSignInField(a);})
		.def_property("TradeCode", [](const CThostFtdcNotifyFutureSignInField& a) {return encoding_cast(a.TradeCode);}, [](CThostFtdcNotifyFutureSignInField& a, char c[]) {strcpy(a.TradeCode, c);})
		.def_property("BankID", [](const CThostFtdcNotifyFutureSignInField& a) {return encoding_cast(a.BankID);}, [](CThostFtdcNotifyFutureSignInField& a, char c[]) {strcpy(a.BankID, c);})
		.def_property("BankBranchID", [](const CThostFtdcNotifyFutureSignInField& a) {return encoding_cast(a.BankBranchID);}, [](CThostFtdcNotifyFutureSignInField& a, char c[]) {strcpy(a.BankBranchID, c);})
		.def_property("BrokerID", [](const CThostFtdcNotifyFutureSignInField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcNotifyFutureSignInField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("BrokerBranchID", [](const CThostFtdcNotifyFutureSignInField& a) {return encoding_cast(a.BrokerBranchID);}, [](CThostFtdcNotifyFutureSignInField& a, char c[]) {strcpy(a.BrokerBranchID, c);})
		.def_property("TradeDate", [](const CThostFtdcNotifyFutureSignInField& a) {return encoding_cast(a.TradeDate);}, [](CThostFtdcNotifyFutureSignInField& a, char c[]) {strcpy(a.TradeDate, c);})
		.def_property("TradeTime", [](const CThostFtdcNotifyFutureSignInField& a) {return encoding_cast(a.TradeTime);}, [](CThostFtdcNotifyFutureSignInField& a, char c[]) {strcpy(a.TradeTime, c);})
		.def_property("BankSerial", [](const CThostFtdcNotifyFutureSignInField& a) {return encoding_cast(a.BankSerial);}, [](CThostFtdcNotifyFutureSignInField& a, char c[]) {strcpy(a.BankSerial, c);})
		.def_property("TradingDay", [](const CThostFtdcNotifyFutureSignInField& a) {return encoding_cast(a.TradingDay);}, [](CThostFtdcNotifyFutureSignInField& a, char c[]) {strcpy(a.TradingDay, c);})
		.def_readwrite("PlateSerial", &CThostFtdcNotifyFutureSignInField::PlateSerial)
		.def_readwrite("LastFragment", &CThostFtdcNotifyFutureSignInField::LastFragment)
		.def_readwrite("SessionID", &CThostFtdcNotifyFutureSignInField::SessionID)
		.def_readwrite("InstallID", &CThostFtdcNotifyFutureSignInField::InstallID)
		.def_property("UserID", [](const CThostFtdcNotifyFutureSignInField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcNotifyFutureSignInField& a, char c[]) {strcpy(a.UserID, c);})
		.def_property("Digest", [](const CThostFtdcNotifyFutureSignInField& a) {return encoding_cast(a.Digest);}, [](CThostFtdcNotifyFutureSignInField& a, char c[]) {strcpy(a.Digest, c);})
		.def_property("CurrencyID", [](const CThostFtdcNotifyFutureSignInField& a) {return encoding_cast(a.CurrencyID);}, [](CThostFtdcNotifyFutureSignInField& a, char c[]) {strcpy(a.CurrencyID, c);})
		.def_property("DeviceID", [](const CThostFtdcNotifyFutureSignInField& a) {return encoding_cast(a.DeviceID);}, [](CThostFtdcNotifyFutureSignInField& a, char c[]) {strcpy(a.DeviceID, c);})
		.def_property("BrokerIDByBank", [](const CThostFtdcNotifyFutureSignInField& a) {return encoding_cast(a.BrokerIDByBank);}, [](CThostFtdcNotifyFutureSignInField& a, char c[]) {strcpy(a.BrokerIDByBank, c);})
		.def_property("OperNo", [](const CThostFtdcNotifyFutureSignInField& a) {return encoding_cast(a.OperNo);}, [](CThostFtdcNotifyFutureSignInField& a, char c[]) {strcpy(a.OperNo, c);})
		.def_readwrite("RequestID", &CThostFtdcNotifyFutureSignInField::RequestID)
		.def_readwrite("TID", &CThostFtdcNotifyFutureSignInField::TID)
		.def_readwrite("ErrorID", &CThostFtdcNotifyFutureSignInField::ErrorID)
		.def_property("ErrorMsg", [](const CThostFtdcNotifyFutureSignInField& a) {return encoding_cast(a.ErrorMsg);}, [](CThostFtdcNotifyFutureSignInField& a, char c[]) {strcpy(a.ErrorMsg, c);})
		.def_property("PinKey", [](const CThostFtdcNotifyFutureSignInField& a) {return encoding_cast(a.PinKey);}, [](CThostFtdcNotifyFutureSignInField& a, char c[]) {strcpy(a.PinKey, c);})
		.def_property("MacKey", [](const CThostFtdcNotifyFutureSignInField& a) {return encoding_cast(a.MacKey);}, [](CThostFtdcNotifyFutureSignInField& a, char c[]) {strcpy(a.MacKey, c);})
		.def("to_dict", [](const CThostFtdcNotifyFutureSignInField& a) {py::dict d; d["TradeCode"] = encoding_cast(a.TradeCode); d["BankID"] = encoding_cast(a.BankID); d["BankBranchID"] = encoding_cast(a.BankBranchID); d["BrokerID"] = encoding_cast(a.BrokerID); d["BrokerBranchID"] = encoding_cast(a.BrokerBranchID); d["TradeDate"] = encoding_cast(a.TradeDate); d["TradeTime"] = encoding_cast(a.TradeTime); d["BankSerial"] = encoding_cast(a.BankSerial); d["TradingDay"] = encoding_cast(a.TradingDay); d["PlateSerial"] = a.PlateSerial; d["LastFragment"] = a.LastFragment; d["SessionID"] = a.SessionID; d["InstallID"] = a.InstallID; d["UserID"] = encoding_cast(a.UserID); d["Digest"] = encoding_cast(a.Digest); d["CurrencyID"] = encoding_cast(a.CurrencyID); d["DeviceID"] = encoding_cast(a.DeviceID); d["BrokerIDByBank"] = encoding_cast(a.BrokerIDByBank); d["OperNo"] = encoding_cast(a.OperNo); d["RequestID"] = a.RequestID; d["TID"] = a.TID; d["ErrorID"] = a.ErrorID; d["ErrorMsg"] = encoding_cast(a.ErrorMsg); d["PinKey"] = encoding_cast(a.PinKey); d["MacKey"] = encoding_cast(a.MacKey); return d;});

	py::class_<CThostFtdcNotifyFutureSignOutField>(m, "CThostFtdcNotifyFutureSignOutField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcNotifyFutureSignOutField& a) {return CThostFtdcNotifyFutureSignOutField(a);})
		.def_property("TradeCode", [](const CThostFtdcNotifyFutureSignOutField& a) {return encoding_cast(a.TradeCode);}, [](CThostFtdcNotifyFutureSignOutField& a, char c[]) {strcpy(a.TradeCode, c);})
		.def_property("BankID", [](const CThostFtdcNotifyFutureSignOutField& a) {return encoding_cast(a.BankID);}, [](CThostFtdcNotifyFutureSignOutField& a, char c[]) {strcpy(a.BankID, c);})
		.def_property("BankBranchID", [](const CThostFtdcNotifyFutureSignOutField& a) {return encoding_cast(a.BankBranchID);}, [](CThostFtdcNotifyFutureSignOutField& a, char c[]) {strcpy(a.BankBranchID, c);})
		.def_property("BrokerID", [](const CThostFtdcNotifyFutureSignOutField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcNotifyFutureSignOutField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("BrokerBranchID", [](const CThostFtdcNotifyFutureSignOutField& a) {return encoding_cast(a.BrokerBranchID);}, [](CThostFtdcNotifyFutureSignOutField& a, char c[]) {strcpy(a.BrokerBranchID, c);})
		.def_property("TradeDate", [](const CThostFtdcNotifyFutureSignOutField& a) {return encoding_cast(a.TradeDate);}, [](CThostFtdcNotifyFutureSignOutField& a, char c[]) {strcpy(a.TradeDate, c);})
		.def_property("TradeTime", [](const CThostFtdcNotifyFutureSignOutField& a) {return encoding_cast(a.TradeTime);}, [](CThostFtdcNotifyFutureSignOutField& a, char c[]) {strcpy(a.TradeTime, c);})
		.def_property("BankSerial", [](const CThostFtdcNotifyFutureSignOutField& a) {return encoding_cast(a.BankSerial);}, [](CThostFtdcNotifyFutureSignOutField& a, char c[]) {strcpy(a.BankSerial, c);})
		.def_property("TradingDay", [](const CThostFtdcNotifyFutureSignOutField& a) {return encoding_cast(a.TradingDay);}, [](CThostFtdcNotifyFutureSignOutField& a, char c[]) {strcpy(a.TradingDay, c);})
		.def_readwrite("PlateSerial", &CThostFtdcNotifyFutureSignOutField::PlateSerial)
		.def_readwrite("LastFragment", &CThostFtdcNotifyFutureSignOutField::LastFragment)
		.def_readwrite("SessionID", &CThostFtdcNotifyFutureSignOutField::SessionID)
		.def_readwrite("InstallID", &CThostFtdcNotifyFutureSignOutField::InstallID)
		.def_property("UserID", [](const CThostFtdcNotifyFutureSignOutField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcNotifyFutureSignOutField& a, char c[]) {strcpy(a.UserID, c);})
		.def_property("Digest", [](const CThostFtdcNotifyFutureSignOutField& a) {return encoding_cast(a.Digest);}, [](CThostFtdcNotifyFutureSignOutField& a, char c[]) {strcpy(a.Digest, c);})
		.def_property("CurrencyID", [](const CThostFtdcNotifyFutureSignOutField& a) {return encoding_cast(a.CurrencyID);}, [](CThostFtdcNotifyFutureSignOutField& a, char c[]) {strcpy(a.CurrencyID, c);})
		.def_property("DeviceID", [](const CThostFtdcNotifyFutureSignOutField& a) {return encoding_cast(a.DeviceID);}, [](CThostFtdcNotifyFutureSignOutField& a, char c[]) {strcpy(a.DeviceID, c);})
		.def_property("BrokerIDByBank", [](const CThostFtdcNotifyFutureSignOutField& a) {return encoding_cast(a.BrokerIDByBank);}, [](CThostFtdcNotifyFutureSignOutField& a, char c[]) {strcpy(a.BrokerIDByBank, c);})
		.def_property("OperNo", [](const CThostFtdcNotifyFutureSignOutField& a) {return encoding_cast(a.OperNo);}, [](CThostFtdcNotifyFutureSignOutField& a, char c[]) {strcpy(a.OperNo, c);})
		.def_readwrite("RequestID", &CThostFtdcNotifyFutureSignOutField::RequestID)
		.def_readwrite("TID", &CThostFtdcNotifyFutureSignOutField::TID)
		.def_readwrite("ErrorID", &CThostFtdcNotifyFutureSignOutField::ErrorID)
		.def_property("ErrorMsg", [](const CThostFtdcNotifyFutureSignOutField& a) {return encoding_cast(a.ErrorMsg);}, [](CThostFtdcNotifyFutureSignOutField& a, char c[]) {strcpy(a.ErrorMsg, c);})
		.def("to_dict", [](const CThostFtdcNotifyFutureSignOutField& a) {py::dict d; d["TradeCode"] = encoding_cast(a.TradeCode); d["BankID"] = encoding_cast(a.BankID); d["BankBranchID"] = encoding_cast(a.BankBranchID); d["BrokerID"] = encoding_cast(a.BrokerID); d["BrokerBranchID"] = encoding_cast(a.BrokerBranchID); d["TradeDate"] = encoding_cast(a.TradeDate); d["TradeTime"] = encoding_cast(a.TradeTime); d["BankSerial"] = encoding_cast(a.BankSerial); d["TradingDay"] = encoding_cast(a.TradingDay); d["PlateSerial"] = a.PlateSerial; d["LastFragment"] = a.LastFragment; d["SessionID"] = a.SessionID; d["InstallID"] = a.InstallID; d["UserID"] = encoding_cast(a.UserID); d["Digest"] = encoding_cast(a.Digest); d["CurrencyID"] = encoding_cast(a.CurrencyID); d["DeviceID"] = encoding_cast(a.DeviceID); d["BrokerIDByBank"] = encoding_cast(a.BrokerIDByBank); d["OperNo"] = encoding_cast(a.OperNo); d["RequestID"] = a.RequestID; d["TID"] = a.TID; d["ErrorID"] = a.ErrorID; d["ErrorMsg"] = encoding_cast(a.ErrorMsg); return d;});

	py::class_<CThostFtdcNotifySyncKeyField>(m, "CThostFtdcNotifySyncKeyField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcNotifySyncKeyField& a) {return CThostFtdcNotifySyncKeyField(a);})
		.def_property("TradeCode", [](const CThostFtdcNotifySyncKeyField& a) {return encoding_cast(a.TradeCode);}, [](CThostFtdcNotifySyncKeyField& a, char c[]) {strcpy(a.TradeCode, c);})
		.def_property("BankID", [](const CThostFtdcNotifySyncKeyField& a) {return encoding_cast(a.BankID);}, [](CThostFtdcNotifySyncKeyField& a, char c[]) {strcpy(a.BankID, c);})
		.def_property("BankBranchID", [](const CThostFtdcNotifySyncKeyField& a) {return encoding_cast(a.BankBranchID);}, [](CThostFtdcNotifySyncKeyField& a, char c[]) {strcpy(a.BankBranchID, c);})
		.def_property("BrokerID", [](const CThostFtdcNotifySyncKeyField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcNotifySyncKeyField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("BrokerBranchID", [](const CThostFtdcNotifySyncKeyField& a) {return encoding_cast(a.BrokerBranchID);}, [](CThostFtdcNotifySyncKeyField& a, char c[]) {strcpy(a.BrokerBranchID, c);})
		.def_property("TradeDate", [](const CThostFtdcNotifySyncKeyField& a) {return encoding_cast(a.TradeDate);}, [](CThostFtdcNotifySyncKeyField& a, char c[]) {strcpy(a.TradeDate, c);})
		.def_property("TradeTime", [](const CThostFtdcNotifySyncKeyField& a) {return encoding_cast(a.TradeTime);}, [](CThostFtdcNotifySyncKeyField& a, char c[]) {strcpy(a.TradeTime, c);})
		.def_property("BankSerial", [](const CThostFtdcNotifySyncKeyField& a) {return encoding_cast(a.BankSerial);}, [](CThostFtdcNotifySyncKeyField& a, char c[]) {strcpy(a.BankSerial, c);})
		.def_property("TradingDay", [](const CThostFtdcNotifySyncKeyField& a) {return encoding_cast(a.TradingDay);}, [](CThostFtdcNotifySyncKeyField& a, char c[]) {strcpy(a.TradingDay, c);})
		.def_readwrite("PlateSerial", &CThostFtdcNotifySyncKeyField::PlateSerial)
		.def_readwrite("LastFragment", &CThostFtdcNotifySyncKeyField::LastFragment)
		.def_readwrite("SessionID", &CThostFtdcNotifySyncKeyField::SessionID)
		.def_readwrite("InstallID", &CThostFtdcNotifySyncKeyField::InstallID)
		.def_property("UserID", [](const CThostFtdcNotifySyncKeyField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcNotifySyncKeyField& a, char c[]) {strcpy(a.UserID, c);})
		.def_property("Message", [](const CThostFtdcNotifySyncKeyField& a) {return encoding_cast(a.Message);}, [](CThostFtdcNotifySyncKeyField& a, char c[]) {strcpy(a.Message, c);})
		.def_property("DeviceID", [](const CThostFtdcNotifySyncKeyField& a) {return encoding_cast(a.DeviceID);}, [](CThostFtdcNotifySyncKeyField& a, char c[]) {strcpy(a.DeviceID, c);})
		.def_property("BrokerIDByBank", [](const CThostFtdcNotifySyncKeyField& a) {return encoding_cast(a.BrokerIDByBank);}, [](CThostFtdcNotifySyncKeyField& a, char c[]) {strcpy(a.BrokerIDByBank, c);})
		.def_property("OperNo", [](const CThostFtdcNotifySyncKeyField& a) {return encoding_cast(a.OperNo);}, [](CThostFtdcNotifySyncKeyField& a, char c[]) {strcpy(a.OperNo, c);})
		.def_readwrite("RequestID", &CThostFtdcNotifySyncKeyField::RequestID)
		.def_readwrite("TID", &CThostFtdcNotifySyncKeyField::TID)
		.def_readwrite("ErrorID", &CThostFtdcNotifySyncKeyField::ErrorID)
		.def_property("ErrorMsg", [](const CThostFtdcNotifySyncKeyField& a) {return encoding_cast(a.ErrorMsg);}, [](CThostFtdcNotifySyncKeyField& a, char c[]) {strcpy(a.ErrorMsg, c);})
		.def("to_dict", [](const CThostFtdcNotifySyncKeyField& a) {py::dict d; d["TradeCode"] = encoding_cast(a.TradeCode); d["BankID"] = encoding_cast(a.BankID); d["BankBranchID"] = encoding_cast(a.BankBranchID); d["BrokerID"] = encoding_cast(a.BrokerID); d["BrokerBranchID"] = encoding_cast(a.BrokerBranchID); d["TradeDate"] = encoding_cast(a.TradeDate); d["TradeTime"] = encoding_cast(a.TradeTime); d["BankSerial"] = encoding_cast(a.BankSerial); d["TradingDay"] = encoding_cast(a.TradingDay); d["PlateSerial"] = a.PlateSerial; d["LastFragment"] = a.LastFragment; d["SessionID"] = a.SessionID; d["InstallID"] = a.InstallID; d["UserID"] = encoding_cast(a.UserID); d["Message"] = encoding_cast(a.Message); d["DeviceID"] = encoding_cast(a.DeviceID); d["BrokerIDByBank"] = encoding_cast(a.BrokerIDByBank); d["OperNo"] = encoding_cast(a.OperNo); d["RequestID"] = a.RequestID; d["TID"] = a.TID; d["ErrorID"] = a.ErrorID; d["ErrorMsg"] = encoding_cast(a.ErrorMsg); return d;});

	py::class_<CThostFtdcQryAccountregisterField>(m, "CThostFtdcQryAccountregisterField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryAccountregisterField& a) {return CThostFtdcQryAccountregisterField(a);})
		.def_property("BrokerID", [](const CThostFtdcQryAccountregisterField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcQryAccountregisterField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("AccountID", [](const CThostFtdcQryAccountregisterField& a) {return encoding_cast(a.AccountID);}, [](CThostFtdcQryAccountregisterField& a, char c[]) {strcpy(a.AccountID, c);})
		.def_property("BankID", [](const CThostFtdcQryAccountregisterField& a) {return encoding_cast(a.BankID);}, [](CThostFtdcQryAccountregisterField& a, char c[]) {strcpy(a.BankID, c);})
		.def_property("BankBranchID", [](const CThostFtdcQryAccountregisterField& a) {return encoding_cast(a.BankBranchID);}, [](CThostFtdcQryAccountregisterField& a, char c[]) {strcpy(a.BankBranchID, c);})
		.def_property("CurrencyID", [](const CThostFtdcQryAccountregisterField& a) {return encoding_cast(a.CurrencyID);}, [](CThostFtdcQryAccountregisterField& a, char c[]) {strcpy(a.CurrencyID, c);})
		.def("to_dict", [](const CThostFtdcQryAccountregisterField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["AccountID"] = encoding_cast(a.AccountID); d["BankID"] = encoding_cast(a.BankID); d["BankBranchID"] = encoding_cast(a.BankBranchID); d["CurrencyID"] = encoding_cast(a.CurrencyID); return d;});

	py::class_<CThostFtdcAccountregisterField>(m, "CThostFtdcAccountregisterField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcAccountregisterField& a) {return CThostFtdcAccountregisterField(a);})
		.def_property("TradeDay", [](const CThostFtdcAccountregisterField& a) {return encoding_cast(a.TradeDay);}, [](CThostFtdcAccountregisterField& a, char c[]) {strcpy(a.TradeDay, c);})
		.def_property("BankID", [](const CThostFtdcAccountregisterField& a) {return encoding_cast(a.BankID);}, [](CThostFtdcAccountregisterField& a, char c[]) {strcpy(a.BankID, c);})
		.def_property("BankBranchID", [](const CThostFtdcAccountregisterField& a) {return encoding_cast(a.BankBranchID);}, [](CThostFtdcAccountregisterField& a, char c[]) {strcpy(a.BankBranchID, c);})
		.def_property("BankAccount", [](const CThostFtdcAccountregisterField& a) {return encoding_cast(a.BankAccount);}, [](CThostFtdcAccountregisterField& a, char c[]) {strcpy(a.BankAccount, c);})
		.def_property("BrokerID", [](const CThostFtdcAccountregisterField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcAccountregisterField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("BrokerBranchID", [](const CThostFtdcAccountregisterField& a) {return encoding_cast(a.BrokerBranchID);}, [](CThostFtdcAccountregisterField& a, char c[]) {strcpy(a.BrokerBranchID, c);})
		.def_property("AccountID", [](const CThostFtdcAccountregisterField& a) {return encoding_cast(a.AccountID);}, [](CThostFtdcAccountregisterField& a, char c[]) {strcpy(a.AccountID, c);})
		.def_readwrite("IdCardType", &CThostFtdcAccountregisterField::IdCardType)
		.def_property("IdentifiedCardNo", [](const CThostFtdcAccountregisterField& a) {return encoding_cast(a.IdentifiedCardNo);}, [](CThostFtdcAccountregisterField& a, char c[]) {strcpy(a.IdentifiedCardNo, c);})
		.def_property("CustomerName", [](const CThostFtdcAccountregisterField& a) {return encoding_cast(a.CustomerName);}, [](CThostFtdcAccountregisterField& a, char c[]) {strcpy(a.CustomerName, c);})
		.def_property("CurrencyID", [](const CThostFtdcAccountregisterField& a) {return encoding_cast(a.CurrencyID);}, [](CThostFtdcAccountregisterField& a, char c[]) {strcpy(a.CurrencyID, c);})
		.def_readwrite("OpenOrDestroy", &CThostFtdcAccountregisterField::OpenOrDestroy)
		.def_property("RegDate", [](const CThostFtdcAccountregisterField& a) {return encoding_cast(a.RegDate);}, [](CThostFtdcAccountregisterField& a, char c[]) {strcpy(a.RegDate, c);})
		.def_property("OutDate", [](const CThostFtdcAccountregisterField& a) {return encoding_cast(a.OutDate);}, [](CThostFtdcAccountregisterField& a, char c[]) {strcpy(a.OutDate, c);})
		.def_readwrite("TID", &CThostFtdcAccountregisterField::TID)
		.def_readwrite("CustType", &CThostFtdcAccountregisterField::CustType)
		.def_readwrite("BankAccType", &CThostFtdcAccountregisterField::BankAccType)
		.def_property("LongCustomerName", [](const CThostFtdcAccountregisterField& a) {return encoding_cast(a.LongCustomerName);}, [](CThostFtdcAccountregisterField& a, char c[]) {strcpy(a.LongCustomerName, c);})
		.def("to_dict", [](const CThostFtdcAccountregisterField& a) {py::dict d; d["TradeDay"] = encoding_cast(a.TradeDay); d["BankID"] = encoding_cast(a.BankID); d["BankBranchID"] = encoding_cast(a.BankBranchID); d["BankAccount"] = encoding_cast(a.BankAccount); d["BrokerID"] = encoding_cast(a.BrokerID); d["BrokerBranchID"] = encoding_cast(a.BrokerBranchID); d["AccountID"] = encoding_cast(a.AccountID); d["IdCardType"] = a.IdCardType; d["IdentifiedCardNo"] = encoding_cast(a.IdentifiedCardNo); d["CustomerName"] = encoding_cast(a.CustomerName); d["CurrencyID"] = encoding_cast(a.CurrencyID); d["OpenOrDestroy"] = a.OpenOrDestroy; d["RegDate"] = encoding_cast(a.RegDate); d["OutDate"] = encoding_cast(a.OutDate); d["TID"] = a.TID; d["CustType"] = a.CustType; d["BankAccType"] = a.BankAccType; d["LongCustomerName"] = encoding_cast(a.LongCustomerName); return d;});

	py::class_<CThostFtdcOpenAccountField>(m, "CThostFtdcOpenAccountField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcOpenAccountField& a) {return CThostFtdcOpenAccountField(a);})
		.def_property("TradeCode", [](const CThostFtdcOpenAccountField& a) {return encoding_cast(a.TradeCode);}, [](CThostFtdcOpenAccountField& a, char c[]) {strcpy(a.TradeCode, c);})
		.def_property("BankID", [](const CThostFtdcOpenAccountField& a) {return encoding_cast(a.BankID);}, [](CThostFtdcOpenAccountField& a, char c[]) {strcpy(a.BankID, c);})
		.def_property("BankBranchID", [](const CThostFtdcOpenAccountField& a) {return encoding_cast(a.BankBranchID);}, [](CThostFtdcOpenAccountField& a, char c[]) {strcpy(a.BankBranchID, c);})
		.def_property("BrokerID", [](const CThostFtdcOpenAccountField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcOpenAccountField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("BrokerBranchID", [](const CThostFtdcOpenAccountField& a) {return encoding_cast(a.BrokerBranchID);}, [](CThostFtdcOpenAccountField& a, char c[]) {strcpy(a.BrokerBranchID, c);})
		.def_property("TradeDate", [](const CThostFtdcOpenAccountField& a) {return encoding_cast(a.TradeDate);}, [](CThostFtdcOpenAccountField& a, char c[]) {strcpy(a.TradeDate, c);})
		.def_property("TradeTime", [](const CThostFtdcOpenAccountField& a) {return encoding_cast(a.TradeTime);}, [](CThostFtdcOpenAccountField& a, char c[]) {strcpy(a.TradeTime, c);})
		.def_property("BankSerial", [](const CThostFtdcOpenAccountField& a) {return encoding_cast(a.BankSerial);}, [](CThostFtdcOpenAccountField& a, char c[]) {strcpy(a.BankSerial, c);})
		.def_property("TradingDay", [](const CThostFtdcOpenAccountField& a) {return encoding_cast(a.TradingDay);}, [](CThostFtdcOpenAccountField& a, char c[]) {strcpy(a.TradingDay, c);})
		.def_readwrite("PlateSerial", &CThostFtdcOpenAccountField::PlateSerial)
		.def_readwrite("LastFragment", &CThostFtdcOpenAccountField::LastFragment)
		.def_readwrite("SessionID", &CThostFtdcOpenAccountField::SessionID)
		.def_property("CustomerName", [](const CThostFtdcOpenAccountField& a) {return encoding_cast(a.CustomerName);}, [](CThostFtdcOpenAccountField& a, char c[]) {strcpy(a.CustomerName, c);})
		.def_readwrite("IdCardType", &CThostFtdcOpenAccountField::IdCardType)
		.def_property("IdentifiedCardNo", [](const CThostFtdcOpenAccountField& a) {return encoding_cast(a.IdentifiedCardNo);}, [](CThostFtdcOpenAccountField& a, char c[]) {strcpy(a.IdentifiedCardNo, c);})
		.def_readwrite("Gender", &CThostFtdcOpenAccountField::Gender)
		.def_property("CountryCode", [](const CThostFtdcOpenAccountField& a) {return encoding_cast(a.CountryCode);}, [](CThostFtdcOpenAccountField& a, char c[]) {strcpy(a.CountryCode, c);})
		.def_readwrite("CustType", &CThostFtdcOpenAccountField::CustType)
		.def_property("Address", [](const CThostFtdcOpenAccountField& a) {return encoding_cast(a.Address);}, [](CThostFtdcOpenAccountField& a, char c[]) {strcpy(a.Address, c);})
		.def_property("ZipCode", [](const CThostFtdcOpenAccountField& a) {return encoding_cast(a.ZipCode);}, [](CThostFtdcOpenAccountField& a, char c[]) {strcpy(a.ZipCode, c);})
		.def_property("Telephone", [](const CThostFtdcOpenAccountField& a) {return encoding_cast(a.Telephone);}, [](CThostFtdcOpenAccountField& a, char c[]) {strcpy(a.Telephone, c);})
		.def_property("MobilePhone", [](const CThostFtdcOpenAccountField& a) {return encoding_cast(a.MobilePhone);}, [](CThostFtdcOpenAccountField& a, char c[]) {strcpy(a.MobilePhone, c);})
		.def_property("Fax", [](const CThostFtdcOpenAccountField& a) {return encoding_cast(a.Fax);}, [](CThostFtdcOpenAccountField& a, char c[]) {strcpy(a.Fax, c);})
		.def_property("EMail", [](const CThostFtdcOpenAccountField& a) {return encoding_cast(a.EMail);}, [](CThostFtdcOpenAccountField& a, char c[]) {strcpy(a.EMail, c);})
		.def_readwrite("MoneyAccountStatus", &CThostFtdcOpenAccountField::MoneyAccountStatus)
		.def_property("BankAccount", [](const CThostFtdcOpenAccountField& a) {return encoding_cast(a.BankAccount);}, [](CThostFtdcOpenAccountField& a, char c[]) {strcpy(a.BankAccount, c);})
		.def_property("BankPassWord", [](const CThostFtdcOpenAccountField& a) {return encoding_cast(a.BankPassWord);}, [](CThostFtdcOpenAccountField& a, char c[]) {strcpy(a.BankPassWord, c);})
		.def_property("AccountID", [](const CThostFtdcOpenAccountField& a) {return encoding_cast(a.AccountID);}, [](CThostFtdcOpenAccountField& a, char c[]) {strcpy(a.AccountID, c);})
		.def_property("Password", [](const CThostFtdcOpenAccountField& a) {return encoding_cast(a.Password);}, [](CThostFtdcOpenAccountField& a, char c[]) {strcpy(a.Password, c);})
		.def_readwrite("InstallID", &CThostFtdcOpenAccountField::InstallID)
		.def_readwrite("VerifyCertNoFlag", &CThostFtdcOpenAccountField::VerifyCertNoFlag)
		.def_property("CurrencyID", [](const CThostFtdcOpenAccountField& a) {return encoding_cast(a.CurrencyID);}, [](CThostFtdcOpenAccountField& a, char c[]) {strcpy(a.CurrencyID, c);})
		.def_readwrite("CashExchangeCode", &CThostFtdcOpenAccountField::CashExchangeCode)
		.def_property("Digest", [](const CThostFtdcOpenAccountField& a) {return encoding_cast(a.Digest);}, [](CThostFtdcOpenAccountField& a, char c[]) {strcpy(a.Digest, c);})
		.def_readwrite("BankAccType", &CThostFtdcOpenAccountField::BankAccType)
		.def_property("DeviceID", [](const CThostFtdcOpenAccountField& a) {return encoding_cast(a.DeviceID);}, [](CThostFtdcOpenAccountField& a, char c[]) {strcpy(a.DeviceID, c);})
		.def_readwrite("BankSecuAccType", &CThostFtdcOpenAccountField::BankSecuAccType)
		.def_property("BrokerIDByBank", [](const CThostFtdcOpenAccountField& a) {return encoding_cast(a.BrokerIDByBank);}, [](CThostFtdcOpenAccountField& a, char c[]) {strcpy(a.BrokerIDByBank, c);})
		.def_property("BankSecuAcc", [](const CThostFtdcOpenAccountField& a) {return encoding_cast(a.BankSecuAcc);}, [](CThostFtdcOpenAccountField& a, char c[]) {strcpy(a.BankSecuAcc, c);})
		.def_readwrite("BankPwdFlag", &CThostFtdcOpenAccountField::BankPwdFlag)
		.def_readwrite("SecuPwdFlag", &CThostFtdcOpenAccountField::SecuPwdFlag)
		.def_property("OperNo", [](const CThostFtdcOpenAccountField& a) {return encoding_cast(a.OperNo);}, [](CThostFtdcOpenAccountField& a, char c[]) {strcpy(a.OperNo, c);})
		.def_readwrite("TID", &CThostFtdcOpenAccountField::TID)
		.def_property("UserID", [](const CThostFtdcOpenAccountField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcOpenAccountField& a, char c[]) {strcpy(a.UserID, c);})
		.def_readwrite("ErrorID", &CThostFtdcOpenAccountField::ErrorID)
		.def_property("ErrorMsg", [](const CThostFtdcOpenAccountField& a) {return encoding_cast(a.ErrorMsg);}, [](CThostFtdcOpenAccountField& a, char c[]) {strcpy(a.ErrorMsg, c);})
		.def_property("LongCustomerName", [](const CThostFtdcOpenAccountField& a) {return encoding_cast(a.LongCustomerName);}, [](CThostFtdcOpenAccountField& a, char c[]) {strcpy(a.LongCustomerName, c);})
		.def("to_dict", [](const CThostFtdcOpenAccountField& a) {py::dict d; d["TradeCode"] = encoding_cast(a.TradeCode); d["BankID"] = encoding_cast(a.BankID); d["BankBranchID"] = encoding_cast(a.BankBranchID); d["BrokerID"] = encoding_cast(a.BrokerID); d["BrokerBranchID"] = encoding_cast(a.BrokerBranchID); d["TradeDate"] = encoding_cast(a.TradeDate); d["TradeTime"] = encoding_cast(a.TradeTime); d["BankSerial"] = encoding_cast(a.BankSerial); d["TradingDay"] = encoding_cast(a.TradingDay); d["PlateSerial"] = a.PlateSerial; d["LastFragment"] = a.LastFragment; d["SessionID"] = a.SessionID; d["CustomerName"] = encoding_cast(a.CustomerName); d["IdCardType"] = a.IdCardType; d["IdentifiedCardNo"] = encoding_cast(a.IdentifiedCardNo); d["Gender"] = a.Gender; d["CountryCode"] = encoding_cast(a.CountryCode); d["CustType"] = a.CustType; d["Address"] = encoding_cast(a.Address); d["ZipCode"] = encoding_cast(a.ZipCode); d["Telephone"] = encoding_cast(a.Telephone); d["MobilePhone"] = encoding_cast(a.MobilePhone); d["Fax"] = encoding_cast(a.Fax); d["EMail"] = encoding_cast(a.EMail); d["MoneyAccountStatus"] = a.MoneyAccountStatus; d["BankAccount"] = encoding_cast(a.BankAccount); d["BankPassWord"] = encoding_cast(a.BankPassWord); d["AccountID"] = encoding_cast(a.AccountID); d["Password"] = encoding_cast(a.Password); d["InstallID"] = a.InstallID; d["VerifyCertNoFlag"] = a.VerifyCertNoFlag; d["CurrencyID"] = encoding_cast(a.CurrencyID); d["CashExchangeCode"] = a.CashExchangeCode; d["Digest"] = encoding_cast(a.Digest); d["BankAccType"] = a.BankAccType; d["DeviceID"] = encoding_cast(a.DeviceID); d["BankSecuAccType"] = a.BankSecuAccType; d["BrokerIDByBank"] = encoding_cast(a.BrokerIDByBank); d["BankSecuAcc"] = encoding_cast(a.BankSecuAcc); d["BankPwdFlag"] = a.BankPwdFlag; d["SecuPwdFlag"] = a.SecuPwdFlag; d["OperNo"] = encoding_cast(a.OperNo); d["TID"] = a.TID; d["UserID"] = encoding_cast(a.UserID); d["ErrorID"] = a.ErrorID; d["ErrorMsg"] = encoding_cast(a.ErrorMsg); d["LongCustomerName"] = encoding_cast(a.LongCustomerName); return d;});

	py::class_<CThostFtdcCancelAccountField>(m, "CThostFtdcCancelAccountField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcCancelAccountField& a) {return CThostFtdcCancelAccountField(a);})
		.def_property("TradeCode", [](const CThostFtdcCancelAccountField& a) {return encoding_cast(a.TradeCode);}, [](CThostFtdcCancelAccountField& a, char c[]) {strcpy(a.TradeCode, c);})
		.def_property("BankID", [](const CThostFtdcCancelAccountField& a) {return encoding_cast(a.BankID);}, [](CThostFtdcCancelAccountField& a, char c[]) {strcpy(a.BankID, c);})
		.def_property("BankBranchID", [](const CThostFtdcCancelAccountField& a) {return encoding_cast(a.BankBranchID);}, [](CThostFtdcCancelAccountField& a, char c[]) {strcpy(a.BankBranchID, c);})
		.def_property("BrokerID", [](const CThostFtdcCancelAccountField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcCancelAccountField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("BrokerBranchID", [](const CThostFtdcCancelAccountField& a) {return encoding_cast(a.BrokerBranchID);}, [](CThostFtdcCancelAccountField& a, char c[]) {strcpy(a.BrokerBranchID, c);})
		.def_property("TradeDate", [](const CThostFtdcCancelAccountField& a) {return encoding_cast(a.TradeDate);}, [](CThostFtdcCancelAccountField& a, char c[]) {strcpy(a.TradeDate, c);})
		.def_property("TradeTime", [](const CThostFtdcCancelAccountField& a) {return encoding_cast(a.TradeTime);}, [](CThostFtdcCancelAccountField& a, char c[]) {strcpy(a.TradeTime, c);})
		.def_property("BankSerial", [](const CThostFtdcCancelAccountField& a) {return encoding_cast(a.BankSerial);}, [](CThostFtdcCancelAccountField& a, char c[]) {strcpy(a.BankSerial, c);})
		.def_property("TradingDay", [](const CThostFtdcCancelAccountField& a) {return encoding_cast(a.TradingDay);}, [](CThostFtdcCancelAccountField& a, char c[]) {strcpy(a.TradingDay, c);})
		.def_readwrite("PlateSerial", &CThostFtdcCancelAccountField::PlateSerial)
		.def_readwrite("LastFragment", &CThostFtdcCancelAccountField::LastFragment)
		.def_readwrite("SessionID", &CThostFtdcCancelAccountField::SessionID)
		.def_property("CustomerName", [](const CThostFtdcCancelAccountField& a) {return encoding_cast(a.CustomerName);}, [](CThostFtdcCancelAccountField& a, char c[]) {strcpy(a.CustomerName, c);})
		.def_readwrite("IdCardType", &CThostFtdcCancelAccountField::IdCardType)
		.def_property("IdentifiedCardNo", [](const CThostFtdcCancelAccountField& a) {return encoding_cast(a.IdentifiedCardNo);}, [](CThostFtdcCancelAccountField& a, char c[]) {strcpy(a.IdentifiedCardNo, c);})
		.def_readwrite("Gender", &CThostFtdcCancelAccountField::Gender)
		.def_property("CountryCode", [](const CThostFtdcCancelAccountField& a) {return encoding_cast(a.CountryCode);}, [](CThostFtdcCancelAccountField& a, char c[]) {strcpy(a.CountryCode, c);})
		.def_readwrite("CustType", &CThostFtdcCancelAccountField::CustType)
		.def_property("Address", [](const CThostFtdcCancelAccountField& a) {return encoding_cast(a.Address);}, [](CThostFtdcCancelAccountField& a, char c[]) {strcpy(a.Address, c);})
		.def_property("ZipCode", [](const CThostFtdcCancelAccountField& a) {return encoding_cast(a.ZipCode);}, [](CThostFtdcCancelAccountField& a, char c[]) {strcpy(a.ZipCode, c);})
		.def_property("Telephone", [](const CThostFtdcCancelAccountField& a) {return encoding_cast(a.Telephone);}, [](CThostFtdcCancelAccountField& a, char c[]) {strcpy(a.Telephone, c);})
		.def_property("MobilePhone", [](const CThostFtdcCancelAccountField& a) {return encoding_cast(a.MobilePhone);}, [](CThostFtdcCancelAccountField& a, char c[]) {strcpy(a.MobilePhone, c);})
		.def_property("Fax", [](const CThostFtdcCancelAccountField& a) {return encoding_cast(a.Fax);}, [](CThostFtdcCancelAccountField& a, char c[]) {strcpy(a.Fax, c);})
		.def_property("EMail", [](const CThostFtdcCancelAccountField& a) {return encoding_cast(a.EMail);}, [](CThostFtdcCancelAccountField& a, char c[]) {strcpy(a.EMail, c);})
		.def_readwrite("MoneyAccountStatus", &CThostFtdcCancelAccountField::MoneyAccountStatus)
		.def_property("BankAccount", [](const CThostFtdcCancelAccountField& a) {return encoding_cast(a.BankAccount);}, [](CThostFtdcCancelAccountField& a, char c[]) {strcpy(a.BankAccount, c);})
		.def_property("BankPassWord", [](const CThostFtdcCancelAccountField& a) {return encoding_cast(a.BankPassWord);}, [](CThostFtdcCancelAccountField& a, char c[]) {strcpy(a.BankPassWord, c);})
		.def_property("AccountID", [](const CThostFtdcCancelAccountField& a) {return encoding_cast(a.AccountID);}, [](CThostFtdcCancelAccountField& a, char c[]) {strcpy(a.AccountID, c);})
		.def_property("Password", [](const CThostFtdcCancelAccountField& a) {return encoding_cast(a.Password);}, [](CThostFtdcCancelAccountField& a, char c[]) {strcpy(a.Password, c);})
		.def_readwrite("InstallID", &CThostFtdcCancelAccountField::InstallID)
		.def_readwrite("VerifyCertNoFlag", &CThostFtdcCancelAccountField::VerifyCertNoFlag)
		.def_property("CurrencyID", [](const CThostFtdcCancelAccountField& a) {return encoding_cast(a.CurrencyID);}, [](CThostFtdcCancelAccountField& a, char c[]) {strcpy(a.CurrencyID, c);})
		.def_readwrite("CashExchangeCode", &CThostFtdcCancelAccountField::CashExchangeCode)
		.def_property("Digest", [](const CThostFtdcCancelAccountField& a) {return encoding_cast(a.Digest);}, [](CThostFtdcCancelAccountField& a, char c[]) {strcpy(a.Digest, c);})
		.def_readwrite("BankAccType", &CThostFtdcCancelAccountField::BankAccType)
		.def_property("DeviceID", [](const CThostFtdcCancelAccountField& a) {return encoding_cast(a.DeviceID);}, [](CThostFtdcCancelAccountField& a, char c[]) {strcpy(a.DeviceID, c);})
		.def_readwrite("BankSecuAccType", &CThostFtdcCancelAccountField::BankSecuAccType)
		.def_property("BrokerIDByBank", [](const CThostFtdcCancelAccountField& a) {return encoding_cast(a.BrokerIDByBank);}, [](CThostFtdcCancelAccountField& a, char c[]) {strcpy(a.BrokerIDByBank, c);})
		.def_property("BankSecuAcc", [](const CThostFtdcCancelAccountField& a) {return encoding_cast(a.BankSecuAcc);}, [](CThostFtdcCancelAccountField& a, char c[]) {strcpy(a.BankSecuAcc, c);})
		.def_readwrite("BankPwdFlag", &CThostFtdcCancelAccountField::BankPwdFlag)
		.def_readwrite("SecuPwdFlag", &CThostFtdcCancelAccountField::SecuPwdFlag)
		.def_property("OperNo", [](const CThostFtdcCancelAccountField& a) {return encoding_cast(a.OperNo);}, [](CThostFtdcCancelAccountField& a, char c[]) {strcpy(a.OperNo, c);})
		.def_readwrite("TID", &CThostFtdcCancelAccountField::TID)
		.def_property("UserID", [](const CThostFtdcCancelAccountField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcCancelAccountField& a, char c[]) {strcpy(a.UserID, c);})
		.def_readwrite("ErrorID", &CThostFtdcCancelAccountField::ErrorID)
		.def_property("ErrorMsg", [](const CThostFtdcCancelAccountField& a) {return encoding_cast(a.ErrorMsg);}, [](CThostFtdcCancelAccountField& a, char c[]) {strcpy(a.ErrorMsg, c);})
		.def_property("LongCustomerName", [](const CThostFtdcCancelAccountField& a) {return encoding_cast(a.LongCustomerName);}, [](CThostFtdcCancelAccountField& a, char c[]) {strcpy(a.LongCustomerName, c);})
		.def("to_dict", [](const CThostFtdcCancelAccountField& a) {py::dict d; d["TradeCode"] = encoding_cast(a.TradeCode); d["BankID"] = encoding_cast(a.BankID); d["BankBranchID"] = encoding_cast(a.BankBranchID); d["BrokerID"] = encoding_cast(a.BrokerID); d["BrokerBranchID"] = encoding_cast(a.BrokerBranchID); d["TradeDate"] = encoding_cast(a.TradeDate); d["TradeTime"] = encoding_cast(a.TradeTime); d["BankSerial"] = encoding_cast(a.BankSerial); d["TradingDay"] = encoding_cast(a.TradingDay); d["PlateSerial"] = a.PlateSerial; d["LastFragment"] = a.LastFragment; d["SessionID"] = a.SessionID; d["CustomerName"] = encoding_cast(a.CustomerName); d["IdCardType"] = a.IdCardType; d["IdentifiedCardNo"] = encoding_cast(a.IdentifiedCardNo); d["Gender"] = a.Gender; d["CountryCode"] = encoding_cast(a.CountryCode); d["CustType"] = a.CustType; d["Address"] = encoding_cast(a.Address); d["ZipCode"] = encoding_cast(a.ZipCode); d["Telephone"] = encoding_cast(a.Telephone); d["MobilePhone"] = encoding_cast(a.MobilePhone); d["Fax"] = encoding_cast(a.Fax); d["EMail"] = encoding_cast(a.EMail); d["MoneyAccountStatus"] = a.MoneyAccountStatus; d["BankAccount"] = encoding_cast(a.BankAccount); d["BankPassWord"] = encoding_cast(a.BankPassWord); d["AccountID"] = encoding_cast(a.AccountID); d["Password"] = encoding_cast(a.Password); d["InstallID"] = a.InstallID; d["VerifyCertNoFlag"] = a.VerifyCertNoFlag; d["CurrencyID"] = encoding_cast(a.CurrencyID); d["CashExchangeCode"] = a.CashExchangeCode; d["Digest"] = encoding_cast(a.Digest); d["BankAccType"] = a.BankAccType; d["DeviceID"] = encoding_cast(a.DeviceID); d["BankSecuAccType"] = a.BankSecuAccType; d["BrokerIDByBank"] = encoding_cast(a.BrokerIDByBank); d["BankSecuAcc"] = encoding_cast(a.BankSecuAcc); d["BankPwdFlag"] = a.BankPwdFlag; d["SecuPwdFlag"] = a.SecuPwdFlag; d["OperNo"] = encoding_cast(a.OperNo); d["TID"] = a.TID; d["UserID"] = encoding_cast(a.UserID); d["ErrorID"] = a.ErrorID; d["ErrorMsg"] = encoding_cast(a.ErrorMsg); d["LongCustomerName"] = encoding_cast(a.LongCustomerName); return d;});

	py::class_<CThostFtdcChangeAccountField>(m, "CThostFtdcChangeAccountField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcChangeAccountField& a) {return CThostFtdcChangeAccountField(a);})
		.def_property("TradeCode", [](const CThostFtdcChangeAccountField& a) {return encoding_cast(a.TradeCode);}, [](CThostFtdcChangeAccountField& a, char c[]) {strcpy(a.TradeCode, c);})
		.def_property("BankID", [](const CThostFtdcChangeAccountField& a) {return encoding_cast(a.BankID);}, [](CThostFtdcChangeAccountField& a, char c[]) {strcpy(a.BankID, c);})
		.def_property("BankBranchID", [](const CThostFtdcChangeAccountField& a) {return encoding_cast(a.BankBranchID);}, [](CThostFtdcChangeAccountField& a, char c[]) {strcpy(a.BankBranchID, c);})
		.def_property("BrokerID", [](const CThostFtdcChangeAccountField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcChangeAccountField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("BrokerBranchID", [](const CThostFtdcChangeAccountField& a) {return encoding_cast(a.BrokerBranchID);}, [](CThostFtdcChangeAccountField& a, char c[]) {strcpy(a.BrokerBranchID, c);})
		.def_property("TradeDate", [](const CThostFtdcChangeAccountField& a) {return encoding_cast(a.TradeDate);}, [](CThostFtdcChangeAccountField& a, char c[]) {strcpy(a.TradeDate, c);})
		.def_property("TradeTime", [](const CThostFtdcChangeAccountField& a) {return encoding_cast(a.TradeTime);}, [](CThostFtdcChangeAccountField& a, char c[]) {strcpy(a.TradeTime, c);})
		.def_property("BankSerial", [](const CThostFtdcChangeAccountField& a) {return encoding_cast(a.BankSerial);}, [](CThostFtdcChangeAccountField& a, char c[]) {strcpy(a.BankSerial, c);})
		.def_property("TradingDay", [](const CThostFtdcChangeAccountField& a) {return encoding_cast(a.TradingDay);}, [](CThostFtdcChangeAccountField& a, char c[]) {strcpy(a.TradingDay, c);})
		.def_readwrite("PlateSerial", &CThostFtdcChangeAccountField::PlateSerial)
		.def_readwrite("LastFragment", &CThostFtdcChangeAccountField::LastFragment)
		.def_readwrite("SessionID", &CThostFtdcChangeAccountField::SessionID)
		.def_property("CustomerName", [](const CThostFtdcChangeAccountField& a) {return encoding_cast(a.CustomerName);}, [](CThostFtdcChangeAccountField& a, char c[]) {strcpy(a.CustomerName, c);})
		.def_readwrite("IdCardType", &CThostFtdcChangeAccountField::IdCardType)
		.def_property("IdentifiedCardNo", [](const CThostFtdcChangeAccountField& a) {return encoding_cast(a.IdentifiedCardNo);}, [](CThostFtdcChangeAccountField& a, char c[]) {strcpy(a.IdentifiedCardNo, c);})
		.def_readwrite("Gender", &CThostFtdcChangeAccountField::Gender)
		.def_property("CountryCode", [](const CThostFtdcChangeAccountField& a) {return encoding_cast(a.CountryCode);}, [](CThostFtdcChangeAccountField& a, char c[]) {strcpy(a.CountryCode, c);})
		.def_readwrite("CustType", &CThostFtdcChangeAccountField::CustType)
		.def_property("Address", [](const CThostFtdcChangeAccountField& a) {return encoding_cast(a.Address);}, [](CThostFtdcChangeAccountField& a, char c[]) {strcpy(a.Address, c);})
		.def_property("ZipCode", [](const CThostFtdcChangeAccountField& a) {return encoding_cast(a.ZipCode);}, [](CThostFtdcChangeAccountField& a, char c[]) {strcpy(a.ZipCode, c);})
		.def_property("Telephone", [](const CThostFtdcChangeAccountField& a) {return encoding_cast(a.Telephone);}, [](CThostFtdcChangeAccountField& a, char c[]) {strcpy(a.Telephone, c);})
		.def_property("MobilePhone", [](const CThostFtdcChangeAccountField& a) {return encoding_cast(a.MobilePhone);}, [](CThostFtdcChangeAccountField& a, char c[]) {strcpy(a.MobilePhone, c);})
		.def_property("Fax", [](const CThostFtdcChangeAccountField& a) {return encoding_cast(a.Fax);}, [](CThostFtdcChangeAccountField& a, char c[]) {strcpy(a.Fax, c);})
		.def_property("EMail", [](const CThostFtdcChangeAccountField& a) {return encoding_cast(a.EMail);}, [](CThostFtdcChangeAccountField& a, char c[]) {strcpy(a.EMail, c);})
		.def_readwrite("MoneyAccountStatus", &CThostFtdcChangeAccountField::MoneyAccountStatus)
		.def_property("BankAccount", [](const CThostFtdcChangeAccountField& a) {return encoding_cast(a.BankAccount);}, [](CThostFtdcChangeAccountField& a, char c[]) {strcpy(a.BankAccount, c);})
		.def_property("BankPassWord", [](const CThostFtdcChangeAccountField& a) {return encoding_cast(a.BankPassWord);}, [](CThostFtdcChangeAccountField& a, char c[]) {strcpy(a.BankPassWord, c);})
		.def_property("NewBankAccount", [](const CThostFtdcChangeAccountField& a) {return encoding_cast(a.NewBankAccount);}, [](CThostFtdcChangeAccountField& a, char c[]) {strcpy(a.NewBankAccount, c);})
		.def_property("NewBankPassWord", [](const CThostFtdcChangeAccountField& a) {return encoding_cast(a.NewBankPassWord);}, [](CThostFtdcChangeAccountField& a, char c[]) {strcpy(a.NewBankPassWord, c);})
		.def_property("AccountID", [](const CThostFtdcChangeAccountField& a) {return encoding_cast(a.AccountID);}, [](CThostFtdcChangeAccountField& a, char c[]) {strcpy(a.AccountID, c);})
		.def_property("Password", [](const CThostFtdcChangeAccountField& a) {return encoding_cast(a.Password);}, [](CThostFtdcChangeAccountField& a, char c[]) {strcpy(a.Password, c);})
		.def_readwrite("BankAccType", &CThostFtdcChangeAccountField::BankAccType)
		.def_readwrite("InstallID", &CThostFtdcChangeAccountField::InstallID)
		.def_readwrite("VerifyCertNoFlag", &CThostFtdcChangeAccountField::VerifyCertNoFlag)
		.def_property("CurrencyID", [](const CThostFtdcChangeAccountField& a) {return encoding_cast(a.CurrencyID);}, [](CThostFtdcChangeAccountField& a, char c[]) {strcpy(a.CurrencyID, c);})
		.def_property("BrokerIDByBank", [](const CThostFtdcChangeAccountField& a) {return encoding_cast(a.BrokerIDByBank);}, [](CThostFtdcChangeAccountField& a, char c[]) {strcpy(a.BrokerIDByBank, c);})
		.def_readwrite("BankPwdFlag", &CThostFtdcChangeAccountField::BankPwdFlag)
		.def_readwrite("SecuPwdFlag", &CThostFtdcChangeAccountField::SecuPwdFlag)
		.def_readwrite("TID", &CThostFtdcChangeAccountField::TID)
		.def_property("Digest", [](const CThostFtdcChangeAccountField& a) {return encoding_cast(a.Digest);}, [](CThostFtdcChangeAccountField& a, char c[]) {strcpy(a.Digest, c);})
		.def_readwrite("ErrorID", &CThostFtdcChangeAccountField::ErrorID)
		.def_property("ErrorMsg", [](const CThostFtdcChangeAccountField& a) {return encoding_cast(a.ErrorMsg);}, [](CThostFtdcChangeAccountField& a, char c[]) {strcpy(a.ErrorMsg, c);})
		.def_property("LongCustomerName", [](const CThostFtdcChangeAccountField& a) {return encoding_cast(a.LongCustomerName);}, [](CThostFtdcChangeAccountField& a, char c[]) {strcpy(a.LongCustomerName, c);})
		.def("to_dict", [](const CThostFtdcChangeAccountField& a) {py::dict d; d["TradeCode"] = encoding_cast(a.TradeCode); d["BankID"] = encoding_cast(a.BankID); d["BankBranchID"] = encoding_cast(a.BankBranchID); d["BrokerID"] = encoding_cast(a.BrokerID); d["BrokerBranchID"] = encoding_cast(a.BrokerBranchID); d["TradeDate"] = encoding_cast(a.TradeDate); d["TradeTime"] = encoding_cast(a.TradeTime); d["BankSerial"] = encoding_cast(a.BankSerial); d["TradingDay"] = encoding_cast(a.TradingDay); d["PlateSerial"] = a.PlateSerial; d["LastFragment"] = a.LastFragment; d["SessionID"] = a.SessionID; d["CustomerName"] = encoding_cast(a.CustomerName); d["IdCardType"] = a.IdCardType; d["IdentifiedCardNo"] = encoding_cast(a.IdentifiedCardNo); d["Gender"] = a.Gender; d["CountryCode"] = encoding_cast(a.CountryCode); d["CustType"] = a.CustType; d["Address"] = encoding_cast(a.Address); d["ZipCode"] = encoding_cast(a.ZipCode); d["Telephone"] = encoding_cast(a.Telephone); d["MobilePhone"] = encoding_cast(a.MobilePhone); d["Fax"] = encoding_cast(a.Fax); d["EMail"] = encoding_cast(a.EMail); d["MoneyAccountStatus"] = a.MoneyAccountStatus; d["BankAccount"] = encoding_cast(a.BankAccount); d["BankPassWord"] = encoding_cast(a.BankPassWord); d["NewBankAccount"] = encoding_cast(a.NewBankAccount); d["NewBankPassWord"] = encoding_cast(a.NewBankPassWord); d["AccountID"] = encoding_cast(a.AccountID); d["Password"] = encoding_cast(a.Password); d["BankAccType"] = a.BankAccType; d["InstallID"] = a.InstallID; d["VerifyCertNoFlag"] = a.VerifyCertNoFlag; d["CurrencyID"] = encoding_cast(a.CurrencyID); d["BrokerIDByBank"] = encoding_cast(a.BrokerIDByBank); d["BankPwdFlag"] = a.BankPwdFlag; d["SecuPwdFlag"] = a.SecuPwdFlag; d["TID"] = a.TID; d["Digest"] = encoding_cast(a.Digest); d["ErrorID"] = a.ErrorID; d["ErrorMsg"] = encoding_cast(a.ErrorMsg); d["LongCustomerName"] = encoding_cast(a.LongCustomerName); return d;});

	py::class_<CThostFtdcSecAgentACIDMapField>(m, "CThostFtdcSecAgentACIDMapField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcSecAgentACIDMapField& a) {return CThostFtdcSecAgentACIDMapField(a);})
		.def_property("BrokerID", [](const CThostFtdcSecAgentACIDMapField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcSecAgentACIDMapField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("UserID", [](const CThostFtdcSecAgentACIDMapField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcSecAgentACIDMapField& a, char c[]) {strcpy(a.UserID, c);})
		.def_property("AccountID", [](const CThostFtdcSecAgentACIDMapField& a) {return encoding_cast(a.AccountID);}, [](CThostFtdcSecAgentACIDMapField& a, char c[]) {strcpy(a.AccountID, c);})
		.def_property("CurrencyID", [](const CThostFtdcSecAgentACIDMapField& a) {return encoding_cast(a.CurrencyID);}, [](CThostFtdcSecAgentACIDMapField& a, char c[]) {strcpy(a.CurrencyID, c);})
		.def_property("BrokerSecAgentID", [](const CThostFtdcSecAgentACIDMapField& a) {return encoding_cast(a.BrokerSecAgentID);}, [](CThostFtdcSecAgentACIDMapField& a, char c[]) {strcpy(a.BrokerSecAgentID, c);})
		.def("to_dict", [](const CThostFtdcSecAgentACIDMapField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["UserID"] = encoding_cast(a.UserID); d["AccountID"] = encoding_cast(a.AccountID); d["CurrencyID"] = encoding_cast(a.CurrencyID); d["BrokerSecAgentID"] = encoding_cast(a.BrokerSecAgentID); return d;});

	py::class_<CThostFtdcQrySecAgentACIDMapField>(m, "CThostFtdcQrySecAgentACIDMapField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQrySecAgentACIDMapField& a) {return CThostFtdcQrySecAgentACIDMapField(a);})
		.def_property("BrokerID", [](const CThostFtdcQrySecAgentACIDMapField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcQrySecAgentACIDMapField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("UserID", [](const CThostFtdcQrySecAgentACIDMapField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcQrySecAgentACIDMapField& a, char c[]) {strcpy(a.UserID, c);})
		.def_property("AccountID", [](const CThostFtdcQrySecAgentACIDMapField& a) {return encoding_cast(a.AccountID);}, [](CThostFtdcQrySecAgentACIDMapField& a, char c[]) {strcpy(a.AccountID, c);})
		.def_property("CurrencyID", [](const CThostFtdcQrySecAgentACIDMapField& a) {return encoding_cast(a.CurrencyID);}, [](CThostFtdcQrySecAgentACIDMapField& a, char c[]) {strcpy(a.CurrencyID, c);})
		.def("to_dict", [](const CThostFtdcQrySecAgentACIDMapField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["UserID"] = encoding_cast(a.UserID); d["AccountID"] = encoding_cast(a.AccountID); d["CurrencyID"] = encoding_cast(a.CurrencyID); return d;});

	py::class_<CThostFtdcUserRightsAssignField>(m, "CThostFtdcUserRightsAssignField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcUserRightsAssignField& a) {return CThostFtdcUserRightsAssignField(a);})
		.def_property("BrokerID", [](const CThostFtdcUserRightsAssignField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcUserRightsAssignField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("UserID", [](const CThostFtdcUserRightsAssignField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcUserRightsAssignField& a, char c[]) {strcpy(a.UserID, c);})
		.def_readwrite("DRIdentityID", &CThostFtdcUserRightsAssignField::DRIdentityID)
		.def("to_dict", [](const CThostFtdcUserRightsAssignField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["UserID"] = encoding_cast(a.UserID); d["DRIdentityID"] = a.DRIdentityID; return d;});

	py::class_<CThostFtdcBrokerUserRightAssignField>(m, "CThostFtdcBrokerUserRightAssignField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcBrokerUserRightAssignField& a) {return CThostFtdcBrokerUserRightAssignField(a);})
		.def_property("BrokerID", [](const CThostFtdcBrokerUserRightAssignField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcBrokerUserRightAssignField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_readwrite("DRIdentityID", &CThostFtdcBrokerUserRightAssignField::DRIdentityID)
		.def_readwrite("Tradeable", &CThostFtdcBrokerUserRightAssignField::Tradeable)
		.def("to_dict", [](const CThostFtdcBrokerUserRightAssignField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["DRIdentityID"] = a.DRIdentityID; d["Tradeable"] = a.Tradeable; return d;});

	py::class_<CThostFtdcDRTransferField>(m, "CThostFtdcDRTransferField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcDRTransferField& a) {return CThostFtdcDRTransferField(a);})
		.def_readwrite("OrigDRIdentityID", &CThostFtdcDRTransferField::OrigDRIdentityID)
		.def_readwrite("DestDRIdentityID", &CThostFtdcDRTransferField::DestDRIdentityID)
		.def_property("OrigBrokerID", [](const CThostFtdcDRTransferField& a) {return encoding_cast(a.OrigBrokerID);}, [](CThostFtdcDRTransferField& a, char c[]) {strcpy(a.OrigBrokerID, c);})
		.def_property("DestBrokerID", [](const CThostFtdcDRTransferField& a) {return encoding_cast(a.DestBrokerID);}, [](CThostFtdcDRTransferField& a, char c[]) {strcpy(a.DestBrokerID, c);})
		.def("to_dict", [](const CThostFtdcDRTransferField& a) {py::dict d; d["OrigDRIdentityID"] = a.OrigDRIdentityID; d["DestDRIdentityID"] = a.DestDRIdentityID; d["OrigBrokerID"] = encoding_cast(a.OrigBrokerID); d["DestBrokerID"] = encoding_cast(a.DestBrokerID); return d;});

	py::class_<CThostFtdcFensUserInfoField>(m, "CThostFtdcFensUserInfoField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcFensUserInfoField& a) {return CThostFtdcFensUserInfoField(a);})
		.def_property("BrokerID", [](const CThostFtdcFensUserInfoField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcFensUserInfoField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("UserID", [](const CThostFtdcFensUserInfoField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcFensUserInfoField& a, char c[]) {strcpy(a.UserID, c);})
		.def_readwrite("LoginMode", &CThostFtdcFensUserInfoField::LoginMode)
		.def("to_dict", [](const CThostFtdcFensUserInfoField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["UserID"] = encoding_cast(a.UserID); d["LoginMode"] = a.LoginMode; return d;});

	py::class_<CThostFtdcCurrTransferIdentityField>(m, "CThostFtdcCurrTransferIdentityField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcCurrTransferIdentityField& a) {return CThostFtdcCurrTransferIdentityField(a);})
		.def_readwrite("IdentityID", &CThostFtdcCurrTransferIdentityField::IdentityID)
		.def("to_dict", [](const CThostFtdcCurrTransferIdentityField& a) {py::dict d; d["IdentityID"] = a.IdentityID; return d;});

	py::class_<CThostFtdcLoginForbiddenUserField>(m, "CThostFtdcLoginForbiddenUserField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcLoginForbiddenUserField& a) {return CThostFtdcLoginForbiddenUserField(a);})
		.def_property("BrokerID", [](const CThostFtdcLoginForbiddenUserField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcLoginForbiddenUserField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("UserID", [](const CThostFtdcLoginForbiddenUserField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcLoginForbiddenUserField& a, char c[]) {strcpy(a.UserID, c);})
		.def_property("reserve1", [](const CThostFtdcLoginForbiddenUserField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcLoginForbiddenUserField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("IPAddress", [](const CThostFtdcLoginForbiddenUserField& a) {return encoding_cast(a.IPAddress);}, [](CThostFtdcLoginForbiddenUserField& a, char c[]) {strcpy(a.IPAddress, c);})
		.def("to_dict", [](const CThostFtdcLoginForbiddenUserField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["UserID"] = encoding_cast(a.UserID); d["reserve1"] = encoding_cast(a.reserve1); d["IPAddress"] = encoding_cast(a.IPAddress); return d;});

	py::class_<CThostFtdcQryLoginForbiddenUserField>(m, "CThostFtdcQryLoginForbiddenUserField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryLoginForbiddenUserField& a) {return CThostFtdcQryLoginForbiddenUserField(a);})
		.def_property("BrokerID", [](const CThostFtdcQryLoginForbiddenUserField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcQryLoginForbiddenUserField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("UserID", [](const CThostFtdcQryLoginForbiddenUserField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcQryLoginForbiddenUserField& a, char c[]) {strcpy(a.UserID, c);})
		.def("to_dict", [](const CThostFtdcQryLoginForbiddenUserField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["UserID"] = encoding_cast(a.UserID); return d;});

	py::class_<CThostFtdcTradingAccountReserveField>(m, "CThostFtdcTradingAccountReserveField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcTradingAccountReserveField& a) {return CThostFtdcTradingAccountReserveField(a);})
		.def_property("BrokerID", [](const CThostFtdcTradingAccountReserveField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcTradingAccountReserveField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("AccountID", [](const CThostFtdcTradingAccountReserveField& a) {return encoding_cast(a.AccountID);}, [](CThostFtdcTradingAccountReserveField& a, char c[]) {strcpy(a.AccountID, c);})
		.def_readwrite("Reserve", &CThostFtdcTradingAccountReserveField::Reserve)
		.def_property("CurrencyID", [](const CThostFtdcTradingAccountReserveField& a) {return encoding_cast(a.CurrencyID);}, [](CThostFtdcTradingAccountReserveField& a, char c[]) {strcpy(a.CurrencyID, c);})
		.def("to_dict", [](const CThostFtdcTradingAccountReserveField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["AccountID"] = encoding_cast(a.AccountID); d["Reserve"] = a.Reserve; d["CurrencyID"] = encoding_cast(a.CurrencyID); return d;});

	py::class_<CThostFtdcQryLoginForbiddenIPField>(m, "CThostFtdcQryLoginForbiddenIPField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryLoginForbiddenIPField& a) {return CThostFtdcQryLoginForbiddenIPField(a);})
		.def_property("reserve1", [](const CThostFtdcQryLoginForbiddenIPField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcQryLoginForbiddenIPField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("IPAddress", [](const CThostFtdcQryLoginForbiddenIPField& a) {return encoding_cast(a.IPAddress);}, [](CThostFtdcQryLoginForbiddenIPField& a, char c[]) {strcpy(a.IPAddress, c);})
		.def("to_dict", [](const CThostFtdcQryLoginForbiddenIPField& a) {py::dict d; d["reserve1"] = encoding_cast(a.reserve1); d["IPAddress"] = encoding_cast(a.IPAddress); return d;});

	py::class_<CThostFtdcQryIPListField>(m, "CThostFtdcQryIPListField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryIPListField& a) {return CThostFtdcQryIPListField(a);})
		.def_property("reserve1", [](const CThostFtdcQryIPListField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcQryIPListField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("IPAddress", [](const CThostFtdcQryIPListField& a) {return encoding_cast(a.IPAddress);}, [](CThostFtdcQryIPListField& a, char c[]) {strcpy(a.IPAddress, c);})
		.def("to_dict", [](const CThostFtdcQryIPListField& a) {py::dict d; d["reserve1"] = encoding_cast(a.reserve1); d["IPAddress"] = encoding_cast(a.IPAddress); return d;});

	py::class_<CThostFtdcQryUserRightsAssignField>(m, "CThostFtdcQryUserRightsAssignField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryUserRightsAssignField& a) {return CThostFtdcQryUserRightsAssignField(a);})
		.def_property("BrokerID", [](const CThostFtdcQryUserRightsAssignField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcQryUserRightsAssignField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("UserID", [](const CThostFtdcQryUserRightsAssignField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcQryUserRightsAssignField& a, char c[]) {strcpy(a.UserID, c);})
		.def("to_dict", [](const CThostFtdcQryUserRightsAssignField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["UserID"] = encoding_cast(a.UserID); return d;});

	py::class_<CThostFtdcReserveOpenAccountConfirmField>(m, "CThostFtdcReserveOpenAccountConfirmField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcReserveOpenAccountConfirmField& a) {return CThostFtdcReserveOpenAccountConfirmField(a);})
		.def_property("TradeCode", [](const CThostFtdcReserveOpenAccountConfirmField& a) {return encoding_cast(a.TradeCode);}, [](CThostFtdcReserveOpenAccountConfirmField& a, char c[]) {strcpy(a.TradeCode, c);})
		.def_property("BankID", [](const CThostFtdcReserveOpenAccountConfirmField& a) {return encoding_cast(a.BankID);}, [](CThostFtdcReserveOpenAccountConfirmField& a, char c[]) {strcpy(a.BankID, c);})
		.def_property("BankBranchID", [](const CThostFtdcReserveOpenAccountConfirmField& a) {return encoding_cast(a.BankBranchID);}, [](CThostFtdcReserveOpenAccountConfirmField& a, char c[]) {strcpy(a.BankBranchID, c);})
		.def_property("BrokerID", [](const CThostFtdcReserveOpenAccountConfirmField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcReserveOpenAccountConfirmField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("BrokerBranchID", [](const CThostFtdcReserveOpenAccountConfirmField& a) {return encoding_cast(a.BrokerBranchID);}, [](CThostFtdcReserveOpenAccountConfirmField& a, char c[]) {strcpy(a.BrokerBranchID, c);})
		.def_property("TradeDate", [](const CThostFtdcReserveOpenAccountConfirmField& a) {return encoding_cast(a.TradeDate);}, [](CThostFtdcReserveOpenAccountConfirmField& a, char c[]) {strcpy(a.TradeDate, c);})
		.def_property("TradeTime", [](const CThostFtdcReserveOpenAccountConfirmField& a) {return encoding_cast(a.TradeTime);}, [](CThostFtdcReserveOpenAccountConfirmField& a, char c[]) {strcpy(a.TradeTime, c);})
		.def_property("BankSerial", [](const CThostFtdcReserveOpenAccountConfirmField& a) {return encoding_cast(a.BankSerial);}, [](CThostFtdcReserveOpenAccountConfirmField& a, char c[]) {strcpy(a.BankSerial, c);})
		.def_property("TradingDay", [](const CThostFtdcReserveOpenAccountConfirmField& a) {return encoding_cast(a.TradingDay);}, [](CThostFtdcReserveOpenAccountConfirmField& a, char c[]) {strcpy(a.TradingDay, c);})
		.def_readwrite("PlateSerial", &CThostFtdcReserveOpenAccountConfirmField::PlateSerial)
		.def_readwrite("LastFragment", &CThostFtdcReserveOpenAccountConfirmField::LastFragment)
		.def_readwrite("SessionID", &CThostFtdcReserveOpenAccountConfirmField::SessionID)
		.def_property("CustomerName", [](const CThostFtdcReserveOpenAccountConfirmField& a) {return encoding_cast(a.CustomerName);}, [](CThostFtdcReserveOpenAccountConfirmField& a, char c[]) {strcpy(a.CustomerName, c);})
		.def_readwrite("IdCardType", &CThostFtdcReserveOpenAccountConfirmField::IdCardType)
		.def_property("IdentifiedCardNo", [](const CThostFtdcReserveOpenAccountConfirmField& a) {return encoding_cast(a.IdentifiedCardNo);}, [](CThostFtdcReserveOpenAccountConfirmField& a, char c[]) {strcpy(a.IdentifiedCardNo, c);})
		.def_readwrite("Gender", &CThostFtdcReserveOpenAccountConfirmField::Gender)
		.def_property("CountryCode", [](const CThostFtdcReserveOpenAccountConfirmField& a) {return encoding_cast(a.CountryCode);}, [](CThostFtdcReserveOpenAccountConfirmField& a, char c[]) {strcpy(a.CountryCode, c);})
		.def_readwrite("CustType", &CThostFtdcReserveOpenAccountConfirmField::CustType)
		.def_property("Address", [](const CThostFtdcReserveOpenAccountConfirmField& a) {return encoding_cast(a.Address);}, [](CThostFtdcReserveOpenAccountConfirmField& a, char c[]) {strcpy(a.Address, c);})
		.def_property("ZipCode", [](const CThostFtdcReserveOpenAccountConfirmField& a) {return encoding_cast(a.ZipCode);}, [](CThostFtdcReserveOpenAccountConfirmField& a, char c[]) {strcpy(a.ZipCode, c);})
		.def_property("Telephone", [](const CThostFtdcReserveOpenAccountConfirmField& a) {return encoding_cast(a.Telephone);}, [](CThostFtdcReserveOpenAccountConfirmField& a, char c[]) {strcpy(a.Telephone, c);})
		.def_property("MobilePhone", [](const CThostFtdcReserveOpenAccountConfirmField& a) {return encoding_cast(a.MobilePhone);}, [](CThostFtdcReserveOpenAccountConfirmField& a, char c[]) {strcpy(a.MobilePhone, c);})
		.def_property("Fax", [](const CThostFtdcReserveOpenAccountConfirmField& a) {return encoding_cast(a.Fax);}, [](CThostFtdcReserveOpenAccountConfirmField& a, char c[]) {strcpy(a.Fax, c);})
		.def_property("EMail", [](const CThostFtdcReserveOpenAccountConfirmField& a) {return encoding_cast(a.EMail);}, [](CThostFtdcReserveOpenAccountConfirmField& a, char c[]) {strcpy(a.EMail, c);})
		.def_readwrite("MoneyAccountStatus", &CThostFtdcReserveOpenAccountConfirmField::MoneyAccountStatus)
		.def_property("BankAccount", [](const CThostFtdcReserveOpenAccountConfirmField& a) {return encoding_cast(a.BankAccount);}, [](CThostFtdcReserveOpenAccountConfirmField& a, char c[]) {strcpy(a.BankAccount, c);})
		.def_property("BankPassWord", [](const CThostFtdcReserveOpenAccountConfirmField& a) {return encoding_cast(a.BankPassWord);}, [](CThostFtdcReserveOpenAccountConfirmField& a, char c[]) {strcpy(a.BankPassWord, c);})
		.def_readwrite("InstallID", &CThostFtdcReserveOpenAccountConfirmField::InstallID)
		.def_readwrite("VerifyCertNoFlag", &CThostFtdcReserveOpenAccountConfirmField::VerifyCertNoFlag)
		.def_property("CurrencyID", [](const CThostFtdcReserveOpenAccountConfirmField& a) {return encoding_cast(a.CurrencyID);}, [](CThostFtdcReserveOpenAccountConfirmField& a, char c[]) {strcpy(a.CurrencyID, c);})
		.def_property("Digest", [](const CThostFtdcReserveOpenAccountConfirmField& a) {return encoding_cast(a.Digest);}, [](CThostFtdcReserveOpenAccountConfirmField& a, char c[]) {strcpy(a.Digest, c);})
		.def_readwrite("BankAccType", &CThostFtdcReserveOpenAccountConfirmField::BankAccType)
		.def_property("BrokerIDByBank", [](const CThostFtdcReserveOpenAccountConfirmField& a) {return encoding_cast(a.BrokerIDByBank);}, [](CThostFtdcReserveOpenAccountConfirmField& a, char c[]) {strcpy(a.BrokerIDByBank, c);})
		.def_readwrite("TID", &CThostFtdcReserveOpenAccountConfirmField::TID)
		.def_property("AccountID", [](const CThostFtdcReserveOpenAccountConfirmField& a) {return encoding_cast(a.AccountID);}, [](CThostFtdcReserveOpenAccountConfirmField& a, char c[]) {strcpy(a.AccountID, c);})
		.def_property("Password", [](const CThostFtdcReserveOpenAccountConfirmField& a) {return encoding_cast(a.Password);}, [](CThostFtdcReserveOpenAccountConfirmField& a, char c[]) {strcpy(a.Password, c);})
		.def_property("BankReserveOpenSeq", [](const CThostFtdcReserveOpenAccountConfirmField& a) {return encoding_cast(a.BankReserveOpenSeq);}, [](CThostFtdcReserveOpenAccountConfirmField& a, char c[]) {strcpy(a.BankReserveOpenSeq, c);})
		.def_property("BookDate", [](const CThostFtdcReserveOpenAccountConfirmField& a) {return encoding_cast(a.BookDate);}, [](CThostFtdcReserveOpenAccountConfirmField& a, char c[]) {strcpy(a.BookDate, c);})
		.def_property("BookPsw", [](const CThostFtdcReserveOpenAccountConfirmField& a) {return encoding_cast(a.BookPsw);}, [](CThostFtdcReserveOpenAccountConfirmField& a, char c[]) {strcpy(a.BookPsw, c);})
		.def_readwrite("ErrorID", &CThostFtdcReserveOpenAccountConfirmField::ErrorID)
		.def_property("ErrorMsg", [](const CThostFtdcReserveOpenAccountConfirmField& a) {return encoding_cast(a.ErrorMsg);}, [](CThostFtdcReserveOpenAccountConfirmField& a, char c[]) {strcpy(a.ErrorMsg, c);})
		.def("to_dict", [](const CThostFtdcReserveOpenAccountConfirmField& a) {py::dict d; d["TradeCode"] = encoding_cast(a.TradeCode); d["BankID"] = encoding_cast(a.BankID); d["BankBranchID"] = encoding_cast(a.BankBranchID); d["BrokerID"] = encoding_cast(a.BrokerID); d["BrokerBranchID"] = encoding_cast(a.BrokerBranchID); d["TradeDate"] = encoding_cast(a.TradeDate); d["TradeTime"] = encoding_cast(a.TradeTime); d["BankSerial"] = encoding_cast(a.BankSerial); d["TradingDay"] = encoding_cast(a.TradingDay); d["PlateSerial"] = a.PlateSerial; d["LastFragment"] = a.LastFragment; d["SessionID"] = a.SessionID; d["CustomerName"] = encoding_cast(a.CustomerName); d["IdCardType"] = a.IdCardType; d["IdentifiedCardNo"] = encoding_cast(a.IdentifiedCardNo); d["Gender"] = a.Gender; d["CountryCode"] = encoding_cast(a.CountryCode); d["CustType"] = a.CustType; d["Address"] = encoding_cast(a.Address); d["ZipCode"] = encoding_cast(a.ZipCode); d["Telephone"] = encoding_cast(a.Telephone); d["MobilePhone"] = encoding_cast(a.MobilePhone); d["Fax"] = encoding_cast(a.Fax); d["EMail"] = encoding_cast(a.EMail); d["MoneyAccountStatus"] = a.MoneyAccountStatus; d["BankAccount"] = encoding_cast(a.BankAccount); d["BankPassWord"] = encoding_cast(a.BankPassWord); d["InstallID"] = a.InstallID; d["VerifyCertNoFlag"] = a.VerifyCertNoFlag; d["CurrencyID"] = encoding_cast(a.CurrencyID); d["Digest"] = encoding_cast(a.Digest); d["BankAccType"] = a.BankAccType; d["BrokerIDByBank"] = encoding_cast(a.BrokerIDByBank); d["TID"] = a.TID; d["AccountID"] = encoding_cast(a.AccountID); d["Password"] = encoding_cast(a.Password); d["BankReserveOpenSeq"] = encoding_cast(a.BankReserveOpenSeq); d["BookDate"] = encoding_cast(a.BookDate); d["BookPsw"] = encoding_cast(a.BookPsw); d["ErrorID"] = a.ErrorID; d["ErrorMsg"] = encoding_cast(a.ErrorMsg); return d;});

	py::class_<CThostFtdcReserveOpenAccountField>(m, "CThostFtdcReserveOpenAccountField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcReserveOpenAccountField& a) {return CThostFtdcReserveOpenAccountField(a);})
		.def_property("TradeCode", [](const CThostFtdcReserveOpenAccountField& a) {return encoding_cast(a.TradeCode);}, [](CThostFtdcReserveOpenAccountField& a, char c[]) {strcpy(a.TradeCode, c);})
		.def_property("BankID", [](const CThostFtdcReserveOpenAccountField& a) {return encoding_cast(a.BankID);}, [](CThostFtdcReserveOpenAccountField& a, char c[]) {strcpy(a.BankID, c);})
		.def_property("BankBranchID", [](const CThostFtdcReserveOpenAccountField& a) {return encoding_cast(a.BankBranchID);}, [](CThostFtdcReserveOpenAccountField& a, char c[]) {strcpy(a.BankBranchID, c);})
		.def_property("BrokerID", [](const CThostFtdcReserveOpenAccountField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcReserveOpenAccountField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("BrokerBranchID", [](const CThostFtdcReserveOpenAccountField& a) {return encoding_cast(a.BrokerBranchID);}, [](CThostFtdcReserveOpenAccountField& a, char c[]) {strcpy(a.BrokerBranchID, c);})
		.def_property("TradeDate", [](const CThostFtdcReserveOpenAccountField& a) {return encoding_cast(a.TradeDate);}, [](CThostFtdcReserveOpenAccountField& a, char c[]) {strcpy(a.TradeDate, c);})
		.def_property("TradeTime", [](const CThostFtdcReserveOpenAccountField& a) {return encoding_cast(a.TradeTime);}, [](CThostFtdcReserveOpenAccountField& a, char c[]) {strcpy(a.TradeTime, c);})
		.def_property("BankSerial", [](const CThostFtdcReserveOpenAccountField& a) {return encoding_cast(a.BankSerial);}, [](CThostFtdcReserveOpenAccountField& a, char c[]) {strcpy(a.BankSerial, c);})
		.def_property("TradingDay", [](const CThostFtdcReserveOpenAccountField& a) {return encoding_cast(a.TradingDay);}, [](CThostFtdcReserveOpenAccountField& a, char c[]) {strcpy(a.TradingDay, c);})
		.def_readwrite("PlateSerial", &CThostFtdcReserveOpenAccountField::PlateSerial)
		.def_readwrite("LastFragment", &CThostFtdcReserveOpenAccountField::LastFragment)
		.def_readwrite("SessionID", &CThostFtdcReserveOpenAccountField::SessionID)
		.def_property("CustomerName", [](const CThostFtdcReserveOpenAccountField& a) {return encoding_cast(a.CustomerName);}, [](CThostFtdcReserveOpenAccountField& a, char c[]) {strcpy(a.CustomerName, c);})
		.def_readwrite("IdCardType", &CThostFtdcReserveOpenAccountField::IdCardType)
		.def_property("IdentifiedCardNo", [](const CThostFtdcReserveOpenAccountField& a) {return encoding_cast(a.IdentifiedCardNo);}, [](CThostFtdcReserveOpenAccountField& a, char c[]) {strcpy(a.IdentifiedCardNo, c);})
		.def_readwrite("Gender", &CThostFtdcReserveOpenAccountField::Gender)
		.def_property("CountryCode", [](const CThostFtdcReserveOpenAccountField& a) {return encoding_cast(a.CountryCode);}, [](CThostFtdcReserveOpenAccountField& a, char c[]) {strcpy(a.CountryCode, c);})
		.def_readwrite("CustType", &CThostFtdcReserveOpenAccountField::CustType)
		.def_property("Address", [](const CThostFtdcReserveOpenAccountField& a) {return encoding_cast(a.Address);}, [](CThostFtdcReserveOpenAccountField& a, char c[]) {strcpy(a.Address, c);})
		.def_property("ZipCode", [](const CThostFtdcReserveOpenAccountField& a) {return encoding_cast(a.ZipCode);}, [](CThostFtdcReserveOpenAccountField& a, char c[]) {strcpy(a.ZipCode, c);})
		.def_property("Telephone", [](const CThostFtdcReserveOpenAccountField& a) {return encoding_cast(a.Telephone);}, [](CThostFtdcReserveOpenAccountField& a, char c[]) {strcpy(a.Telephone, c);})
		.def_property("MobilePhone", [](const CThostFtdcReserveOpenAccountField& a) {return encoding_cast(a.MobilePhone);}, [](CThostFtdcReserveOpenAccountField& a, char c[]) {strcpy(a.MobilePhone, c);})
		.def_property("Fax", [](const CThostFtdcReserveOpenAccountField& a) {return encoding_cast(a.Fax);}, [](CThostFtdcReserveOpenAccountField& a, char c[]) {strcpy(a.Fax, c);})
		.def_property("EMail", [](const CThostFtdcReserveOpenAccountField& a) {return encoding_cast(a.EMail);}, [](CThostFtdcReserveOpenAccountField& a, char c[]) {strcpy(a.EMail, c);})
		.def_readwrite("MoneyAccountStatus", &CThostFtdcReserveOpenAccountField::MoneyAccountStatus)
		.def_property("BankAccount", [](const CThostFtdcReserveOpenAccountField& a) {return encoding_cast(a.BankAccount);}, [](CThostFtdcReserveOpenAccountField& a, char c[]) {strcpy(a.BankAccount, c);})
		.def_property("BankPassWord", [](const CThostFtdcReserveOpenAccountField& a) {return encoding_cast(a.BankPassWord);}, [](CThostFtdcReserveOpenAccountField& a, char c[]) {strcpy(a.BankPassWord, c);})
		.def_readwrite("InstallID", &CThostFtdcReserveOpenAccountField::InstallID)
		.def_readwrite("VerifyCertNoFlag", &CThostFtdcReserveOpenAccountField::VerifyCertNoFlag)
		.def_property("CurrencyID", [](const CThostFtdcReserveOpenAccountField& a) {return encoding_cast(a.CurrencyID);}, [](CThostFtdcReserveOpenAccountField& a, char c[]) {strcpy(a.CurrencyID, c);})
		.def_property("Digest", [](const CThostFtdcReserveOpenAccountField& a) {return encoding_cast(a.Digest);}, [](CThostFtdcReserveOpenAccountField& a, char c[]) {strcpy(a.Digest, c);})
		.def_readwrite("BankAccType", &CThostFtdcReserveOpenAccountField::BankAccType)
		.def_property("BrokerIDByBank", [](const CThostFtdcReserveOpenAccountField& a) {return encoding_cast(a.BrokerIDByBank);}, [](CThostFtdcReserveOpenAccountField& a, char c[]) {strcpy(a.BrokerIDByBank, c);})
		.def_readwrite("TID", &CThostFtdcReserveOpenAccountField::TID)
		.def_readwrite("ReserveOpenAccStas", &CThostFtdcReserveOpenAccountField::ReserveOpenAccStas)
		.def_readwrite("ErrorID", &CThostFtdcReserveOpenAccountField::ErrorID)
		.def_property("ErrorMsg", [](const CThostFtdcReserveOpenAccountField& a) {return encoding_cast(a.ErrorMsg);}, [](CThostFtdcReserveOpenAccountField& a, char c[]) {strcpy(a.ErrorMsg, c);})
		.def("to_dict", [](const CThostFtdcReserveOpenAccountField& a) {py::dict d; d["TradeCode"] = encoding_cast(a.TradeCode); d["BankID"] = encoding_cast(a.BankID); d["BankBranchID"] = encoding_cast(a.BankBranchID); d["BrokerID"] = encoding_cast(a.BrokerID); d["BrokerBranchID"] = encoding_cast(a.BrokerBranchID); d["TradeDate"] = encoding_cast(a.TradeDate); d["TradeTime"] = encoding_cast(a.TradeTime); d["BankSerial"] = encoding_cast(a.BankSerial); d["TradingDay"] = encoding_cast(a.TradingDay); d["PlateSerial"] = a.PlateSerial; d["LastFragment"] = a.LastFragment; d["SessionID"] = a.SessionID; d["CustomerName"] = encoding_cast(a.CustomerName); d["IdCardType"] = a.IdCardType; d["IdentifiedCardNo"] = encoding_cast(a.IdentifiedCardNo); d["Gender"] = a.Gender; d["CountryCode"] = encoding_cast(a.CountryCode); d["CustType"] = a.CustType; d["Address"] = encoding_cast(a.Address); d["ZipCode"] = encoding_cast(a.ZipCode); d["Telephone"] = encoding_cast(a.Telephone); d["MobilePhone"] = encoding_cast(a.MobilePhone); d["Fax"] = encoding_cast(a.Fax); d["EMail"] = encoding_cast(a.EMail); d["MoneyAccountStatus"] = a.MoneyAccountStatus; d["BankAccount"] = encoding_cast(a.BankAccount); d["BankPassWord"] = encoding_cast(a.BankPassWord); d["InstallID"] = a.InstallID; d["VerifyCertNoFlag"] = a.VerifyCertNoFlag; d["CurrencyID"] = encoding_cast(a.CurrencyID); d["Digest"] = encoding_cast(a.Digest); d["BankAccType"] = a.BankAccType; d["BrokerIDByBank"] = encoding_cast(a.BrokerIDByBank); d["TID"] = a.TID; d["ReserveOpenAccStas"] = a.ReserveOpenAccStas; d["ErrorID"] = a.ErrorID; d["ErrorMsg"] = encoding_cast(a.ErrorMsg); return d;});

	py::class_<CThostFtdcAccountPropertyField>(m, "CThostFtdcAccountPropertyField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcAccountPropertyField& a) {return CThostFtdcAccountPropertyField(a);})
		.def_property("BrokerID", [](const CThostFtdcAccountPropertyField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcAccountPropertyField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("AccountID", [](const CThostFtdcAccountPropertyField& a) {return encoding_cast(a.AccountID);}, [](CThostFtdcAccountPropertyField& a, char c[]) {strcpy(a.AccountID, c);})
		.def_property("BankID", [](const CThostFtdcAccountPropertyField& a) {return encoding_cast(a.BankID);}, [](CThostFtdcAccountPropertyField& a, char c[]) {strcpy(a.BankID, c);})
		.def_property("BankAccount", [](const CThostFtdcAccountPropertyField& a) {return encoding_cast(a.BankAccount);}, [](CThostFtdcAccountPropertyField& a, char c[]) {strcpy(a.BankAccount, c);})
		.def_property("OpenName", [](const CThostFtdcAccountPropertyField& a) {return encoding_cast(a.OpenName);}, [](CThostFtdcAccountPropertyField& a, char c[]) {strcpy(a.OpenName, c);})
		.def_property("OpenBank", [](const CThostFtdcAccountPropertyField& a) {return encoding_cast(a.OpenBank);}, [](CThostFtdcAccountPropertyField& a, char c[]) {strcpy(a.OpenBank, c);})
		.def_readwrite("IsActive", &CThostFtdcAccountPropertyField::IsActive)
		.def_readwrite("AccountSourceType", &CThostFtdcAccountPropertyField::AccountSourceType)
		.def_property("OpenDate", [](const CThostFtdcAccountPropertyField& a) {return encoding_cast(a.OpenDate);}, [](CThostFtdcAccountPropertyField& a, char c[]) {strcpy(a.OpenDate, c);})
		.def_property("CancelDate", [](const CThostFtdcAccountPropertyField& a) {return encoding_cast(a.CancelDate);}, [](CThostFtdcAccountPropertyField& a, char c[]) {strcpy(a.CancelDate, c);})
		.def_property("OperatorID", [](const CThostFtdcAccountPropertyField& a) {return encoding_cast(a.OperatorID);}, [](CThostFtdcAccountPropertyField& a, char c[]) {strcpy(a.OperatorID, c);})
		.def_property("OperateDate", [](const CThostFtdcAccountPropertyField& a) {return encoding_cast(a.OperateDate);}, [](CThostFtdcAccountPropertyField& a, char c[]) {strcpy(a.OperateDate, c);})
		.def_property("OperateTime", [](const CThostFtdcAccountPropertyField& a) {return encoding_cast(a.OperateTime);}, [](CThostFtdcAccountPropertyField& a, char c[]) {strcpy(a.OperateTime, c);})
		.def_property("CurrencyID", [](const CThostFtdcAccountPropertyField& a) {return encoding_cast(a.CurrencyID);}, [](CThostFtdcAccountPropertyField& a, char c[]) {strcpy(a.CurrencyID, c);})
		.def("to_dict", [](const CThostFtdcAccountPropertyField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["AccountID"] = encoding_cast(a.AccountID); d["BankID"] = encoding_cast(a.BankID); d["BankAccount"] = encoding_cast(a.BankAccount); d["OpenName"] = encoding_cast(a.OpenName); d["OpenBank"] = encoding_cast(a.OpenBank); d["IsActive"] = a.IsActive; d["AccountSourceType"] = a.AccountSourceType; d["OpenDate"] = encoding_cast(a.OpenDate); d["CancelDate"] = encoding_cast(a.CancelDate); d["OperatorID"] = encoding_cast(a.OperatorID); d["OperateDate"] = encoding_cast(a.OperateDate); d["OperateTime"] = encoding_cast(a.OperateTime); d["CurrencyID"] = encoding_cast(a.CurrencyID); return d;});

	py::class_<CThostFtdcQryCurrDRIdentityField>(m, "CThostFtdcQryCurrDRIdentityField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryCurrDRIdentityField& a) {return CThostFtdcQryCurrDRIdentityField(a);})
		.def_readwrite("DRIdentityID", &CThostFtdcQryCurrDRIdentityField::DRIdentityID)
		.def("to_dict", [](const CThostFtdcQryCurrDRIdentityField& a) {py::dict d; d["DRIdentityID"] = a.DRIdentityID; return d;});

	py::class_<CThostFtdcCurrDRIdentityField>(m, "CThostFtdcCurrDRIdentityField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcCurrDRIdentityField& a) {return CThostFtdcCurrDRIdentityField(a);})
		.def_readwrite("DRIdentityID", &CThostFtdcCurrDRIdentityField::DRIdentityID)
		.def("to_dict", [](const CThostFtdcCurrDRIdentityField& a) {py::dict d; d["DRIdentityID"] = a.DRIdentityID; return d;});

	py::class_<CThostFtdcQrySecAgentCheckModeField>(m, "CThostFtdcQrySecAgentCheckModeField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQrySecAgentCheckModeField& a) {return CThostFtdcQrySecAgentCheckModeField(a);})
		.def_property("BrokerID", [](const CThostFtdcQrySecAgentCheckModeField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcQrySecAgentCheckModeField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcQrySecAgentCheckModeField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcQrySecAgentCheckModeField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def("to_dict", [](const CThostFtdcQrySecAgentCheckModeField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); return d;});

	py::class_<CThostFtdcQrySecAgentTradeInfoField>(m, "CThostFtdcQrySecAgentTradeInfoField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQrySecAgentTradeInfoField& a) {return CThostFtdcQrySecAgentTradeInfoField(a);})
		.def_property("BrokerID", [](const CThostFtdcQrySecAgentTradeInfoField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcQrySecAgentTradeInfoField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("BrokerSecAgentID", [](const CThostFtdcQrySecAgentTradeInfoField& a) {return encoding_cast(a.BrokerSecAgentID);}, [](CThostFtdcQrySecAgentTradeInfoField& a, char c[]) {strcpy(a.BrokerSecAgentID, c);})
		.def("to_dict", [](const CThostFtdcQrySecAgentTradeInfoField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["BrokerSecAgentID"] = encoding_cast(a.BrokerSecAgentID); return d;});

	py::class_<CThostFtdcReqUserAuthMethodField>(m, "CThostFtdcReqUserAuthMethodField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcReqUserAuthMethodField& a) {return CThostFtdcReqUserAuthMethodField(a);})
		.def_property("TradingDay", [](const CThostFtdcReqUserAuthMethodField& a) {return encoding_cast(a.TradingDay);}, [](CThostFtdcReqUserAuthMethodField& a, char c[]) {strcpy(a.TradingDay, c);})
		.def_property("BrokerID", [](const CThostFtdcReqUserAuthMethodField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcReqUserAuthMethodField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("UserID", [](const CThostFtdcReqUserAuthMethodField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcReqUserAuthMethodField& a, char c[]) {strcpy(a.UserID, c);})
		.def("to_dict", [](const CThostFtdcReqUserAuthMethodField& a) {py::dict d; d["TradingDay"] = encoding_cast(a.TradingDay); d["BrokerID"] = encoding_cast(a.BrokerID); d["UserID"] = encoding_cast(a.UserID); return d;});

	py::class_<CThostFtdcRspUserAuthMethodField>(m, "CThostFtdcRspUserAuthMethodField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcRspUserAuthMethodField& a) {return CThostFtdcRspUserAuthMethodField(a);})
		.def_readwrite("UsableAuthMethod", &CThostFtdcRspUserAuthMethodField::UsableAuthMethod)
		.def("to_dict", [](const CThostFtdcRspUserAuthMethodField& a) {py::dict d; d["UsableAuthMethod"] = a.UsableAuthMethod; return d;});

	py::class_<CThostFtdcReqGenUserCaptchaField>(m, "CThostFtdcReqGenUserCaptchaField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcReqGenUserCaptchaField& a) {return CThostFtdcReqGenUserCaptchaField(a);})
		.def_property("TradingDay", [](const CThostFtdcReqGenUserCaptchaField& a) {return encoding_cast(a.TradingDay);}, [](CThostFtdcReqGenUserCaptchaField& a, char c[]) {strcpy(a.TradingDay, c);})
		.def_property("BrokerID", [](const CThostFtdcReqGenUserCaptchaField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcReqGenUserCaptchaField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("UserID", [](const CThostFtdcReqGenUserCaptchaField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcReqGenUserCaptchaField& a, char c[]) {strcpy(a.UserID, c);})
		.def("to_dict", [](const CThostFtdcReqGenUserCaptchaField& a) {py::dict d; d["TradingDay"] = encoding_cast(a.TradingDay); d["BrokerID"] = encoding_cast(a.BrokerID); d["UserID"] = encoding_cast(a.UserID); return d;});

	py::class_<CThostFtdcRspGenUserCaptchaField>(m, "CThostFtdcRspGenUserCaptchaField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcRspGenUserCaptchaField& a) {return CThostFtdcRspGenUserCaptchaField(a);})
		.def_property("BrokerID", [](const CThostFtdcRspGenUserCaptchaField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcRspGenUserCaptchaField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("UserID", [](const CThostFtdcRspGenUserCaptchaField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcRspGenUserCaptchaField& a, char c[]) {strcpy(a.UserID, c);})
		.def_readwrite("CaptchaInfoLen", &CThostFtdcRspGenUserCaptchaField::CaptchaInfoLen)
		.def_property("CaptchaInfo", [](const CThostFtdcRspGenUserCaptchaField& a) {return encoding_cast(a.CaptchaInfo);}, [](CThostFtdcRspGenUserCaptchaField& a, char c[]) {strcpy(a.CaptchaInfo, c);})
		.def("to_dict", [](const CThostFtdcRspGenUserCaptchaField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["UserID"] = encoding_cast(a.UserID); d["CaptchaInfoLen"] = a.CaptchaInfoLen; d["CaptchaInfo"] = encoding_cast(a.CaptchaInfo); return d;});

	py::class_<CThostFtdcReqGenUserTextField>(m, "CThostFtdcReqGenUserTextField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcReqGenUserTextField& a) {return CThostFtdcReqGenUserTextField(a);})
		.def_property("TradingDay", [](const CThostFtdcReqGenUserTextField& a) {return encoding_cast(a.TradingDay);}, [](CThostFtdcReqGenUserTextField& a, char c[]) {strcpy(a.TradingDay, c);})
		.def_property("BrokerID", [](const CThostFtdcReqGenUserTextField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcReqGenUserTextField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("UserID", [](const CThostFtdcReqGenUserTextField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcReqGenUserTextField& a, char c[]) {strcpy(a.UserID, c);})
		.def("to_dict", [](const CThostFtdcReqGenUserTextField& a) {py::dict d; d["TradingDay"] = encoding_cast(a.TradingDay); d["BrokerID"] = encoding_cast(a.BrokerID); d["UserID"] = encoding_cast(a.UserID); return d;});

	py::class_<CThostFtdcRspGenUserTextField>(m, "CThostFtdcRspGenUserTextField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcRspGenUserTextField& a) {return CThostFtdcRspGenUserTextField(a);})
		.def_readwrite("UserTextSeq", &CThostFtdcRspGenUserTextField::UserTextSeq)
		.def("to_dict", [](const CThostFtdcRspGenUserTextField& a) {py::dict d; d["UserTextSeq"] = a.UserTextSeq; return d;});

	py::class_<CThostFtdcReqUserLoginWithCaptchaField>(m, "CThostFtdcReqUserLoginWithCaptchaField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcReqUserLoginWithCaptchaField& a) {return CThostFtdcReqUserLoginWithCaptchaField(a);})
		.def_property("TradingDay", [](const CThostFtdcReqUserLoginWithCaptchaField& a) {return encoding_cast(a.TradingDay);}, [](CThostFtdcReqUserLoginWithCaptchaField& a, char c[]) {strcpy(a.TradingDay, c);})
		.def_property("BrokerID", [](const CThostFtdcReqUserLoginWithCaptchaField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcReqUserLoginWithCaptchaField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("UserID", [](const CThostFtdcReqUserLoginWithCaptchaField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcReqUserLoginWithCaptchaField& a, char c[]) {strcpy(a.UserID, c);})
		.def_property("Password", [](const CThostFtdcReqUserLoginWithCaptchaField& a) {return encoding_cast(a.Password);}, [](CThostFtdcReqUserLoginWithCaptchaField& a, char c[]) {strcpy(a.Password, c);})
		.def_property("UserProductInfo", [](const CThostFtdcReqUserLoginWithCaptchaField& a) {return encoding_cast(a.UserProductInfo);}, [](CThostFtdcReqUserLoginWithCaptchaField& a, char c[]) {strcpy(a.UserProductInfo, c);})
		.def_property("InterfaceProductInfo", [](const CThostFtdcReqUserLoginWithCaptchaField& a) {return encoding_cast(a.InterfaceProductInfo);}, [](CThostFtdcReqUserLoginWithCaptchaField& a, char c[]) {strcpy(a.InterfaceProductInfo, c);})
		.def_property("ProtocolInfo", [](const CThostFtdcReqUserLoginWithCaptchaField& a) {return encoding_cast(a.ProtocolInfo);}, [](CThostFtdcReqUserLoginWithCaptchaField& a, char c[]) {strcpy(a.ProtocolInfo, c);})
		.def_property("MacAddress", [](const CThostFtdcReqUserLoginWithCaptchaField& a) {return encoding_cast(a.MacAddress);}, [](CThostFtdcReqUserLoginWithCaptchaField& a, char c[]) {strcpy(a.MacAddress, c);})
		.def_property("reserve1", [](const CThostFtdcReqUserLoginWithCaptchaField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcReqUserLoginWithCaptchaField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("LoginRemark", [](const CThostFtdcReqUserLoginWithCaptchaField& a) {return encoding_cast(a.LoginRemark);}, [](CThostFtdcReqUserLoginWithCaptchaField& a, char c[]) {strcpy(a.LoginRemark, c);})
		.def_property("Captcha", [](const CThostFtdcReqUserLoginWithCaptchaField& a) {return encoding_cast(a.Captcha);}, [](CThostFtdcReqUserLoginWithCaptchaField& a, char c[]) {strcpy(a.Captcha, c);})
		.def_readwrite("ClientIPPort", &CThostFtdcReqUserLoginWithCaptchaField::ClientIPPort)
		.def_property("ClientIPAddress", [](const CThostFtdcReqUserLoginWithCaptchaField& a) {return encoding_cast(a.ClientIPAddress);}, [](CThostFtdcReqUserLoginWithCaptchaField& a, char c[]) {strcpy(a.ClientIPAddress, c);})
		.def("to_dict", [](const CThostFtdcReqUserLoginWithCaptchaField& a) {py::dict d; d["TradingDay"] = encoding_cast(a.TradingDay); d["BrokerID"] = encoding_cast(a.BrokerID); d["UserID"] = encoding_cast(a.UserID); d["Password"] = encoding_cast(a.Password); d["UserProductInfo"] = encoding_cast(a.UserProductInfo); d["InterfaceProductInfo"] = encoding_cast(a.InterfaceProductInfo); d["ProtocolInfo"] = encoding_cast(a.ProtocolInfo); d["MacAddress"] = encoding_cast(a.MacAddress); d["reserve1"] = encoding_cast(a.reserve1); d["LoginRemark"] = encoding_cast(a.LoginRemark); d["Captcha"] = encoding_cast(a.Captcha); d["ClientIPPort"] = a.ClientIPPort; d["ClientIPAddress"] = encoding_cast(a.ClientIPAddress); return d;});

	py::class_<CThostFtdcReqUserLoginWithTextField>(m, "CThostFtdcReqUserLoginWithTextField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcReqUserLoginWithTextField& a) {return CThostFtdcReqUserLoginWithTextField(a);})
		.def_property("TradingDay", [](const CThostFtdcReqUserLoginWithTextField& a) {return encoding_cast(a.TradingDay);}, [](CThostFtdcReqUserLoginWithTextField& a, char c[]) {strcpy(a.TradingDay, c);})
		.def_property("BrokerID", [](const CThostFtdcReqUserLoginWithTextField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcReqUserLoginWithTextField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("UserID", [](const CThostFtdcReqUserLoginWithTextField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcReqUserLoginWithTextField& a, char c[]) {strcpy(a.UserID, c);})
		.def_property("Password", [](const CThostFtdcReqUserLoginWithTextField& a) {return encoding_cast(a.Password);}, [](CThostFtdcReqUserLoginWithTextField& a, char c[]) {strcpy(a.Password, c);})
		.def_property("UserProductInfo", [](const CThostFtdcReqUserLoginWithTextField& a) {return encoding_cast(a.UserProductInfo);}, [](CThostFtdcReqUserLoginWithTextField& a, char c[]) {strcpy(a.UserProductInfo, c);})
		.def_property("InterfaceProductInfo", [](const CThostFtdcReqUserLoginWithTextField& a) {return encoding_cast(a.InterfaceProductInfo);}, [](CThostFtdcReqUserLoginWithTextField& a, char c[]) {strcpy(a.InterfaceProductInfo, c);})
		.def_property("ProtocolInfo", [](const CThostFtdcReqUserLoginWithTextField& a) {return encoding_cast(a.ProtocolInfo);}, [](CThostFtdcReqUserLoginWithTextField& a, char c[]) {strcpy(a.ProtocolInfo, c);})
		.def_property("MacAddress", [](const CThostFtdcReqUserLoginWithTextField& a) {return encoding_cast(a.MacAddress);}, [](CThostFtdcReqUserLoginWithTextField& a, char c[]) {strcpy(a.MacAddress, c);})
		.def_property("reserve1", [](const CThostFtdcReqUserLoginWithTextField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcReqUserLoginWithTextField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("LoginRemark", [](const CThostFtdcReqUserLoginWithTextField& a) {return encoding_cast(a.LoginRemark);}, [](CThostFtdcReqUserLoginWithTextField& a, char c[]) {strcpy(a.LoginRemark, c);})
		.def_property("Text", [](const CThostFtdcReqUserLoginWithTextField& a) {return encoding_cast(a.Text);}, [](CThostFtdcReqUserLoginWithTextField& a, char c[]) {strcpy(a.Text, c);})
		.def_readwrite("ClientIPPort", &CThostFtdcReqUserLoginWithTextField::ClientIPPort)
		.def_property("ClientIPAddress", [](const CThostFtdcReqUserLoginWithTextField& a) {return encoding_cast(a.ClientIPAddress);}, [](CThostFtdcReqUserLoginWithTextField& a, char c[]) {strcpy(a.ClientIPAddress, c);})
		.def("to_dict", [](const CThostFtdcReqUserLoginWithTextField& a) {py::dict d; d["TradingDay"] = encoding_cast(a.TradingDay); d["BrokerID"] = encoding_cast(a.BrokerID); d["UserID"] = encoding_cast(a.UserID); d["Password"] = encoding_cast(a.Password); d["UserProductInfo"] = encoding_cast(a.UserProductInfo); d["InterfaceProductInfo"] = encoding_cast(a.InterfaceProductInfo); d["ProtocolInfo"] = encoding_cast(a.ProtocolInfo); d["MacAddress"] = encoding_cast(a.MacAddress); d["reserve1"] = encoding_cast(a.reserve1); d["LoginRemark"] = encoding_cast(a.LoginRemark); d["Text"] = encoding_cast(a.Text); d["ClientIPPort"] = a.ClientIPPort; d["ClientIPAddress"] = encoding_cast(a.ClientIPAddress); return d;});

	py::class_<CThostFtdcReqUserLoginWithOTPField>(m, "CThostFtdcReqUserLoginWithOTPField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcReqUserLoginWithOTPField& a) {return CThostFtdcReqUserLoginWithOTPField(a);})
		.def_property("TradingDay", [](const CThostFtdcReqUserLoginWithOTPField& a) {return encoding_cast(a.TradingDay);}, [](CThostFtdcReqUserLoginWithOTPField& a, char c[]) {strcpy(a.TradingDay, c);})
		.def_property("BrokerID", [](const CThostFtdcReqUserLoginWithOTPField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcReqUserLoginWithOTPField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("UserID", [](const CThostFtdcReqUserLoginWithOTPField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcReqUserLoginWithOTPField& a, char c[]) {strcpy(a.UserID, c);})
		.def_property("Password", [](const CThostFtdcReqUserLoginWithOTPField& a) {return encoding_cast(a.Password);}, [](CThostFtdcReqUserLoginWithOTPField& a, char c[]) {strcpy(a.Password, c);})
		.def_property("UserProductInfo", [](const CThostFtdcReqUserLoginWithOTPField& a) {return encoding_cast(a.UserProductInfo);}, [](CThostFtdcReqUserLoginWithOTPField& a, char c[]) {strcpy(a.UserProductInfo, c);})
		.def_property("InterfaceProductInfo", [](const CThostFtdcReqUserLoginWithOTPField& a) {return encoding_cast(a.InterfaceProductInfo);}, [](CThostFtdcReqUserLoginWithOTPField& a, char c[]) {strcpy(a.InterfaceProductInfo, c);})
		.def_property("ProtocolInfo", [](const CThostFtdcReqUserLoginWithOTPField& a) {return encoding_cast(a.ProtocolInfo);}, [](CThostFtdcReqUserLoginWithOTPField& a, char c[]) {strcpy(a.ProtocolInfo, c);})
		.def_property("MacAddress", [](const CThostFtdcReqUserLoginWithOTPField& a) {return encoding_cast(a.MacAddress);}, [](CThostFtdcReqUserLoginWithOTPField& a, char c[]) {strcpy(a.MacAddress, c);})
		.def_property("reserve1", [](const CThostFtdcReqUserLoginWithOTPField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcReqUserLoginWithOTPField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("LoginRemark", [](const CThostFtdcReqUserLoginWithOTPField& a) {return encoding_cast(a.LoginRemark);}, [](CThostFtdcReqUserLoginWithOTPField& a, char c[]) {strcpy(a.LoginRemark, c);})
		.def_property("OTPPassword", [](const CThostFtdcReqUserLoginWithOTPField& a) {return encoding_cast(a.OTPPassword);}, [](CThostFtdcReqUserLoginWithOTPField& a, char c[]) {strcpy(a.OTPPassword, c);})
		.def_readwrite("ClientIPPort", &CThostFtdcReqUserLoginWithOTPField::ClientIPPort)
		.def_property("ClientIPAddress", [](const CThostFtdcReqUserLoginWithOTPField& a) {return encoding_cast(a.ClientIPAddress);}, [](CThostFtdcReqUserLoginWithOTPField& a, char c[]) {strcpy(a.ClientIPAddress, c);})
		.def("to_dict", [](const CThostFtdcReqUserLoginWithOTPField& a) {py::dict d; d["TradingDay"] = encoding_cast(a.TradingDay); d["BrokerID"] = encoding_cast(a.BrokerID); d["UserID"] = encoding_cast(a.UserID); d["Password"] = encoding_cast(a.Password); d["UserProductInfo"] = encoding_cast(a.UserProductInfo); d["InterfaceProductInfo"] = encoding_cast(a.InterfaceProductInfo); d["ProtocolInfo"] = encoding_cast(a.ProtocolInfo); d["MacAddress"] = encoding_cast(a.MacAddress); d["reserve1"] = encoding_cast(a.reserve1); d["LoginRemark"] = encoding_cast(a.LoginRemark); d["OTPPassword"] = encoding_cast(a.OTPPassword); d["ClientIPPort"] = a.ClientIPPort; d["ClientIPAddress"] = encoding_cast(a.ClientIPAddress); return d;});

	py::class_<CThostFtdcReqApiHandshakeField>(m, "CThostFtdcReqApiHandshakeField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcReqApiHandshakeField& a) {return CThostFtdcReqApiHandshakeField(a);})
		.def_property("CryptoKeyVersion", [](const CThostFtdcReqApiHandshakeField& a) {return encoding_cast(a.CryptoKeyVersion);}, [](CThostFtdcReqApiHandshakeField& a, char c[]) {strcpy(a.CryptoKeyVersion, c);})
		.def("to_dict", [](const CThostFtdcReqApiHandshakeField& a) {py::dict d; d["CryptoKeyVersion"] = encoding_cast(a.CryptoKeyVersion); return d;});

	py::class_<CThostFtdcRspApiHandshakeField>(m, "CThostFtdcRspApiHandshakeField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcRspApiHandshakeField& a) {return CThostFtdcRspApiHandshakeField(a);})
		.def_readwrite("FrontHandshakeDataLen", &CThostFtdcRspApiHandshakeField::FrontHandshakeDataLen)
		.def_property("FrontHandshakeData", [](const CThostFtdcRspApiHandshakeField& a) {return encoding_cast(a.FrontHandshakeData);}, [](CThostFtdcRspApiHandshakeField& a, char c[]) {strcpy(a.FrontHandshakeData, c);})
		.def_readwrite("IsApiAuthEnabled", &CThostFtdcRspApiHandshakeField::IsApiAuthEnabled)
		.def("to_dict", [](const CThostFtdcRspApiHandshakeField& a) {py::dict d; d["FrontHandshakeDataLen"] = a.FrontHandshakeDataLen; d["FrontHandshakeData"] = encoding_cast(a.FrontHandshakeData); d["IsApiAuthEnabled"] = a.IsApiAuthEnabled; return d;});

	py::class_<CThostFtdcReqVerifyApiKeyField>(m, "CThostFtdcReqVerifyApiKeyField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcReqVerifyApiKeyField& a) {return CThostFtdcReqVerifyApiKeyField(a);})
		.def_readwrite("ApiHandshakeDataLen", &CThostFtdcReqVerifyApiKeyField::ApiHandshakeDataLen)
		.def_property("ApiHandshakeData", [](const CThostFtdcReqVerifyApiKeyField& a) {return encoding_cast(a.ApiHandshakeData);}, [](CThostFtdcReqVerifyApiKeyField& a, char c[]) {strcpy(a.ApiHandshakeData, c);})
		.def("to_dict", [](const CThostFtdcReqVerifyApiKeyField& a) {py::dict d; d["ApiHandshakeDataLen"] = a.ApiHandshakeDataLen; d["ApiHandshakeData"] = encoding_cast(a.ApiHandshakeData); return d;});

	py::class_<CThostFtdcDepartmentUserField>(m, "CThostFtdcDepartmentUserField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcDepartmentUserField& a) {return CThostFtdcDepartmentUserField(a);})
		.def_property("BrokerID", [](const CThostFtdcDepartmentUserField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcDepartmentUserField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("UserID", [](const CThostFtdcDepartmentUserField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcDepartmentUserField& a, char c[]) {strcpy(a.UserID, c);})
		.def_readwrite("InvestorRange", &CThostFtdcDepartmentUserField::InvestorRange)
		.def_property("InvestorID", [](const CThostFtdcDepartmentUserField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcDepartmentUserField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def("to_dict", [](const CThostFtdcDepartmentUserField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["UserID"] = encoding_cast(a.UserID); d["InvestorRange"] = a.InvestorRange; d["InvestorID"] = encoding_cast(a.InvestorID); return d;});

	py::class_<CThostFtdcQueryFreqField>(m, "CThostFtdcQueryFreqField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQueryFreqField& a) {return CThostFtdcQueryFreqField(a);})
		.def_readwrite("QueryFreq", &CThostFtdcQueryFreqField::QueryFreq)
		.def("to_dict", [](const CThostFtdcQueryFreqField& a) {py::dict d; d["QueryFreq"] = a.QueryFreq; return d;});

	py::class_<CThostFtdcAuthForbiddenIPField>(m, "CThostFtdcAuthForbiddenIPField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcAuthForbiddenIPField& a) {return CThostFtdcAuthForbiddenIPField(a);})
		.def_property("reserve1", [](const CThostFtdcAuthForbiddenIPField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcAuthForbiddenIPField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("IPAddress", [](const CThostFtdcAuthForbiddenIPField& a) {return encoding_cast(a.IPAddress);}, [](CThostFtdcAuthForbiddenIPField& a, char c[]) {strcpy(a.IPAddress, c);})
		.def("to_dict", [](const CThostFtdcAuthForbiddenIPField& a) {py::dict d; d["reserve1"] = encoding_cast(a.reserve1); d["IPAddress"] = encoding_cast(a.IPAddress); return d;});

	py::class_<CThostFtdcQryAuthForbiddenIPField>(m, "CThostFtdcQryAuthForbiddenIPField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryAuthForbiddenIPField& a) {return CThostFtdcQryAuthForbiddenIPField(a);})
		.def_property("reserve1", [](const CThostFtdcQryAuthForbiddenIPField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcQryAuthForbiddenIPField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_property("IPAddress", [](const CThostFtdcQryAuthForbiddenIPField& a) {return encoding_cast(a.IPAddress);}, [](CThostFtdcQryAuthForbiddenIPField& a, char c[]) {strcpy(a.IPAddress, c);})
		.def("to_dict", [](const CThostFtdcQryAuthForbiddenIPField& a) {py::dict d; d["reserve1"] = encoding_cast(a.reserve1); d["IPAddress"] = encoding_cast(a.IPAddress); return d;});

	py::class_<CThostFtdcSyncDelaySwapFrozenField>(m, "CThostFtdcSyncDelaySwapFrozenField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcSyncDelaySwapFrozenField& a) {return CThostFtdcSyncDelaySwapFrozenField(a);})
		.def_property("DelaySwapSeqNo", [](const CThostFtdcSyncDelaySwapFrozenField& a) {return encoding_cast(a.DelaySwapSeqNo);}, [](CThostFtdcSyncDelaySwapFrozenField& a, char c[]) {strcpy(a.DelaySwapSeqNo, c);})
		.def_property("BrokerID", [](const CThostFtdcSyncDelaySwapFrozenField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcSyncDelaySwapFrozenField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("InvestorID", [](const CThostFtdcSyncDelaySwapFrozenField& a) {return encoding_cast(a.InvestorID);}, [](CThostFtdcSyncDelaySwapFrozenField& a, char c[]) {strcpy(a.InvestorID, c);})
		.def_property("FromCurrencyID", [](const CThostFtdcSyncDelaySwapFrozenField& a) {return encoding_cast(a.FromCurrencyID);}, [](CThostFtdcSyncDelaySwapFrozenField& a, char c[]) {strcpy(a.FromCurrencyID, c);})
		.def_readwrite("FromRemainSwap", &CThostFtdcSyncDelaySwapFrozenField::FromRemainSwap)
		.def_readwrite("IsManualSwap", &CThostFtdcSyncDelaySwapFrozenField::IsManualSwap)
		.def("to_dict", [](const CThostFtdcSyncDelaySwapFrozenField& a) {py::dict d; d["DelaySwapSeqNo"] = encoding_cast(a.DelaySwapSeqNo); d["BrokerID"] = encoding_cast(a.BrokerID); d["InvestorID"] = encoding_cast(a.InvestorID); d["FromCurrencyID"] = encoding_cast(a.FromCurrencyID); d["FromRemainSwap"] = a.FromRemainSwap; d["IsManualSwap"] = a.IsManualSwap; return d;});

	py::class_<CThostFtdcUserSystemInfoField>(m, "CThostFtdcUserSystemInfoField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcUserSystemInfoField& a) {return CThostFtdcUserSystemInfoField(a);})
		.def_property("BrokerID", [](const CThostFtdcUserSystemInfoField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcUserSystemInfoField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("UserID", [](const CThostFtdcUserSystemInfoField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcUserSystemInfoField& a, char c[]) {strcpy(a.UserID, c);})
		.def_readwrite("ClientSystemInfoLen", &CThostFtdcUserSystemInfoField::ClientSystemInfoLen)
		.def_property("ClientSystemInfo", [](const CThostFtdcUserSystemInfoField& a) {return encoding_cast(a.ClientSystemInfo);}, [](CThostFtdcUserSystemInfoField& a, char c[]) {strcpy(a.ClientSystemInfo, c);})
		.def_property("reserve1", [](const CThostFtdcUserSystemInfoField& a) {return encoding_cast(a.reserve1);}, [](CThostFtdcUserSystemInfoField& a, char c[]) {strcpy(a.reserve1, c);})
		.def_readwrite("ClientIPPort", &CThostFtdcUserSystemInfoField::ClientIPPort)
		.def_property("ClientLoginTime", [](const CThostFtdcUserSystemInfoField& a) {return encoding_cast(a.ClientLoginTime);}, [](CThostFtdcUserSystemInfoField& a, char c[]) {strcpy(a.ClientLoginTime, c);})
		.def_property("ClientAppID", [](const CThostFtdcUserSystemInfoField& a) {return encoding_cast(a.ClientAppID);}, [](CThostFtdcUserSystemInfoField& a, char c[]) {strcpy(a.ClientAppID, c);})
		.def_property("ClientPublicIP", [](const CThostFtdcUserSystemInfoField& a) {return encoding_cast(a.ClientPublicIP);}, [](CThostFtdcUserSystemInfoField& a, char c[]) {strcpy(a.ClientPublicIP, c);})
		.def("to_dict", [](const CThostFtdcUserSystemInfoField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["UserID"] = encoding_cast(a.UserID); d["ClientSystemInfoLen"] = a.ClientSystemInfoLen; d["ClientSystemInfo"] = encoding_cast(a.ClientSystemInfo); d["reserve1"] = encoding_cast(a.reserve1); d["ClientIPPort"] = a.ClientIPPort; d["ClientLoginTime"] = encoding_cast(a.ClientLoginTime); d["ClientAppID"] = encoding_cast(a.ClientAppID); d["ClientPublicIP"] = encoding_cast(a.ClientPublicIP); return d;});

	py::class_<CThostFtdcAuthUserIDField>(m, "CThostFtdcAuthUserIDField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcAuthUserIDField& a) {return CThostFtdcAuthUserIDField(a);})
		.def_property("BrokerID", [](const CThostFtdcAuthUserIDField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcAuthUserIDField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("AppID", [](const CThostFtdcAuthUserIDField& a) {return encoding_cast(a.AppID);}, [](CThostFtdcAuthUserIDField& a, char c[]) {strcpy(a.AppID, c);})
		.def_property("UserID", [](const CThostFtdcAuthUserIDField& a) {return encoding_cast(a.UserID);}, [](CThostFtdcAuthUserIDField& a, char c[]) {strcpy(a.UserID, c);})
		.def_readwrite("AuthType", &CThostFtdcAuthUserIDField::AuthType)
		.def("to_dict", [](const CThostFtdcAuthUserIDField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["AppID"] = encoding_cast(a.AppID); d["UserID"] = encoding_cast(a.UserID); d["AuthType"] = a.AuthType; return d;});

	py::class_<CThostFtdcAuthIPField>(m, "CThostFtdcAuthIPField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcAuthIPField& a) {return CThostFtdcAuthIPField(a);})
		.def_property("BrokerID", [](const CThostFtdcAuthIPField& a) {return encoding_cast(a.BrokerID);}, [](CThostFtdcAuthIPField& a, char c[]) {strcpy(a.BrokerID, c);})
		.def_property("AppID", [](const CThostFtdcAuthIPField& a) {return encoding_cast(a.AppID);}, [](CThostFtdcAuthIPField& a, char c[]) {strcpy(a.AppID, c);})
		.def_property("IPAddress", [](const CThostFtdcAuthIPField& a) {return encoding_cast(a.IPAddress);}, [](CThostFtdcAuthIPField& a, char c[]) {strcpy(a.IPAddress, c);})
		.def("to_dict", [](const CThostFtdcAuthIPField& a) {py::dict d; d["BrokerID"] = encoding_cast(a.BrokerID); d["AppID"] = encoding_cast(a.AppID); d["IPAddress"] = encoding_cast(a.IPAddress); return d;});

	py::class_<CThostFtdcQryClassifiedInstrumentField>(m, "CThostFtdcQryClassifiedInstrumentField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryClassifiedInstrumentField& a) {return CThostFtdcQryClassifiedInstrumentField(a);})
		.def_property("InstrumentID", [](const CThostFtdcQryClassifiedInstrumentField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcQryClassifiedInstrumentField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def_property("ExchangeID", [](const CThostFtdcQryClassifiedInstrumentField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcQryClassifiedInstrumentField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("ExchangeInstID", [](const CThostFtdcQryClassifiedInstrumentField& a) {return encoding_cast(a.ExchangeInstID);}, [](CThostFtdcQryClassifiedInstrumentField& a, char c[]) {strcpy(a.ExchangeInstID, c);})
		.def_property("ProductID", [](const CThostFtdcQryClassifiedInstrumentField& a) {return encoding_cast(a.ProductID);}, [](CThostFtdcQryClassifiedInstrumentField& a, char c[]) {strcpy(a.ProductID, c);})
		.def_readwrite("TradingType", &CThostFtdcQryClassifiedInstrumentField::TradingType)
		.def_readwrite("ClassType", &CThostFtdcQryClassifiedInstrumentField::ClassType)
		.def("to_dict", [](const CThostFtdcQryClassifiedInstrumentField& a) {py::dict d; d["InstrumentID"] = encoding_cast(a.InstrumentID); d["ExchangeID"] = encoding_cast(a.ExchangeID); d["ExchangeInstID"] = encoding_cast(a.ExchangeInstID); d["ProductID"] = encoding_cast(a.ProductID); d["TradingType"] = a.TradingType; d["ClassType"] = a.ClassType; return d;});

	py::class_<CThostFtdcQryCombPromotionParamField>(m, "CThostFtdcQryCombPromotionParamField")
		.def(py::init<>())
		.def("__copy__", [](const CThostFtdcQryCombPromotionParamField& a) {return CThostFtdcQryCombPromotionParamField(a);})
		.def_property("ExchangeID", [](const CThostFtdcQryCombPromotionParamField& a) {return encoding_cast(a.ExchangeID);}, [](CThostFtdcQryCombPromotionParamField& a, char c[]) {strcpy(a.ExchangeID, c);})
		.def_property("InstrumentID", [](const CThostFtdcQryCombPromotionParamField& a) {return encoding_cast(a.InstrumentID);}, [](CThostFtdcQryCombPromotionParamField& a, char c[]) {strcpy(a.InstrumentID, c);})
		.def("to_dict", [](const CThostFtdcQryCombPromotionParamField& a) {py::dict d; d["ExchangeID"] = encoding_cast(a.ExchangeID); d["InstrumentID"] = encoding_cast(a.InstrumentID); return d;});

}
